//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "NSMapTable.h"

__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable
{
    struct NSSlice keys;	// 8 = 0x8
    struct NSSlice values;	// 40 = 0x28
    unsigned long long count;	// 72 = 0x48
    unsigned long long capacity;	// 80 = 0x50
    unsigned long long keyOptions;	// 88 = 0x58
    unsigned long long valueOptions;	// 96 = 0x60
    unsigned long long mutations;	// 104 = 0x68
    struct os_unfair_lock_s growLock;	// 112 = 0x70
    _Bool shouldRehash;	// 116 = 0x74
    _Bool hasDynamicSlices;	// 117 = 0x75
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00600000007f4c4e
- (id)allValues;	// IMP=0x00000000007f73c7
- (id)allKeys;	// IMP=0x00000000007f72cc
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000007f7189
- (unsigned long long)hash;	// IMP=0x00000000007f7151
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;	// IMP=0x00000000007f703b
- (id)objectEnumerator;	// IMP=0x00000000007f701f
- (id)keyEnumerator;	// IMP=0x00000000007f6fe9
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000007f6efc
- (id)description;	// IMP=0x00000000007f6da6
- (void)dealloc;	// IMP=0x00000000007f6ca9
- (void)removeAllItems;	// IMP=0x00000000007f6be0
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000000007f6aa3
- (void)_reclaim;	// IMP=0x00000000007f6a99
- (void)rehash;	// IMP=0x00000000007f6a0d
- (unsigned long long)rehashAround:(unsigned long long)arg1;	// IMP=0x00000000007f6766
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;	// IMP=0x00000000007f66a1
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;	// IMP=0x00000000007f65b8
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000007f64b6
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;	// IMP=0x00000000007f63b9
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000007f62e5
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000007f620b
- (id)objectForKey:(id)arg1;	// IMP=0x00000000007f6175
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(_Bool)arg4;	// IMP=0x00000000007f6065
- (void)grow;	// IMP=0x00000000007f5d17
- (id)dump;	// IMP=0x00000000007f5aa5
- (_Bool)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000007f5612
- (unsigned long long)__capacity;	// IMP=0x00000000007f5601
- (unsigned long long)count;	// IMP=0x00000000007f55ac
- (id)valuePointerFunctions;	// IMP=0x00000000007f556e
- (id)keyPointerFunctions;	// IMP=0x00000000007f5530
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000007f510b
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000007f4c56
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000007f4ab4
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000007f491b
- (id)copy;	// IMP=0x00000000007f46b4
- (void)_setBackingStore;	// IMP=0x00000000007f4605
- (void)checkCount:(const char *)arg1;	// IMP=0x00000000007f457c
- (unsigned long long)realCount;	// IMP=0x00000000007f44a9
- (void)raiseCountUnderflowException;	// IMP=0x00000000007f4458
- (id)init;	// IMP=0x00000000007f443c

@end

