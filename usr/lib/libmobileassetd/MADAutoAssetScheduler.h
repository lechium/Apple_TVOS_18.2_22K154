//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MADAutoAssetPersisted, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSTimer, SUCoreLog;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MADAutoAssetScheduler : NSObject
{
    _Bool _globalActivityInterval;	// 8 = 0x8
    _Bool _tickerIntervalReRegistering;	// 9 = 0x9
    _Bool _activityTickerFired;	// 10 = 0xa
    SUCoreLog *_logger;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_schedulerQueue;	// 24 = 0x18
    MADAutoAssetPersisted *_persistedState;	// 32 = 0x20
    NSMutableArray *_jobsAwaitingTrigger;	// 40 = 0x28
    long long _jobsAwaitingPushTrigger;	// 48 = 0x30
    NSMutableDictionary *_jobsBySelector;	// 56 = 0x38
    long long _activityIntervalSecs;	// 64 = 0x40
    long long _tickerIntervalSecs;	// 72 = 0x48
    long long _pushDelaySecs;	// 80 = 0x50
    long long _pushCounter;	// 88 = 0x58
    long long _scheduledJobsXPCActivity;	// 96 = 0x60
    NSTimer *_scheduledJobsBackupTriggerTimer;	// 104 = 0x68
    long long _pushJobsXPCActivity;	// 112 = 0x70
    NSString *_lastTickTimestampString;	// 120 = 0x78
    NSSet *_schedulerIntervalHeightenedAssetTypes;	// 128 = 0x80
    NSSet *_schedulerIntervalAggressiveAssetTypes;	// 136 = 0x88
    NSMutableDictionary *_setConfigurations;	// 144 = 0x90
}

+ (void)setPersistedStateCaching:(_Bool)arg1;	// IMP=0x006000000003a3ad
+ (long long)_preferenceChosenTickerIntervalSecs;	// IMP=0x006000000003a379
+ (void)forceGlobalForget:(id)arg1;	// IMP=0x0060000000039795
+ (id)jobsAwaitingTrigger;	// IMP=0x0060000000039586
+ (void)addScheduledJobs:(id)arg1 basedOnControl:(id)arg2;	// IMP=0x0060000000039002
+ (_Bool)isSelector:(id)arg1 consideredEqualTo:(id)arg2;	// IMP=0x0060000000038d55
+ (long long)tickerIntervalForActivityIntervalSecs:(long long)arg1;	// IMP=0x0060000000038d10
+ (id)stringFromDate:(id)arg1;	// IMP=0x0060000000038c6b
+ (id)nameForXPCStatus:(long long)arg1;	// IMP=0x0060000000038c4c
+ (id)jobTypeName:(_Bool)arg1 setJob:(_Bool)arg2 requiringRetry:(_Bool)arg3;	// IMP=0x0060000000038c09
+ (id)persistedEntryIDForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2;	// IMP=0x006000000003715d
+ (id)migrateMismatchedPersistedStateVersion:(id)arg1 forEntryID:(id)arg2 withMismatchedState:(id)arg3;	// IMP=0x0060000000037155
+ (void)controlEliminateSetDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2 indicatingWhenEliminated:(_Bool)arg3;	// IMP=0x006000000002cafa
+ (void)controlEliminateSelector:(id)arg1;	// IMP=0x006000000002c86b
+ (void)schedulePushNotifications:(id)arg1;	// IMP=0x006000000002c689
+ (void)jobFinishedForSetDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2 withPotentialNetworkFailure:(_Bool)arg3;	// IMP=0x006000000002c396
+ (void)jobFinishedForSelector:(id)arg1 withPotentialNetworkFailure:(_Bool)arg2;	// IMP=0x006000000002c131
+ (void)triggerWithRetrySetDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2 usingSetUpdatePolicy:(id)arg3;	// IMP=0x006000000002bc5d
+ (void)scheduleSetDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2 usingSetUpdatePolicy:(id)arg3 forSetConfiguration:(id)arg4;	// IMP=0x006000000002b707
+ (void)scheduleSelector:(id)arg1 triggeringAtIntervalSecs:(long long)arg2;	// IMP=0x006000000002b484
+ (id)newSetPolicyForDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2;	// IMP=0x006000000002b1d8
+ (long long)persistedScheduledCount;	// IMP=0x006000000002aff7
+ (void)resumeFromPersisted:(id)arg1;	// IMP=0x0060000000029afd
+ (id)autoAssetScheduler;	// IMP=0x0060000000029aa8
+ (id)assetTypesAtAggressiveFrequency;	// IMP=0x0060000000029a78
+ (id)assetTypesAtHeightenedFrequency;	// IMP=0x0060000000029a48
+ (void)shutdown;	// IMP=0x00600000000292ce
- (void).cxx_destruct;	// IMP=0x000000000003a671
@property(retain, nonatomic) NSMutableDictionary *setConfigurations; // @synthesize setConfigurations=_setConfigurations;
@property(retain, nonatomic) NSSet *schedulerIntervalAggressiveAssetTypes; // @synthesize schedulerIntervalAggressiveAssetTypes=_schedulerIntervalAggressiveAssetTypes;
@property(retain, nonatomic) NSSet *schedulerIntervalHeightenedAssetTypes; // @synthesize schedulerIntervalHeightenedAssetTypes=_schedulerIntervalHeightenedAssetTypes;
@property(retain, nonatomic) NSString *lastTickTimestampString; // @synthesize lastTickTimestampString=_lastTickTimestampString;
@property(nonatomic) long long pushJobsXPCActivity; // @synthesize pushJobsXPCActivity=_pushJobsXPCActivity;
@property(retain, nonatomic) NSTimer *scheduledJobsBackupTriggerTimer; // @synthesize scheduledJobsBackupTriggerTimer=_scheduledJobsBackupTriggerTimer;
@property(nonatomic) long long scheduledJobsXPCActivity; // @synthesize scheduledJobsXPCActivity=_scheduledJobsXPCActivity;
@property(nonatomic) long long pushCounter; // @synthesize pushCounter=_pushCounter;
@property(nonatomic) long long pushDelaySecs; // @synthesize pushDelaySecs=_pushDelaySecs;
@property(nonatomic) _Bool activityTickerFired; // @synthesize activityTickerFired=_activityTickerFired;
@property(nonatomic) _Bool tickerIntervalReRegistering; // @synthesize tickerIntervalReRegistering=_tickerIntervalReRegistering;
@property(nonatomic) long long tickerIntervalSecs; // @synthesize tickerIntervalSecs=_tickerIntervalSecs;
@property(nonatomic) long long activityIntervalSecs; // @synthesize activityIntervalSecs=_activityIntervalSecs;
@property(nonatomic) _Bool globalActivityInterval; // @synthesize globalActivityInterval=_globalActivityInterval;
@property(retain, nonatomic) NSMutableDictionary *jobsBySelector; // @synthesize jobsBySelector=_jobsBySelector;
@property(nonatomic) long long jobsAwaitingPushTrigger; // @synthesize jobsAwaitingPushTrigger=_jobsAwaitingPushTrigger;
@property(retain, nonatomic) NSMutableArray *jobsAwaitingTrigger; // @synthesize jobsAwaitingTrigger=_jobsAwaitingTrigger;
@property(readonly, retain, nonatomic) MADAutoAssetPersisted *persistedState; // @synthesize persistedState=_persistedState;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *schedulerQueue; // @synthesize schedulerQueue=_schedulerQueue;
@property(readonly, retain, nonatomic) SUCoreLog *logger; // @synthesize logger=_logger;
- (id)summary;	// IMP=0x000000000003895f
- (id)description;	// IMP=0x000000000003894d
- (void)_logPersistedTableOfContents:(id)arg1;	// IMP=0x000000000003809a
- (void)_logPersistedRemovedEntry:(id)arg1 removedSelector:(id)arg2 message:(id)arg3;	// IMP=0x0000000000037d65
- (void)_logPersistedEntry:(id)arg1 operation:(id)arg2 persistingSelector:(id)arg3 intervalSecs:(long long)arg4 remainingSecs:(long long)arg5 pushedJob:(_Bool)arg6 setJob:(_Bool)arg7 setPolicy:(id)arg8 pushedPolicy:(id)arg9 requiringRetry:(_Bool)arg10 message:(id)arg11;	// IMP=0x00000000000377c8
- (void)_logPersistedConfigSet:(id)arg1 activityIntervalSecs:(long long)arg2 pushTriggerSecs:(long long)arg3 lastTickDate:(id)arg4 message:(id)arg5;	// IMP=0x00000000000374b5
- (void)_logPersistedConfigLoad:(id)arg1 activityIntervalSecs:(long long)arg2 pushTriggerSecs:(long long)arg3 lastTickDate:(id)arg4 message:(id)arg5;	// IMP=0x00000000000371d8
- (id)_markerForSelector:(id)arg1 andJob:(id)arg2;	// IMP=0x0000000000036e7a
- (id)_markerForSelector:(id)arg1;	// IMP=0x0000000000036e66
- (id)_currentlyScheduledMarkersRequiringRetry;	// IMP=0x0000000000036bd9
- (id)_currentlyScheduledMarkers;	// IMP=0x000000000003696e
- (void)_informConnectorActiveJobFinishedforSelector:(id)arg1 withPotentialNetworkFailure:(_Bool)arg2;	// IMP=0x00000000000368cb
- (void)_informConnectorTriggeredSelectors:(id)arg1 withTriggeredRequiringRetry:(id)arg2;	// IMP=0x00000000000364e1
- (void)_informConnectorAlteredSelectors;	// IMP=0x0000000000036461
- (void)_resumeConnector;	// IMP=0x00000000000363c5
- (id)defaultSchedulerSetPolicy;	// IMP=0x00000000000361f5
- (id)_newSetPolicyForDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2 fromLocation:(id)arg3;	// IMP=0x0000000000035e7b
- (void)_performTriggeredSetJobForSetConfiguration:(id)arg1 usingSetUpdatePolicy:(id)arg2;	// IMP=0x0000000000035c1e
- (void)_performPushNotificationOperations;	// IMP=0x0000000000035135
- (void)_performTickerOperations:(long long)arg1;	// IMP=0x0000000000034190
- (void)_performActivityOperations;	// IMP=0x0000000000033f2f
- (void)_setActivityCriteria:(id)arg1 pushNotificationInitiated:(_Bool)arg2 withActivityDelay:(long long)arg3;	// IMP=0x0000000000033c36
- (void)_startPushDelayTimer:(long long)arg1;	// IMP=0x00000000000337df
- (void)_startActivityBackupTrigger;	// IMP=0x00000000000332ad
- (void)_registerForAndStartActivity:(long long)arg1;	// IMP=0x000000000003224c
- (void)_eliminateSpecificSelector:(id)arg1;	// IMP=0x0000000000031e74
- (void)_eliminateSelector:(id)arg1 forSetJob:(_Bool)arg2 indicatingWhenEliminated:(_Bool)arg3;	// IMP=0x0000000000031306
- (void)_jobFinishedForSetDomainName:(id)arg1 forAssetSetIdentifier:(id)arg2 withPotentialNetworkFailure:(_Bool)arg3;	// IMP=0x0000000000030e18
- (void)_jobFinishedForSelector:(id)arg1 withPotentialNetworkFailure:(_Bool)arg2;	// IMP=0x0000000000030981
- (id)_assetTypeForAssetSelector:(id)arg1;	// IMP=0x00000000000305ba
- (long long)_aggressiveIntervalSecs;	// IMP=0x0000000000030594
- (long long)_heightenedIntervalSecs;	// IMP=0x000000000003056e
- (long long)_decideTriggerIntervalSecs:(id)arg1 forAssetSelector:(id)arg2;	// IMP=0x000000000002fd0a
- (void)_schedulePushNotifications:(id)arg1;	// IMP=0x000000000002e9d4
- (void)_scheduleSelector:(id)arg1 triggeringAtIntervalSecs:(long long)arg2 withRemainingSecs:(long long)arg3 forPushedJob:(_Bool)arg4 forSetJob:(_Bool)arg5 withSetPolicy:(id)arg6 triggeringIfLearned:(_Bool)arg7 resettingRemaining:(_Bool)arg8;	// IMP=0x000000000002db85
- (id)_snapshotOfJobsBySelector;	// IMP=0x000000000002d82c
- (id)_setConfigurationForAssetSelector:(id)arg1;	// IMP=0x000000000002d2a0
- (void)_trackSetConfigurations:(id)arg1;	// IMP=0x000000000002ceff
- (id)init;	// IMP=0x0000000000029533

@end

