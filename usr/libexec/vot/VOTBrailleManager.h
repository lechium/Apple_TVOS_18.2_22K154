//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AXIndexMap, BRLTTable, NSAttributedString, NSCondition, NSData, NSDictionary, NSLock, NSMutableCharacterSet, NSMutableSet, NSString, SCRCTargetSelectorTimer, SCRCThreadKey, SCROBrailleClient, VOTElement, _VOTBrailleManagerStatus;

@interface VOTBrailleManager : NSObject
{
    VOTElement *_brailleElement;	// 8 = 0x8
    struct _NSRange _brailleDescriptionRange;	// 16 = 0x10
    struct _NSRange _brailleLineRange;	// 32 = 0x20
    long long _brailleLineOffset;	// 48 = 0x30
    SCRCTargetSelectorTimer *_hintTimer;	// 56 = 0x38
    unsigned long long _brailleElementIndex;	// 64 = 0x40
    _Bool _usesBrailleSubstitutions;	// 72 = 0x48
    NSDictionary *_brailleSubstitutions;	// 80 = 0x50
    NSMutableCharacterSet *_delimiters;	// 88 = 0x58
    BRLTTable *_currentDefaultTable;	// 96 = 0x60
    BRLTTable *_currentSetTable;	// 104 = 0x68
    BRLTTable *_currentSetInputTable;	// 112 = 0x70
    _VOTBrailleManagerStatus *_status;	// 120 = 0x78
    _Bool _hasActiveDisplay;	// 128 = 0x80
    _Bool _testingHasActiveDisplay;	// 129 = 0x81
    _Bool _testingKeyboardHelpOn;	// 130 = 0x82
    AXIndexMap *_commands;	// 136 = 0x88
    id _rotorSelection;	// 144 = 0x90
    _Bool _shouldPreferPositionOverRotorSelection;	// 152 = 0x98
    int _primaryDisplayToken;	// 156 = 0x9c
    _Bool _primaryDisplayIsBluetooth;	// 160 = 0xa0
    SCROBrailleClient *_brailleClient;	// 168 = 0xa8
    NSCondition *_brailleClientConnectionCondition;	// 176 = 0xb0
    int _lastBraillePanDirection;	// 184 = 0xb8
    _Bool _lastBraillePanSucceeded;	// 188 = 0xbc
    SCRCThreadKey *_threadKey;	// 192 = 0xc0
    unsigned int _toggledModifiers;	// 200 = 0xc8
    NSData *_testingAggregatedStatus;	// 208 = 0xd0
    SCRCTargetSelectorTimer *_updateRealtimeStatusTimer;	// 216 = 0xd8
    double _lastRealtimeUpdate;	// 224 = 0xe0
    _Bool _autoAdvanceEnabled;	// 232 = 0xe8
    int _cachedContractionMode;	// 236 = 0xec
    _Bool _cachedAutoBrailleTranslationEnabled;	// 240 = 0xf0
    double _lastPanTime;	// 248 = 0xf8
    NSLock *_keyboardVirtualDisplayLock;	// 256 = 0x100
    unsigned long long _keyboardVirtualDisplayRegisteredKeys;	// 264 = 0x108
    NSMutableSet *_keyboardVirtualDisplayDownKeys;	// 272 = 0x110
    _Bool _keyboardVirtualDisplayIsEnteringChord;	// 280 = 0x118
    _Bool _panEnabled;	// 281 = 0x119
    _Bool _testingBrailleElementLocked;	// 282 = 0x11a
    int _lastRefreshTrigger;	// 284 = 0x11c
    BRLTTable *_brailleTableFromSettings;	// 288 = 0x120
    BRLTTable *_brailleInputTableFromSettings;	// 296 = 0x128
    VOTElement *_previousTouchContainer;	// 304 = 0x130
    VOTElement *_previousElement;	// 312 = 0x138
    NSString *_brailleSubstitutionLanguage;	// 320 = 0x140
    double _lastUserInteractionTime;	// 328 = 0x148
    long long _bookCursorPosition;	// 336 = 0x150
    long long _trailingBookCursorPosition;	// 344 = 0x158
    SCROBrailleClient *_testingBrailleClient;	// 352 = 0x160
    double _threadWaitTime;	// 360 = 0x168
    CDUnknownBlockType _tableSetCallback;	// 368 = 0x170
    CDUnknownBlockType _elementSetCallback;	// 376 = 0x178
    CDUnknownBlockType _keypressCallback;	// 384 = 0x180
    CDUnknownBlockType _brailleStringSetCallback;	// 392 = 0x188
}

+ (double)currentDefaultBrailleAlertTimeout;	// IMP=0x00400000000fae2a
+ (id)manager;	// IMP=0x00100000000fadaf
- (void).cxx_destruct;	// IMP=0x00200000001093fe
@property(copy, nonatomic) CDUnknownBlockType brailleStringSetCallback; // @synthesize brailleStringSetCallback=_brailleStringSetCallback;
@property(copy, nonatomic) CDUnknownBlockType keypressCallback; // @synthesize keypressCallback=_keypressCallback;
@property(copy, nonatomic) CDUnknownBlockType elementSetCallback; // @synthesize elementSetCallback=_elementSetCallback;
@property(copy, nonatomic) CDUnknownBlockType tableSetCallback; // @synthesize tableSetCallback=_tableSetCallback;
@property(nonatomic) double threadWaitTime; // @synthesize threadWaitTime=_threadWaitTime;
@property(nonatomic) _Bool testingBrailleElementLocked; // @synthesize testingBrailleElementLocked=_testingBrailleElementLocked;
@property(retain, nonatomic) SCROBrailleClient *testingBrailleClient; // @synthesize testingBrailleClient=_testingBrailleClient;
@property(nonatomic) int lastRefreshTrigger; // @synthesize lastRefreshTrigger=_lastRefreshTrigger;
@property(nonatomic) long long trailingBookCursorPosition; // @synthesize trailingBookCursorPosition=_trailingBookCursorPosition;
@property(nonatomic) long long bookCursorPosition; // @synthesize bookCursorPosition=_bookCursorPosition;
@property(readonly, nonatomic) struct _NSRange brailleLineRange; // @synthesize brailleLineRange=_brailleLineRange;
- (double);	// IMP=0x00100000001092de
@property(retain) NSString *brailleSubstitutionLanguage; // @synthesize brailleSubstitutionLanguage=_brailleSubstitutionLanguage;
@property(nonatomic) _Bool panEnabled; // @synthesize panEnabled=_panEnabled;
@property(retain, nonatomic) VOTElement *previousElement; // @synthesize previousElement=_previousElement;
@property(retain, nonatomic) VOTElement *previousTouchContainer; // @synthesize previousTouchContainer=_previousTouchContainer;
@property(retain, nonatomic) BRLTTable *brailleInputTableFromSettings; // @synthesize brailleInputTableFromSettings=_brailleInputTableFromSettings;
@property(retain, nonatomic) BRLTTable *brailleTableFromSettings; // @synthesize brailleTableFromSettings=_brailleTableFromSettings;
@property(nonatomic) _Bool usesBrailleSubstitutions; // @synthesize usesBrailleSubstitutions=_usesBrailleSubstitutions;
- (void)refreshBrailleForTerminalCommand:(id)arg1 cursor:(long long)arg2;	// IMP=0x001000000010900b
- (void)refreshBrailleForTerminalOutput:(id)arg1;	// IMP=0x0010000000108ec7
- (void)refreshBrailleForTerminalOff;	// IMP=0x0010000000108eb5
- (void)resetTestingAggregatedStatus;	// IMP=0x0010000000108e41
- (id)testingAggregatedStatus;	// IMP=0x0010000000108e16
- (_Bool)testingKeyboardHelpIsOn;	// IMP=0x0010000000108e0a
@property(readonly, nonatomic) _Bool brailleEnabled; // @dynamic brailleEnabled;
- (void)configureForUnitTesting;	// IMP=0x0010000000108d8e
- (void)unitTestHandleBrailleKeypress:(id)arg1;	// IMP=0x0010000000108d7c
- (struct _NSRange)rangeOfCellRepresentingCharacterAtIndex:(long long)arg1;	// IMP=0x0010000000108c3d
@property(readonly, nonatomic) NSAttributedString *testingMainAttributedString;
- (id)testingBrailleElement;	// IMP=0x0010000000108c16
@property(readonly, nonatomic) unsigned long long testingBrailleElementIndex;
@property(nonatomic) _Bool testingHasActiveDisplay;
- (id)_localeIdentifierForTableIdentifier:(id)arg1;	// IMP=0x0010000000108ad4
- (id)_localeIdentifierForCurrentInputTable;	// IMP=0x0010000000108abe
- (id)_localeIdentifierForCurrentTable;	// IMP=0x0010000000108aa8
- (id)_tableIdentifierFromDefaultRotorItem:(id)arg1 forLocale:(id)arg2;	// IMP=0x0010000000108a03
- (id)_defaultLanguageRotorItem;	// IMP=0x0010000000108836
- (id)currentBrailleTableIdentifier;	// IMP=0x00100000001085c6
- (void)handleBrailleStartEditing;	// IMP=0x0010000000108447
- (void)handleBrailleDidShowNextAnnouncement:(id)arg1;	// IMP=0x00100000001083b0
- (void)handleBrailleDidShowPreviousAnnouncement:(id)arg1;	// IMP=0x0010000000108319
- (void)_handleDisplayModeChanged:(id)arg1;	// IMP=0x0010000000108288
- (void)handleDisplayModeChanged:(id)arg1;	// IMP=0x0010000000108210
- (void)_handleBraillePlayCommandNotSupportedSound;	// IMP=0x0010000000108198
- (void)handleBraillePlayCommandNotSupportedSound;	// IMP=0x0010000000108137
- (void)_handleBraillePlayBorderHitSound;	// IMP=0x00100000001080bf
- (void)handleBraillePlayBorderHitSound;	// IMP=0x001000000010805e
- (void)_handleBraillePlayDisplayConnectionSound:(id)arg1;	// IMP=0x0010000000107fc7
- (void)handleBraillePlayDisplayConnectionSound:(id)arg1;	// IMP=0x0010000000107f4f
@property(nonatomic) unsigned int persistentKeyModifiers;
@property(nonatomic) double lastUserInteractionTime; // @synthesize lastUserInteractionTime=_lastUserInteractionTime;
- (void)_dispatchBrailleDidPanWithSuccess:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 direction:(id)arg4 lineOffset:(id)arg5;	// IMP=0x0010000000107552
- (_Bool)_brailleShouldTryToTurnPage:(id)arg1 direction:(long long)arg2;	// IMP=0x001000000010742c
- (void)handleBrailleDisplayCopyStringToClipboard:(id)arg1;	// IMP=0x0010000000107426
- (void)handleBrailleDidPanRight:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 lineOffset:(id)arg4;	// IMP=0x00100000001072dd
- (void)handleBrailleDidPanLeft:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 lineOffset:(id)arg4;	// IMP=0x0010000000107197
- (void)handleBrailleSpeechRequest:(id)arg1 language:(id)arg2;	// IMP=0x00100000001070c0
- (void)handleBrailleDeletedUntranslatedText:(id)arg1 speakLiterally:(_Bool)arg2;	// IMP=0x0010000000106b2a
- (void)handleBrailleInsertedUntranslatedText:(id)arg1 speakLiterally:(_Bool)arg2;	// IMP=0x0010000000106739
- (void)_handleBrailleReplaceTextRange:(id)arg1 withString:(id)arg2 cursor:(id)arg3;	// IMP=0x0010000000105f34
- (_Bool)_handleKeyboardModifierCommands:(id)arg1;	// IMP=0x00100000001054b0
- (_Bool)handleCommandIfActiveBrailleRelated:(id)arg1;	// IMP=0x0010000000105299
- (void)_handleBrailleKeypress:(id)arg1;	// IMP=0x00100000001043c1
- (void)handleBrailleReplaceTextRange:(struct _NSRange)arg1 withString:(id)arg2 cursor:(unsigned long long)arg3;	// IMP=0x0010000000103e75
- (void)handleUserEventOccured;	// IMP=0x0010000000103e31
- (void)handleBrailleKeypress:(id)arg1;	// IMP=0x0010000000103d84
- (void)_updateOnscreenKeyboardSettings;	// IMP=0x00100000001039b6
- (_Bool)handleShowOnscreenKeyboardToggle;	// IMP=0x001000000010390a
- (void)updateKeyboardSettings;	// IMP=0x00100000001038f8
- (_Bool)_isActiveUserDisplayConfig:(id)arg1;	// IMP=0x001000000010383a
- (void)_handleBrailleConfigurationChanged:(id)arg1;	// IMP=0x0010000000103233
- (void)handleBrailleDidReconnect:(id)arg1;	// IMP=0x00100000001031db
- (void)handleBrailleDidDisconnect:(id)arg1;	// IMP=0x0010000000103186
- (void)handleBrailleConfigurationChanged:(id)arg1;	// IMP=0x0010000000103045
- (void)_displayBrailleElementHint;	// IMP=0x0010000000102db7
@property(retain, nonatomic) VOTElement *brailleElement; // @synthesize brailleElement=_brailleElement;
- (void)_refreshBrailleLinePreferringPositionOverRotorSelection:(_Bool)arg1 knownLineRange:(_Bool)arg2 updatedPosition:(id)arg3 updateBrailleElement:(_Bool)arg4;	// IMP=0x0010000000102653
- (void)_refreshBrailleLinePreferringPositionOverRotorSelection:(_Bool)arg1 knownLineRange:(_Bool)arg2 updatedPosition:(id)arg3;	// IMP=0x001000000010263b
- (void)_refreshBrailleLine;	// IMP=0x0010000000102622
- (void)refreshBrailleLine;	// IMP=0x00100000001025c1
- (void)_resetBrailleCursor;	// IMP=0x001000000010258d
- (void)_setBrailleElement:(id)arg1 resetBrailleCursor:(id)arg2 rotorSelection:(id)arg3;	// IMP=0x001000000010221a
- (void)setBrailleElement:(id)arg1 resetBrailleCursor:(_Bool)arg2 rotorSelection:(id)arg3;	// IMP=0x0010000000102107
- (void)_setBrailleString:(id)arg1 type:(id)arg2 timeout:(id)arg3 priority:(id)arg4 langCode:(id)arg5 brailleLineRangeValue:(id)arg6;	// IMP=0x0010000000101852
- (void)setBrailleString:(id)arg1 type:(int)arg2 timeout:(double)arg3 langCode:(id)arg4 brailleLineRange:(struct _NSRange)arg5 isBrailleLineRangeKnown:(_Bool)arg6;	// IMP=0x0010000000101650
- (void)_filterUnacceptableBrailleStrings:(id)arg1;	// IMP=0x0010000000101525
- (void)applyBrailleSubstitutions:(id)arg1;	// IMP=0x0010000000101451
- (void)_handleStatusRouterForIndex:(long long)arg1;	// IMP=0x0010000000101247
- (void)_updateStatusCells;	// IMP=0x001000000010082c
- (_Bool)statusCellShowsText;	// IMP=0x0010000000100816
- (_Bool)statusCellShowsGeneral;	// IMP=0x0010000000100800
- (void)_updateStatusCellPrefs;	// IMP=0x00100000001006d4
@property(readonly, nonatomic) _Bool bluetoothBrailleDisplayConnected;
- (void)setSingleLetterQuickNavOn:(_Bool)arg1;	// IMP=0x001000000010069e
- (void)_updateHelpEnabled;	// IMP=0x00100000001005f5
@property(nonatomic) _Bool autoAdvanceEnabled;
- (void)_updateBrailleAutoAdvancePrefs;	// IMP=0x001000000010057d
- (void)updateBrailleAutoAdvancePrefs;	// IMP=0x001000000010051c
- (void)_updateBrailleKeyDebouncePrefs;	// IMP=0x00100000001004bb
- (void)_updateWordWrapPrefs;	// IMP=0x00100000001003cc
- (void)_initializeExpandedStatusCellDictionaries;	// IMP=0x00100000000ffe08
- (void)_handleBrailleTranslate:(id)arg1;	// IMP=0x00100000000ffe02
- (void)_handleBrailleStatusRouter:(id)arg1;	// IMP=0x00100000000ffd83
- (void)_handleBrailleRouter:(id)arg1;	// IMP=0x00100000000ff6a5
- (void)_handleBrailleAnnouncementModeOn:(id)arg1;	// IMP=0x00100000000ff65b
- (void)testingExitDisplayMode;	// IMP=0x00100000000ff5fa
- (void)_exitDisplayMode;	// IMP=0x00100000000ff5e1
- (void)_handleBrailleNextOutputTable:(id)arg1;	// IMP=0x00100000000ff5cd
- (void)_handleBrailleNextInputTable:(id)arg1;	// IMP=0x00100000000ff5b6
- (void)_handleBrailleTable:(id)arg1 input:(_Bool)arg2;	// IMP=0x00100000000ff171
- (long long)inputContractionMode;	// IMP=0x00100000000ff100
- (long long)outputContractionMode;	// IMP=0x00100000000ff08f
- (_Bool)_supportsMode:(long long)arg1;	// IMP=0x00100000000ff000
- (void)_handleBraillePanRight:(id)arg1;	// IMP=0x00100000000fee9a
- (void)_handleBraillePanEnd:(id)arg1;	// IMP=0x00100000000fed5a
- (void)_handleBraillePanBeginning:(id)arg1;	// IMP=0x00100000000fec1a
- (void)_handleBraillePanLeft:(id)arg1;	// IMP=0x00100000000feab4
- (void)_initializeCommands;	// IMP=0x00100000000fe707
- (void)_handleEvent:(id)arg1;	// IMP=0x00100000000fe600
- (void)handleEvent:(id)arg1;	// IMP=0x00100000000fe588
- (void)_updatePrefersNonBlinkingCursorIndicatorPrefs;	// IMP=0x00100000000fe52c
- (void)updatePrefersNonBlinkingCursorIndicatorPrefs;	// IMP=0x00100000000fe4cb
- (void)updateStatusCellPrefs;	// IMP=0x00100000000fe46a
- (void)handleSettingsChange:(id)arg1;	// IMP=0x00100000000fe423
- (_Bool)_languageIsNBSC;	// IMP=0x00100000000fe3d4
- (_Bool)_languageIsCJK;	// IMP=0x00100000000fe2bb
- (void)setTextSearchModeOn:(_Bool)arg1;	// IMP=0x00100000000fe2a2
- (void)updateUsesNemethForMath;	// IMP=0x00100000000fe23e
- (void)_setBrailleSubstitutionLanguage:(id)arg1;	// IMP=0x00100000000fe22c
- (void)_setBrailleInputTable:(id)arg1;	// IMP=0x00100000000fe11f
- (void)_setBrailleTable:(id)arg1;	// IMP=0x00100000000fdfc1
- (void)_setCurrentDefaultTable:(id)arg1;	// IMP=0x00100000000fdfb0
- (void)updateBrailleLanguage;	// IMP=0x00100000000fdc13
- (void)handleKeyboardChanged;	// IMP=0x00100000000fd9c3
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x00100000000fd97f
- (id)nameForSpokenAnnouncementOfBrailleTable:(id)arg1;	// IMP=0x00100000000fd5ee
- (_Bool)_shouldIncludeServiceNameForSpokenBrailleRotorAnnouncementOfTable:(id)arg1 rotorItems:(id)arg2 locale:(id)arg3;	// IMP=0x00100000000fd188
- (long long)_indexOfBrailleTable:(id)arg1 inRotorItems:(id)arg2;	// IMP=0x00100000000fcfdc
- (void)announceBrailleTable:(id)arg1 isDefault:(_Bool)arg2;	// IMP=0x00100000000fce2a
- (id)adjustBrailleLanguageRotorInDirection:(long long)arg1 isDefault:(out _Bool *)arg2 input:(_Bool)arg3;	// IMP=0x00100000000fc967
- (id)adjustBrailleInputLanguageRotorInDirection:(long long)arg1 isDefault:(out _Bool *)arg2;	// IMP=0x00100000000fc94f
- (id)adjustBrailleLanguageRotorInDirection:(long long)arg1 isDefault:(out _Bool *)arg2;	// IMP=0x00100000000fc93a
- (_Bool)hasActiveBrailleDisplay;	// IMP=0x00100000000fc75b
- (void)_updateRealtimeElementStatus;	// IMP=0x00100000000fc21e
- (void)_updateRealtimeElementStatusFromTimer;	// IMP=0x00100000000fc1db
- (void)updateRealtimeElements:(id)arg1;	// IMP=0x00100000000fc198
- (void)_waitForBrailleClientConnection;	// IMP=0x00100000000fc0fd
- (void)_setAutomaticBrailleTranslationEnabled:(_Bool)arg1;	// IMP=0x00100000000fc0d1
- (void)_setInputContractionMode:(int)arg1;	// IMP=0x00100000000fc0a8
- (void)updateBrailleInputSettings;	// IMP=0x00100000000fbf92
- (void)updateBrailleOutputSettings;	// IMP=0x00100000000fbe7d
- (void)_thread_initiateScrodConnection;	// IMP=0x00100000000fbbde
- (void)_initiateScrodConnection;	// IMP=0x00100000000fbbaf
- (void)dealloc;	// IMP=0x00100000000fbb41
- (id)init;	// IMP=0x00100000000faecc

@end

