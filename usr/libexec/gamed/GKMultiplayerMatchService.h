//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class GKPseudonymManager, NSString, _TtC14GameDaemonCore13GameDaemonTTR;

@interface GKMultiplayerMatchService
{
    GKPseudonymManager *_pseudonymManager;	// 8 = 0x8
    _TtC14GameDaemonCore13GameDaemonTTR *_ttrHelper;	// 16 = 0x10
}

+ (id)makePlayersDictionaryForMatchRequest:(id)arg1 transportContext:(id)arg2;	// IMP=0x002000000008bba1
+ (id)makeBaseServerRequestForMatchRequest:(id)arg1 playerCount:(long long)arg2 rematchID:(id)arg3 connInfo:(long long)arg4;	// IMP=0x001000000008b726
+ (unsigned long long)requiredEntitlements;	// IMP=0x001000000008a223
+ (Class)interfaceClass;	// IMP=0x001000000008a212
- (void).cxx_destruct;	// IMP=0x002000000009f7ad
@property(retain, nonatomic) _TtC14GameDaemonCore13GameDaemonTTR *ttrHelper; // @synthesize ttrHelper=_ttrHelper;
@property(retain, nonatomic) GKPseudonymManager *pseudonymManager; // @synthesize pseudonymManager=_pseudonymManager;
- (oneway void)uploadLogsForRadar:(id)arg1 from:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009f4cb
- (oneway void)fileMultiplayerTTRWithCallBackIdentifier:(id)arg1 descriptionAddition:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009f22a
- (void)validateRequests:(id)arg1 andFileMultiplayerTTRIfNeededWithContext:(id)arg2;	// IMP=0x001000000009f187
- (oneway void)revokePseudonym:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009f0fc
- (oneway void)sendDataToParticipant:(id)arg1 deviceID:(id)arg2 data:(id)arg3 usePeerDiscovery:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000009ee22
- (oneway void)forgetParticipant:(id)arg1 deviceID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009ed1e
- (oneway void)setupNearbyDiscovery;	// IMP=0x001000000009e306
- (oneway void)fetchTransportOverrideWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009e1a3
- (oneway void)isGameCenterMultiplayerGameForBundleID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009dfcd
- (oneway void)fetchOnDeviceMultiplayerBundleIDsWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009dd9a
- (oneway void)fetchOnDeviceMultiplayerBundleIDsForNewBundleID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009dafd
- (oneway void)fetchDevicePushToken:(CDUnknownBlockType)arg1;	// IMP=0x001000000009da18
- (oneway void)nearbyInviteWasCancelled:(id)arg1;	// IMP=0x001000000009d9ab
- (oneway void)presentNearbyInvite:(id)arg1;	// IMP=0x001000000009d93e
- (oneway void)stopNearbyAdvertisingWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009d5e1
- (oneway void)startNearbyAdvertisingWithDiscoveryInfo:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009d1eb
- (oneway void)stopNearbyBrowsingWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009ce8e
- (oneway void)startNearbyBrowsingWithPlayerID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009cb11
- (oneway void)updateCacheWithNearbyProfileDictionary:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009c266
- (oneway void)cancelRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009c12c
- (oneway void)updateRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009be67
- (oneway void)initiateRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009bba2
- (oneway void)_performRelayAction:(id)arg1 request:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009b763
- (oneway void)requestTTRLogsWith:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009ad06
- (oneway void)sendInvitationUpdate:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009a0fe
- (oneway void)sendReconnectInvitation:(id)arg1 toPlayer:(id)arg2 connectionData:(id)arg3 sessionToken:(id)arg4 pushToken:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000009968a
- (oneway void)removeInviteSessionIfNeeded;	// IMP=0x0010000000099489
- (oneway void)removeInviteSession;	// IMP=0x001000000009944c
- (oneway void)getInviteSessionTokenWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009928b
- (oneway void)getPlayersToInviteWithHandlerV2:(CDUnknownBlockType)arg1;	// IMP=0x0010000000098e66
- (oneway void)hasCanceledMultiplayerInitiateBulletinForSessionToken:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000098d54
- (oneway void)getAcceptedGameInviteWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000986da
- (oneway void)declineGameInvite:(id)arg1 reason:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000982de
- (oneway void)acceptGameInvite:(id)arg1 transportContext:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000973cd
- (oneway void)putMultiPlayerGroup:(id)arg1 participants:(id)arg2 playedAt:(long long)arg3 bundleID:(id)arg4 numberOfAutomatched:(long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000096dce
- (oneway void)getMultiPlayerGroups:(CDUnknownBlockType)arg1;	// IMP=0x0010000000095faf
- (void)convertToInternalObjects:(id)arg1 results:(id)arg2;	// IMP=0x0010000000095b36
- (id)ensureGroup:(id)arg1 participants:(id)arg2 playedAt:(long long)arg3 numberOfAutomatched:(long long)arg4 moc:(id)arg5 list:(id)arg6;	// IMP=0x0010000000095657
- (oneway void)cancelGameInviteWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000951a6
- (oneway void)removePlayersFromGameInviteV2:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000094997
- (oneway void)invitePlayersForMatchRequest:(id)arg1 devicePushTokenMap:(id)arg2 isNearbyInvite:(_Bool)arg3 transportContext:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000009293d
- (void)saveRecord:(id)arg1 shouldRetry:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000924dd
- (_Bool)zoneNotFoundFromOperation:(id)arg1 operationError:(id)arg2;	// IMP=0x0010000000092273
- (void)saveRecord:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000092259
- (id)privateDatabase;	// IMP=0x00100000000921fb
- (void)setupInviteShareWithRecordID:(id)arg1 rootRecord:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000921e0
- (void)setupInviteShareWithRecordID:(id)arg1 rootRecord:(id)arg2 shouldRetry:(_Bool)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000091a53
- (oneway void)loadCloudKitShareURLWithPlayer:(id)arg1 matchRequest:(id)arg2 transportContext:(id)arg3 availableForMessageV2:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000090597
- (oneway void)loadCloudKitShareURLWithPlayer:(id)arg1 matchRequest:(id)arg2 transportContext:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000090575
- (void)initiateInvitationForMatchRequest:(id)arg1 recipients:(id)arg2 devicePushTokenMap:(id)arg3 isNearbyInvite:(_Bool)arg4 availableForMessageV2:(_Bool)arg5 transportContext:(id)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x001000000008ef3b
- (oneway void)setShareRecordID:(id)arg1;	// IMP=0x001000000008eeab
- (oneway void)hasExistingInviteSessionWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008ee20
- (oneway void)setShareInvitees:(id)arg1;	// IMP=0x001000000008e688
- (oneway void)getCompatibilityMatrix:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008d8ea
- (oneway void)getFlowRateWithPlayerGroup:(id)arg1 queueName:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000008c822
- (oneway void)getFlowRateForQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008c808
- (oneway void)getOverallFlowRateWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008c7ef
- (oneway void)getFlowRateForPlayerGroup:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008c76e
- (oneway void)cancelOutstandingMatchRequestWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008c280
- (oneway void)getPlayersForMatchRequest:(id)arg1 playerCount:(long long)arg2 rematchID:(id)arg3 transportContext:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000008a9ba
- (void)fetchPseudonymIfNeededWithTransportContext:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008a36b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

