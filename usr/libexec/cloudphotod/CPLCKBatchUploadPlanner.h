//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, CKRecordID, CPLCKRecordFetchCache, CPLCKRecordRequestor, CPLCKSharePlan, CPLCKUnsharePlan, CPLCloudKitUploadMetric, CPLCloudKitUploadOperationContext, CPLCloudKitZoneIdentification, CPLFingerprintContext, CPLRecordChange, CPLRecordTarget, CPLRecordTargetMapping, CPLSimpleCKRecordBuilder, CPLUnionCKRecordBuilder, MISSING_TYPE, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol CPLCKRecordPropertyMapping, CPLCloudKitScopeProvider;

@interface CPLCKBatchUploadPlanner : NSObject
{
    NSMutableDictionary *_ckRecordIDToScopedIdentifier;	// 8 = 0x8
    NSMutableDictionary *_ckRecordIDToRejectedScopedIdentifier;	// 16 = 0x10
    NSMutableArray *_ckRecordsToUpload;	// 24 = 0x18
    NSMutableArray *_ckRecordIDsToDelete;	// 32 = 0x20
    MISSING_TYPE *_scopedIdentifiersMovingToSplitState;	// 40 = 0x28
    NSMutableArray *_sharedCKRecordsToUpload;	// 48 = 0x30
    NSMutableArray *_sharedCKRecordIDsToDelete;	// 56 = 0x38
    NSMutableSet *_dontUnshareScopedIdentifier;	// 64 = 0x40
    NSMutableDictionary *_requestedSharedCKRecordIDs;	// 72 = 0x48
    NSMutableDictionary *_requestedPrivateCKRecordIDs;	// 80 = 0x50
    NSMutableSet *_mastersUploadedToPrivateZone;	// 88 = 0x58
    NSMutableDictionary *_mastersNotYetUploadedToPrivateZone;	// 96 = 0x60
    NSMutableSet *_mastersUploadedToSharedZone;	// 104 = 0x68
    NSMutableDictionary *_mastersNotYetUploadedToSharedZone;	// 112 = 0x70
    NSMutableSet *_indirectRecordsUploadedToPrivateZone;	// 120 = 0x78
    CPLRecordChange *_currentRecordChange;	// 128 = 0x80
    CPLRecordTarget *_currentRecordTarget;	// 136 = 0x88
    CKRecordID *_currentRecordID;	// 144 = 0x90
    CPLSimpleCKRecordBuilder *_simpleBuilder;	// 152 = 0x98
    CKRecord *_pendingCKRecordToUpload;	// 160 = 0xa0
    CKRecord *_ckRecordToUpload;	// 168 = 0xa8
    CKRecordID *_sharedRecordID;	// 176 = 0xb0
    CKRecord *_sharedCKRecordToUpload;	// 184 = 0xb8
    CPLSimpleCKRecordBuilder *_simpleBuilderForSharedCKRecord;	// 192 = 0xc0
    CPLUnionCKRecordBuilder *_unionBuilderForCKRecords;	// 200 = 0xc8
    NSDate *_recordModificationDate;	// 208 = 0xd0
    NSMutableSet *_scopedIdentifiersNeedingToCallProgressHandler;	// 216 = 0xd8
    CPLCloudKitUploadOperationContext *_uploadContext;	// 224 = 0xe0
    CPLCloudKitUploadOperationContext *_sharedUploadContext;	// 232 = 0xe8
    double _uploadTotalSize;	// 240 = 0xf0
    NSMutableDictionary *_sizesPerRecordID;	// 248 = 0xf8
    NSMutableDictionary *_progressSizesPerRecordID;	// 256 = 0x100
    NSDate *_dateOfFirstUploadProgress;	// 264 = 0x108
    id <CPLCloudKitScopeProvider> _scopeProvider;	// 272 = 0x110
    CPLCloudKitZoneIdentification *_destinationZoneIdentification;	// 280 = 0x118
    CPLCloudKitZoneIdentification *_sharedZoneIdentification;	// 288 = 0x120
    id <CPLCKRecordPropertyMapping> _propertyMapping;	// 296 = 0x128
    CKRecordID *_currentUserRecordID;	// 304 = 0x130
    CPLRecordTargetMapping *_targetMapping;	// 312 = 0x138
    CPLCKRecordFetchCache *_fetchCache;	// 320 = 0x140
    NSDate *_cplEnabledDate;	// 328 = 0x148
    CPLCloudKitUploadMetric *_metric;	// 336 = 0x150
    CDUnknownBlockType _progressHandler;	// 344 = 0x158
    CPLCKRecordRequestor *_recordRequestor;	// 352 = 0x160
    double _totalDurationOfUpload;	// 360 = 0x168
    CPLCKSharePlan *_sharePlan;	// 368 = 0x170
    CPLCKUnsharePlan *_unsharePlan;	// 376 = 0x178
}

- (void).cxx_destruct;	// IMP=0x00200000000350e9
@property(readonly, nonatomic) CPLCKUnsharePlan *unsharePlan; // @synthesize unsharePlan=_unsharePlan;
@property(readonly, nonatomic) CPLCKSharePlan *sharePlan; // @synthesize sharePlan=_sharePlan;
@property(readonly, nonatomic) double totalDurationOfUpload; // @synthesize totalDurationOfUpload=_totalDurationOfUpload;
@property(readonly, nonatomic) NSArray *sharedCKRecordIDsToDelete; // @synthesize sharedCKRecordIDsToDelete=_sharedCKRecordIDsToDelete;
@property(readonly, nonatomic) NSArray *sharedCKRecordsToUpload; // @synthesize sharedCKRecordsToUpload=_sharedCKRecordsToUpload;
@property(readonly, nonatomic) NSArray *ckRecordIDsToDelete; // @synthesize ckRecordIDsToDelete=_ckRecordIDsToDelete;
@property(readonly, nonatomic) NSArray *ckRecordsToUpload; // @synthesize ckRecordsToUpload=_ckRecordsToUpload;
@property(retain, nonatomic) CPLCKRecordRequestor *recordRequestor; // @synthesize recordRequestor=_recordRequestor;
@property(copy, nonatomic) CDUnknownBlockType progressHandler; // @synthesize progressHandler=_progressHandler;
@property(retain, nonatomic) CPLCloudKitUploadMetric *metric; // @synthesize metric=_metric;
@property(copy, nonatomic) NSDate *cplEnabledDate; // @synthesize cplEnabledDate=_cplEnabledDate;
@property(readonly, nonatomic) CPLCKRecordFetchCache *fetchCache; // @synthesize fetchCache=_fetchCache;
@property(readonly, nonatomic) CPLRecordTargetMapping *targetMapping; // @synthesize targetMapping=_targetMapping;
@property(readonly, nonatomic) CKRecordID *currentUserRecordID; // @synthesize currentUserRecordID=_currentUserRecordID;
@property(readonly, nonatomic) id <CPLCKRecordPropertyMapping> propertyMapping; // @synthesize propertyMapping=_propertyMapping;
@property(readonly, nonatomic) CPLCloudKitZoneIdentification *sharedZoneIdentification; // @synthesize sharedZoneIdentification=_sharedZoneIdentification;
@property(readonly, nonatomic) CPLCloudKitZoneIdentification *destinationZoneIdentification; // @synthesize destinationZoneIdentification=_destinationZoneIdentification;
@property(readonly, nonatomic) id <CPLCloudKitScopeProvider> scopeProvider; // @synthesize scopeProvider=_scopeProvider;
- (id)recordIDForResourcesOfRecordWithScopedIdentifier:(id)arg1 cloudKitScope:(id *)arg2 error:(id *)arg3;	// IMP=0x0010000000034ede
- (id)_recordIDFromScopedIdentifier:(id)arg1 cloudKitScope:(id *)arg2 error:(id *)arg3;	// IMP=0x0010000000034d88
- (void)requestRecordWithID:(id)arg1 cloudKitScope:(id)arg2 forKey:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000034beb
- (id)recordBuilderForKey:(id)arg1;	// IMP=0x0010000000034a5e
- (void)setCKReferenceWithScopedIdentifier:(id)arg1 forKey:(id)arg2 referenceAction:(unsigned long long)arg3;	// IMP=0x00100000000348a4
- (void)setCKAsset:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000000347b4
- (void)setLegacyEncryptedObject:(id)arg1 forKey:(id)arg2;	// IMP=0x001000000003470b
- (void)setEncryptedObject:(id)arg1 forKey:(id)arg2 validateClass:(Class)arg3;	// IMP=0x001000000003464e
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000034481
- (_Bool)_shouldUpdateKeyOnSharedCKRecord:(id)arg1;	// IMP=0x0010000000033f3b
- (void)_copyPrivateMasterWithScopedIdentifier:(id)arg1 masterTarget:(id)arg2 uploadIndex:(unsigned long long)arg3 reason:(id)arg4;	// IMP=0x001000000003374b
- (_Bool)_shouldUpdateKeyOnCKRecord:(id)arg1;	// IMP=0x0010000000031817
- (void)_noteMasterWillBeUploadedToSharedZone:(id)arg1;	// IMP=0x001000000003179f
- (void)_noteMasterWillBeUploadedToPrivateZone:(id)arg1;	// IMP=0x0010000000031727
- (id)rejectedScopedIdentifierForRejectedCKRecordID:(id)arg1;	// IMP=0x001000000003169d
- (id)scopedIdentifierForCKRecordID:(id)arg1;	// IMP=0x001000000003160f
- (id)scopeIdentifierFromZoneID:(id)arg1;	// IMP=0x00100000000315f6
- (id)zoneIDFromScopeIdentifier:(id)arg1;	// IMP=0x00100000000315dd
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;	// IMP=0x00100000000315c4
- (void)updateTargetMappingAfterUpload;	// IMP=0x0010000000031377
- (void)didFinishExecutingPlanWithError:(id)arg1;	// IMP=0x0010000000031371
- (void)didFinishUploadOfSharedRecordsWithError:(id)arg1;	// IMP=0x00100000000312f9
- (void)uploadOfSharedRecordID:(id)arg1 didProgress:(double)arg2;	// IMP=0x00100000000312e7
- (id)willUploadSharedRecords;	// IMP=0x001000000003119c
- (void)didFinishUploadOfRecordsWithError:(id)arg1;	// IMP=0x0010000000031124
- (void)uploadOfRecordID:(id)arg1 didProgress:(double)arg2;	// IMP=0x0010000000030f1d
- (id)willUploadRecords;	// IMP=0x0010000000030dc2
@property(readonly, nonatomic) double planProgess;
@property(readonly, nonatomic) double uploadedSize;
@property(readonly, nonatomic) NSArray *requestedPrivateCKRecordIDs;
- (_Bool)didFetchPrivateCKRecord:(id)arg1 forRecordWithRecordID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000030b0f
- (void)requestPrivateCKRecordWithRecordIDBeforeUpload:(id)arg1 fetchedBlock:(CDUnknownBlockType)arg2 reason:(id)arg3;	// IMP=0x00100000000308d7
@property(readonly, nonatomic) NSArray *requestedSharedCKRecordIDs;
- (_Bool)didFetchSharedCKRecord:(id)arg1 forRecordWithRecordID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000030743
- (void)requestSharedCKRecordWithRecordIDBeforeUpload:(id)arg1 fetchedBlock:(CDUnknownBlockType)arg2 reason:(id)arg3;	// IMP=0x00100000000305c2
- (void)uploadSharedCKRecord:(id)arg1 forScopedIdentifier:(id)arg2 triggeringKey:(id)arg3;	// IMP=0x001000000003046f
- (void)deleteSharedCKRecordWithRecordID:(id)arg1;	// IMP=0x0010000000030385
- (void)updatePrivateRecord:(id)arg1 sharedToRecordWithID:(id)arg2;	// IMP=0x001000000003035a
- (void)uploadCKRecord:(id)arg1 forScopedIdentifier:(id)arg2 triggeringKey:(id)arg3;	// IMP=0x0010000000030207
- (void)deleteCKRecordWithRecordID:(id)arg1;	// IMP=0x001000000003011d
- (void)_deleteSharedRecord;	// IMP=0x001000000002feff
- (void)_deleteRecord;	// IMP=0x001000000002fcfc
- (void)_addRecordWithScopedIdentifierToUnshareTodos:(id)arg1 recordClass:(Class)arg2 target:(id)arg3;	// IMP=0x001000000002f832
- (void)_addRecordWithScopedIdentifierToShareTodos:(id)arg1 recordClass:(Class)arg2 proposedContributorUserIdentifiers:(id)arg3 target:(id)arg4 force:(_Bool)arg5;	// IMP=0x001000000002f3f8
- (void)_dontUnshareRecordWithScopedIdentifier:(id)arg1 recordClass:(Class)arg2;	// IMP=0x001000000002f381
- (id)_shareTodoForRecordWithScopedIdentifier:(id)arg1 recordClass:(Class)arg2 proposedContributorUserIdentifiers:(id)arg3 target:(id)arg4;	// IMP=0x001000000002ef60
- (void)_addCKRecordIDForResourcesUploadProgressTracking:(id)arg1 size:(double)arg2;	// IMP=0x001000000002ee98
- (void)finalizePlan;	// IMP=0x001000000002ee92
- (_Bool)planRecordChangeUpload:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002e2c7
- (void)_resetPlannerState;	// IMP=0x001000000002e1e9
- (void)_willUpdateCKRecordWithID:(id)arg1 onBehalfOfRecordWithScopedIdentifier:(id)arg2;	// IMP=0x001000000002dff3
- (void)_noteRecordWithScopedIdentifierWillMoveToSplitState:(id)arg1;	// IMP=0x001000000002df99
@property(readonly) CPLFingerprintContext *fingerprintContext;
- (id)initWithScopeProvider:(id)arg1 destinationZoneIdentification:(id)arg2 sharedZoneIdentification:(id)arg3 propertyMapping:(id)arg4 currentUserRecordID:(id)arg5 targetMapping:(id)arg6 fetchCache:(id)arg7 cplEnabledDate:(id)arg8;	// IMP=0x001000000002dde4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

