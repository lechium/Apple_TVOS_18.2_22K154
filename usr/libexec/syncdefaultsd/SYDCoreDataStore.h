//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSCache, NSLock, NSManagedObjectContext, NSPersistentContainer, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SYDCoreDataStore : NSObject
{
    _Bool _shouldLogValues;	// 8 = 0x8
    NSPersistentContainer *__persistentContainer;	// 16 = 0x10
    NSURL *_URL;	// 24 = 0x18
    NSString *_fileProtectionType;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_persistentContainerQueue;	// 40 = 0x28
    NSManagedObjectContext *_transactionContext;	// 48 = 0x30
    NSCache *_contexts;	// 56 = 0x38
    NSLock *_contextsLock;	// 64 = 0x40
}

+ (_Bool)isInvalidTokenError:(id)arg1;	// IMP=0x0040000000037bd6
+ (_Bool)isCorruptionError:(id)arg1;	// IMP=0x001000000003772d
+ (id)managedObjectModel;	// IMP=0x001000000003687d
- (void).cxx_destruct;	// IMP=0x0020000000037d7b
@property(retain, nonatomic) NSLock *contextsLock; // @synthesize contextsLock=_contextsLock;
@property(retain, nonatomic) NSCache *contexts; // @synthesize contexts=_contexts;
@property(retain, nonatomic) NSManagedObjectContext *transactionContext; // @synthesize transactionContext=_transactionContext;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *persistentContainerQueue; // @synthesize persistentContainerQueue=_persistentContainerQueue;
@property(nonatomic) _Bool shouldLogValues; // @synthesize shouldLogValues=_shouldLogValues;
@property(retain, nonatomic) NSString *fileProtectionType; // @synthesize fileProtectionType=_fileProtectionType;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSPersistentContainer *_persistentContainer; // @synthesize _persistentContainer=__persistentContainer;
- (_Bool)_queue_handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x001000000003794c
- (void)handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x0010000000037605
- (void)transactionStoreDidSave:(id)arg1;	// IMP=0x0010000000037589
- (_Bool)saveTransaction:(id *)arg1;	// IMP=0x00100000000372fe
- (id)transactionalStoreWithError:(id *)arg1;	// IMP=0x00100000000371b5
- (unsigned long long)fileSizeBytes;	// IMP=0x0010000000036d3a
- (void)_queue_destroyPersistentStoreInPersistentStoreCoordinator:(id)arg1;	// IMP=0x0010000000036ba9
- (void)destroyPersistentStore;	// IMP=0x00100000000369f4
- (id)persistentContainerWithError:(id *)arg1;	// IMP=0x0010000000035fd0
- (_Bool)saveContext:(id)arg1 reason:(id)arg2 includingTransactionContext:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0010000000035c48
- (void)clearContexts;	// IMP=0x0010000000035b9c
- (id)_contextForStoreIdentifier:(id)arg1 persistentContainer:(id)arg2;	// IMP=0x00100000000359e3
- (id)contextForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000358d6
- (id)managedKeyValuesMatchingPredicate:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000356be
- (id)managedKeyValuesForKeyIDs:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000034e02
- (id)managedKeyValueWithRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000034ac6
- (id)managedStoreWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x00100000000347e7
- (id)managedDatabaseCreateIfNecessary:(_Bool)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000345b8
- (id)deprecatedSyncEngineMetadataWithError:(id *)arg1;	// IMP=0x0010000000034321
- (_Bool)saveDeprecatedSyncEngineMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000034086
- (id)syncEngineStateSerializationWithError:(id *)arg1;	// IMP=0x0010000000033def
- (_Bool)saveSyncEngineStateSerialization:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000033b45
- (id)dictionaryRepresentationForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000033190
- (short)failedMigrationCountWithError:(id *)arg1;	// IMP=0x0010000000032f56
- (_Bool)setFailedMigrationCount:(short)arg1 error:(id *)arg2;	// IMP=0x0010000000032c37
- (_Bool)didMigrateFromPlistsWithError:(id *)arg1;	// IMP=0x0010000000032a01
- (_Bool)setDidMigrateFromPlists:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00100000000326e3
- (id)acAccountIdentifierWithError:(id *)arg1;	// IMP=0x001000000003248a
- (_Bool)setACAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000321bb
- (_Bool)clearServerSystemFieldsRecordsForAllStoresWithError:(id *)arg1;	// IMP=0x0010000000031ca2
- (id)changedKeysForStoreIdentifier:(id)arg1 sinceChangeToken:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000030529
- (id)currentChangeTokenForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000030023
- (unsigned long long)numberOfKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002fd28
- (_Bool)clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002f799
- (id)allStoreIdentifiersWithError:(id *)arg1;	// IMP=0x001000000002f1a4
- (id)allRecordNamesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002ebba
- (_Bool)deleteDataForStoresMatchingPredicate:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002e8dd
- (_Bool)deleteDataForAllStoresWithError:(id *)arg1;	// IMP=0x001000000002e81a
- (_Bool)deleteDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002e6ff
- (_Bool)saveServerSyncAnchorSystemFieldsRecordData:(id)arg1 forStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002e38c
- (id)serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002e047
- (_Bool)removeKeyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002dc0a
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000002d6b6
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002d691
- (_Bool)_saveKeyValues:(id)arg1 excludeFromChangeTracking:(_Bool)arg2 enforceQuota:(_Bool)arg3 forceCreateNewRow:(_Bool)arg4 error:(id *)arg5;	// IMP=0x001000000002c186
- (_Bool)saveKeyValues:(id)arg1 excludeFromChangeTracking:(_Bool)arg2 enforceQuota:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000002c164
- (_Bool)_saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 forceCreateNewRow:(_Bool)arg5 error:(id *)arg6;	// IMP=0x001000000002bf68
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 error:(id *)arg5;	// IMP=0x001000000002bf4c
- (id)keyValueFromManagedKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2;	// IMP=0x001000000002bb4f
- (id)keyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002b7d2
- (id)keyValuesForKeyIDs:(id)arg1 createIfNecessary:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000002ac4c
- (id)keyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000002a8c9
- (id)description;	// IMP=0x001000000002a827
- (void)dealloc;	// IMP=0x001000000002a7b2
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2 persistentContainer:(id)arg3 isTransactional:(_Bool)arg4;	// IMP=0x001000000002a4bb
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2;	// IMP=0x001000000002a4a3
- (id)initWithURL:(id)arg1;	// IMP=0x001000000002a487

@end

