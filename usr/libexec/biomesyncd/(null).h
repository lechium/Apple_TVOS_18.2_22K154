//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSDateFormatter, NSMutableDictionary, NSMutableSet, NSString, NSURL;

@interface (null) : NSObject
{
    void *_db;	// 8 = 0x8
    _Bool _isExecutingStatement;	// 16 = 0x10
    double _startBusyRetryTime;	// 24 = 0x18
    NSMutableSet *_openResultSets;	// 32 = 0x20
    NSMutableSet *_openFunctions;	// 40 = 0x28
    NSDateFormatter *_dateFormat;	// 48 = 0x30
    _Bool _shouldCacheStatements;	// 56 = 0x38
    _Bool _traceExecution;	// 57 = 0x39
    _Bool _checkedOut;	// 58 = 0x3a
    _Bool _crashOnErrors;	// 59 = 0x3b
    _Bool _logsErrors;	// 60 = 0x3c
    _Bool _isOpen;	// 61 = 0x3d
    _Bool _isInTransaction;	// 62 = 0x3e
    double _maxBusyRetryTimeInterval;	// 64 = 0x40
    NSMutableDictionary *_cachedStatements;	// 72 = 0x48
    NSString *_databasePath;	// 80 = 0x50
}

+ (id)storeableDateFormat:(id)arg1;	// IMP=0x004000000004a9b8
+ (_Bool)isSQLiteThreadSafe;	// IMP=0x0010000000049d42
+ (id)sqliteLibVersion;	// IMP=0x0010000000049cfe
+ (int)FMDBVersion;	// IMP=0x0010000000049aff
+ (id)FMDBUserVersion;	// IMP=0x0010000000049af2
+ (id)databaseWithURL:(id)arg1;	// IMP=0x0010000000049901
+ (id)databaseWithPath:(id)arg1;	// IMP=0x00100000000498b8
- (void).cxx_destruct;	// IMP=0x002000000004daed
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(readonly, nonatomic) _Bool isInTransaction; // @synthesize isInTransaction=_isInTransaction;
@property(nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
@property(retain) NSMutableDictionary *cachedStatements; // @synthesize cachedStatements=_cachedStatements;
@property _Bool logsErrors; // @synthesize logsErrors=_logsErrors;
@property _Bool crashOnErrors; // @synthesize crashOnErrors=_crashOnErrors;
@property _Bool checkedOut; // @synthesize checkedOut=_checkedOut;
@property _Bool traceExecution; // @synthesize traceExecution=_traceExecution;
- (void)resultErrorTooBigInContext:(void *)arg1;	// IMP=0x001000000004da48
- (void)resultErrorNoMemoryInContext:(void *)arg1;	// IMP=0x001000000004da3b
- (void)resultErrorCode:(int)arg1 context:(void *)arg2;	// IMP=0x001000000004da2c
- (void)resultError:(id)arg1 context:(void *)arg2;	// IMP=0x001000000004d9f5
- (void)resultString:(id)arg1 context:(void *)arg2;	// IMP=0x001000000004d9b7
- (void)resultData:(id)arg1 context:(void *)arg2;	// IMP=0x001000000004d94d
- (void)resultDouble:(double)arg1 context:(void *)arg2;	// IMP=0x001000000004d940
- (void)resultLong:(long long)arg1 context:(void *)arg2;	// IMP=0x001000000004d930
- (void)resultInt:(int)arg1 context:(void *)arg2;	// IMP=0x001000000004d921
- (void)resultNullInContext:(void *)arg1;	// IMP=0x001000000004d914
- (id)valueString:(void *)arg1;	// IMP=0x001000000004d8d7
- (id)valueData:(void *)arg1;	// IMP=0x001000000004d883
- (double)valueDouble:(void *)arg1;	// IMP=0x001000000004d876
- (long long)valueLong:(void *)arg1;	// IMP=0x001000000004d869
- (int)valueInt:(void *)arg1;	// IMP=0x001000000004d85c
- (int)valueType:(void *)arg1;	// IMP=0x001000000004d84f
- (void)makeFunctionNamed:(id)arg1 arguments:(int)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x001000000004d762
- (void)makeFunctionNamed:(id)arg1 maximumArguments:(int)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000004d750
@property(nonatomic) _Bool shouldCacheStatements; // @synthesize shouldCacheStatements=_shouldCacheStatements;
- (_Bool)checkpoint:(int)arg1 name:(id)arg2 logFrameCount:(int *)arg3 checkpointCount:(int *)arg4 error:(id *)arg5;	// IMP=0x001000000004d545
- (_Bool)checkpoint:(int)arg1 name:(id)arg2 error:(id *)arg3;	// IMP=0x001000000004d520
- (_Bool)checkpoint:(int)arg1 error:(id *)arg2;	// IMP=0x001000000004d4f9
- (id)inSavePoint:(CDUnknownBlockType)arg1;	// IMP=0x001000000004d39b
- (_Bool)rollbackToSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004d255
- (_Bool)releaseSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004d10f
- (_Bool)startSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004cfc9
- (_Bool)interrupt;	// IMP=0x001000000004cf98
- (_Bool)inTransaction;	// IMP=0x001000000004cf8f
- (_Bool)beginExclusiveTransaction;	// IMP=0x001000000004cf61
- (_Bool)beginImmediateTransaction;	// IMP=0x001000000004cf33
- (_Bool)beginDeferredTransaction;	// IMP=0x001000000004cf05
- (_Bool)beginTransaction;	// IMP=0x001000000004ced7
- (_Bool)commit;	// IMP=0x001000000004cea9
- (_Bool)rollback;	// IMP=0x001000000004ce7b
- (id)prepare:(id)arg1;	// IMP=0x001000000004ce51
- (_Bool)update:(id)arg1 withErrorAndBindings:(id *)arg2;	// IMP=0x001000000004cdad
- (_Bool)executeUpdate:(id)arg1 withErrorAndBindings:(id *)arg2;	// IMP=0x001000000004cd09
- (_Bool)executeStatements:(id)arg1 withResultBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000004cc0e
- (_Bool)executeStatements:(id)arg1;	// IMP=0x001000000004cbfa
- (_Bool)executeUpdateWithFormat:(id)arg1;	// IMP=0x001000000004c91d
- (_Bool)executeUpdate:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;	// IMP=0x001000000004c8f6
- (_Bool)executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;	// IMP=0x001000000004c8cb
- (_Bool)executeUpdate:(id)arg1 values:(id)arg2 error:(id *)arg3;	// IMP=0x001000000004c89c
- (_Bool)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x001000000004c871
- (_Bool)executeUpdate:(id)arg1;	// IMP=0x001000000004c7c7
- (_Bool)executeUpdate:(id)arg1 error:(id *)arg2 withArgumentsInArray:(id)arg3 orDictionary:(id)arg4 orVAList:(struct __va_list_tag [1])arg5;	// IMP=0x001000000004c728
- (id)executeQuery:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;	// IMP=0x001000000004c6fe
- (id)executeQuery:(id)arg1 values:(id)arg2 error:(id *)arg3;	// IMP=0x001000000004c68a
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x001000000004c662
- (id)executeQueryWithFormat:(id)arg1;	// IMP=0x001000000004c4ec
- (id)executeQuery:(id)arg1;	// IMP=0x001000000004c433
- (_Bool)bindStatement:(struct sqlite3_stmt *)arg1 WithArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4;	// IMP=0x001000000004be9a
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4 shouldBind:(_Bool)arg5;	// IMP=0x001000000004bb12
- (id)executeQuery:(id)arg1 withParameterDictionary:(id)arg2;	// IMP=0x001000000004bae8
- (void)extractSQL:(id)arg1 argumentsList:(struct __va_list_tag [1])arg2 intoString:(id)arg3 arguments:(id)arg4;	// IMP=0x001000000004b2ff
- (int)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x001000000004ad6e
@property(readonly, nonatomic) int changes;
@property(readonly, nonatomic) long long lastInsertRowId;
- (id)lastError;	// IMP=0x001000000004ac99
- (id)errorWithMessage:(id)arg1;	// IMP=0x001000000004ac10
- (int)lastExtendedErrorCode;	// IMP=0x001000000004ac02
- (int)lastErrorCode;	// IMP=0x001000000004abf4
- (_Bool)hadError;	// IMP=0x001000000004abd9
- (id)lastErrorMessage;	// IMP=0x001000000004abaa
- (_Bool)databaseExists;	// IMP=0x001000000004ab5d
- (void)warnInUse;	// IMP=0x001000000004ab27
@property(readonly, nonatomic) _Bool goodConnection;
- (id)stringFromDate:(id)arg1;	// IMP=0x001000000004aab7
- (id)dateFromString:(id)arg1;	// IMP=0x001000000004aaa1
- (MISSING_TYPE *)setDateFormat: /* Error: Ran out of types for this method. */;	// IMP=0x001000000004aa90
- (_Bool)hasDateFormatter;	// IMP=0x001000000004aa82
- (_Bool)setKeyWithData:(id)arg1;	// IMP=0x001000000004a9b0
- (_Bool)setKey:(id)arg1;	// IMP=0x001000000004a8ee
- (_Bool)rekeyWithData:(id)arg1;	// IMP=0x001000000004a8e6
- (_Bool)rekey:(id)arg1;	// IMP=0x001000000004a824
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;	// IMP=0x001000000004a6b6
- (id)cachedStatementForQuery:(id)arg1;	// IMP=0x001000000004a60d
- (void)clearCachedStatements;	// IMP=0x001000000004a3ad
- (void)resultSetDidClose:(id)arg1;	// IMP=0x001000000004a359
- (void)closeOpenResultSets;	// IMP=0x001000000004a17d
@property(readonly, nonatomic) _Bool hasOpenResultSets;
- (void)setBusyRetryTimeout:(int)arg1;	// IMP=0x001000000004a132
- (int)busyRetryTimeout;	// IMP=0x001000000004a0ff
@property(nonatomic) double maxBusyRetryTimeInterval; // @synthesize maxBusyRetryTimeInterval=_maxBusyRetryTimeInterval;
- (_Bool)close;	// IMP=0x0010000000049f4c
- (_Bool)openWithFlags:(int)arg1 vfs:(id)arg2;	// IMP=0x0010000000049e69
- (_Bool)openWithFlags:(int)arg1;	// IMP=0x0010000000049e55
- (_Bool)open;	// IMP=0x0010000000049dc0
- (int)limitFor:(int)arg1 value:(int)arg2;	// IMP=0x0010000000049dae
- (const char *)sqlitePath;	// IMP=0x0010000000049d5c
@property(readonly, nonatomic) void *sqliteHandle;
@property(readonly, nonatomic) NSURL *databaseURL;
- (void)dealloc;	// IMP=0x0010000000049a7e
- (id)initWithPath:(id)arg1;	// IMP=0x00100000000499b4
- (id)initWithURL:(id)arg1;	// IMP=0x001000000004995e
- (id)init;	// IMP=0x001000000004994a
- (void)setShouldCacheStatementsWithoutClearingExistingStatements:(_Bool)arg1;	// IMP=0x001000000002b5b8
- (_Bool)DELETE_FROM:(id)arg1 WHERE:(id)arg2;	// IMP=0x001000000002b418
- (_Bool)INSERT_INTO:(id)arg1 VALUES:(id)arg2;	// IMP=0x001000000002b0db
- (_Bool)UPDATE:(id)arg1 SET:(id)arg2 WHERE:(id)arg3;	// IMP=0x001000000002adfd
- (id)SELECT_FROM:(id)arg1 COLUMNS:(id)arg2 JOIN:(id)arg3 WHERE:(id)arg4 GROUP_BY:(id)arg5 HAVING:(id)arg6 ORDER_BY:(id)arg7 LIMIT:(id)arg8;	// IMP=0x001000000002a78a
- (id)_SELECT_FROM:(id)arg1 COLUMNS:(id)arg2 JOIN:(id)arg3 WHERE:(id)arg4 GROUP_BY:(id)arg5 ORDER_BY:(id)arg6 LIMIT:(id)arg7;	// IMP=0x001000000002a271
- (id)SELECT_FROM:(id)arg1 COLUMNS:(id)arg2 WHERE:(id)arg3 GROUP_BY:(id)arg4;	// IMP=0x001000000002a241
- (id)SELECT_FROM:(id)arg1 COLUMNS:(id)arg2 JOIN:(id)arg3 WHERE:(id)arg4 ORDER_BY:(id)arg5 LIMIT:(id)arg6;	// IMP=0x001000000002a215
- (id)SELECT_FROM:(id)arg1 COLUMNS:(id)arg2 WHERE:(id)arg3 ORDER_BY:(id)arg4 LIMIT:(id)arg5;	// IMP=0x001000000002a1eb
- (id)SELECT_FROM:(id)arg1 COLUMNS:(id)arg2 WHERE:(id)arg3;	// IMP=0x001000000002a1ba
- (_Bool)validateSQL:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004eb82
- (_Bool)columnExists:(id)arg1 columnName:(id)arg2;	// IMP=0x001000000004eb67
@property(nonatomic) unsigned int userVersion;
@property(nonatomic) unsigned int applicationID;
- (_Bool)columnExists:(id)arg1 inTableWithName:(id)arg2;	// IMP=0x001000000004e7fb
- (id)getTableSchema:(id)arg1;	// IMP=0x001000000004e766
- (id)getSchema;	// IMP=0x001000000004e74b
- (_Bool)tableExists:(id)arg1;	// IMP=0x001000000004e6be
- (id)dateForQuery:(id)arg1;	// IMP=0x001000000004e59c
- (id)dataForQuery:(id)arg1;	// IMP=0x001000000004e47a
- (double)doubleForQuery:(id)arg1;	// IMP=0x001000000004e35e
- (_Bool)boolForQuery:(id)arg1;	// IMP=0x001000000004e24a
- (long long)longForQuery:(id)arg1;	// IMP=0x001000000004e134
- (int)intForQuery:(id)arg1;	// IMP=0x001000000004e020
- (id)stringForQuery:(id)arg1;	// IMP=0x001000000004defe

@end

