//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, NSUUID, _bmFMDatabase;
@protocol OS_dispatch_queue;

@interface BMSyncDatabase : NSObject
{
    _bmFMDatabase *_fmdb;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    unsigned long long _options;	// 24 = 0x18
    unsigned long long _flags;	// 32 = 0x20
    NSString *_loggingSuffix;	// 40 = 0x28
    NSString *__error_ivar;	// 48 = 0x30
    unsigned long long __internal_state_ivar;	// 56 = 0x38
    CDUnknownBlockType _corruptionHandler;	// 64 = 0x40
    NSString *_name;	// 72 = 0x48
}

+ (id)primaryDatabaseWALPath;	// IMP=0x0020000000043713
+ (id)primaryDatabasePath;	// IMP=0x00100000000436b5
+ (void)enumerateAccountSpecificDatabasesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000002e122
+ (id)createDatabaseForAccount:(id)arg1 queue:(id)arg2;	// IMP=0x001000000002daee
+ (id)createPrimaryDatabaseWithQueue:(id)arg1;	// IMP=0x001000000002d5f1
- (void).cxx_destruct;	// IMP=0x0020000000045ce4
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) CDUnknownBlockType corruptionHandler; // @synthesize corruptionHandler=_corruptionHandler;
@property(readonly, nonatomic) unsigned long long internalState; // @synthesize internalState=__internal_state_ivar;
@property(readonly, nonatomic) NSString *error; // @synthesize error=__error_ivar;
- (_Bool)migration_Schema27ToSchema28;	// IMP=0x0010000000045837
- (_Bool)migration_Schema20ToSchema21;	// IMP=0x00100000000456bc
- (_Bool)migration_StarSkySchema11ToSydRoSchema12;	// IMP=0x001000000004539c
@property(readonly, nonatomic) unsigned int version;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;	// IMP=0x0010000000045364
- (id)valueForMetadataKey:(id)arg1;	// IMP=0x00100000000452e3
- (void)disableStatementCachingForBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000004524f
- (void)clearCachedStatements;	// IMP=0x00100000000451a1
- (_Bool)rollback;	// IMP=0x001000000004518b
- (_Bool)commit;	// IMP=0x0010000000045175
- (_Bool)isInTransaction;	// IMP=0x001000000004515f
- (_Bool)beginTransaction;	// IMP=0x0010000000045149
- (void)close;	// IMP=0x0010000000045098
@property(readonly, nonatomic) unsigned long long state;
- (_Bool)open;	// IMP=0x0010000000044fc0
- (_Bool)_tryOpen:(unsigned long long)arg1;	// IMP=0x0010000000043d1d
- (void)setState:(unsigned long long)arg1 errorFormat:(id)arg2;	// IMP=0x0010000000043bfb
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x0010000000043a30
- (id)initWithPath:(id)arg1 options:(unsigned long long)arg2 queue:(id)arg3;	// IMP=0x0010000000043810
- (id)initWithPath:(id)arg1 queue:(id)arg2;	// IMP=0x00100000000437f9
- (id)initWithPath:(id)arg1;	// IMP=0x00100000000437e2
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000004376a
- (int)CRDTLocationCount;	// IMP=0x001000000000577b
- (id)highestDeletedLocationForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000055fe
- (id)highestDeletedLocationsForStream:(id)arg1;	// IMP=0x001000000000542c
- (id)locationsWithState:(unsigned long long)arg1;	// IMP=0x001000000000525c
- (id)previousLocationRowBeforeLocationRow:(id)arg1;	// IMP=0x0010000000005002
- (_Bool)removeAllDeletedLocationsBeforeHighestDeletedLocation:(id)arg1;	// IMP=0x0010000000004db6
- (_Bool)upsertLocation:(id)arg1;	// IMP=0x0010000000004970
- (id)insertLocationIfNotExists:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x00100000000046e1
- (_Bool)updateAllLocationsAtOrBefore:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x00100000000043ec
- (_Bool)updateLocationState:(unsigned long long)arg1 forLocation:(id)arg2;	// IMP=0x00100000000042ae
- (id)locationRowWithLocationID:(id)arg1;	// IMP=0x0010000000004175
- (id)locationRowWithLocation:(id)arg1;	// IMP=0x0010000000003f73
- (id)allPeers;	// IMP=0x00100000000080b7
- (_Bool)setLastSyncDate:(id)arg1 forDeviceWithIdentifier:(id)arg2;	// IMP=0x0010000000007f83
- (id)lastSyncDateOfDeviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007e46
- (id)lastSyncDateFromAnyDevice;	// IMP=0x0010000000007d8b
- (id)deviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007c49
- (_Bool)upsertSyncDevicePeer:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x001000000000768a
- (id)localDevice;	// IMP=0x00100000000075cc
- (void)runMetricsCollectionTask:(id)arg1;	// IMP=0x00100000000081be
- (void)enumerateZonesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000001e1f0
- (_Bool)ckZoneSetAttemptedRecoveryDate:(id)arg1 state:(int)arg2 forZoneName:(id)arg3;	// IMP=0x001000000001df82
- (_Bool)ckZoneSetZoneVersionUUID:(id)arg1 forZoneName:(id)arg2;	// IMP=0x001000000001dd6c
- (_Bool)ckZoneSetAttemptingRecoveryForZoneName:(id)arg1 state:(int)arg2;	// IMP=0x001000000001db13
- (id)ckZoneForZoneName:(id)arg1;	// IMP=0x001000000001d9e1
- (_Bool)ckZoneExists:(id)arg1;	// IMP=0x001000000001d8d7
- (id)SELECT_ATOMS_WHERE:(id)arg1 ORDER_BY:(id)arg2 LIMIT:(id)arg3;	// IMP=0x0010000000027350
- (id)highestLocationWithBufferedAtomsOlderThan:(double)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x00100000000271ae
- (id)computeHighestLocationToDeleteUpToBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3 offsetsIncrease:(_Bool)arg4;	// IMP=0x0010000000026e89
- (void)atomRowsInTimestampClockVector:(id)arg1 forLocation:(id)arg2 inStream:(id)arg3 enumerateWithBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000002652b
- (id)activeLocationsInClockVector:(id)arg1 inStream:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000258e8
- (_Bool)deleteAllAtomsAtOrBeforeLocation:(id)arg1;	// IMP=0x001000000002542e
- (void)atomsAtOrBeforeLocation:(id)arg1 ofType:(unsigned long long)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000250cd
- (void)atomRowsNotOnDiskReferencingSiteIdentifier:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000024e71
- (id)CKAtomRowSiteIdentifiersForStreamIdentifier:(id)arg1;	// IMP=0x0010000000024cf1
- (id)CKAtomRowSiteIdentifiers;	// IMP=0x0010000000024bf5
- (_Bool)containsCKAtomRowWithSegment:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000024ab8
- (id)latestDistributedTimestampForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000248d5
- (id)ckAtomRowForAtomWithBookmark:(id)arg1 type:(unsigned long long)arg2 forSiteIdentifier:(id)arg3 inStream:(id)arg4;	// IMP=0x0010000000024675
- (_Bool)updateCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000240e1
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2 onDisk:(_Bool)arg3;	// IMP=0x0010000000023e4e
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000023c1c
- (int)ckAtomCount;	// IMP=0x0010000000023b6f
- (id)latestCKAtomRowOfType:(unsigned long long)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x001000000002399a
- (id)stateVectorForLocationRow:(id)arg1;	// IMP=0x001000000002342f
- (id)rangeClockVectorForStreamName:(id)arg1;	// IMP=0x0010000000022f6b
- (id)legacyTimestampClockVectorForStreamName:(id)arg1;	// IMP=0x0010000000022ccd
- (id)latestCKAtomRowForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000022b5a
- (id)ckAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002293d
- (_Bool)addCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000021f7b
@property(retain, nonatomic) NSString *mergeableRecordValueKey;
- (void)clearCKSyncEngineMetaData;	// IMP=0x001000000002bca6
- (void)saveCKSyncEngineMetaData:(id)arg1;	// IMP=0x001000000002bc8d
- (id)ckSyncEngineMetaData;	// IMP=0x001000000002bc74
@property(retain, nonatomic) NSDate *lastCloudKitSyncDate;
@property(retain, nonatomic) NSDate *lastCloudKitSyncAttemptDate;
@property(retain, nonatomic) NSDate *lastRapportSyncDate;
@property(retain, nonatomic) NSDate *lastRapportSyncAttemptDate;
@property(retain, nonatomic) NSUUID *sharedSyncGeneration;
- (void)enumerateMergeableRecordValuesForRecordName:(id)arg1 zoneName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000002c042
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForZoneName:(id)arg1;	// IMP=0x001000000002bf64
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForRecordName:(id)arg1 zoneName:(id)arg2;	// IMP=0x001000000002be5d
- (_Bool)saveCKMergeableRecordValueRecordName:(id)arg1 zoneName:(id)arg2 mergeableRecordValueData:(id)arg3;	// IMP=0x001000000002bd32
- (_Bool)saveLatestTombstoneBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x001000000002c357
- (_Bool)getLatestTombstoneBookmarkForSiteIdentifier:(id)arg1 inStream:(id)arg2 segmentName:(id *)arg3 segmentOffset:(unsigned long long *)arg4;	// IMP=0x001000000002c1da
- (_Bool)enableAllCKSyncRecordsPreviouslyDisabledForSite:(id)arg1 stream:(id)arg2;	// IMP=0x0010000000040730
- (_Bool)disableAllCKSyncRecordsForSite:(id)arg1 stream:(id)arg2;	// IMP=0x0010000000040513
- (_Bool)upsertCKRecordWithLocation:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000400e0
- (unsigned long long)ckRecordCountForRecordType:(unsigned long long)arg1;	// IMP=0x001000000003ffa2
- (void)deleteAllCKRecordsInZone:(id)arg1;	// IMP=0x001000000003fe56
- (id)gatherAllCKSyncRecordRecordsToBeDeleted;	// IMP=0x001000000003fcec
- (void)enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003fb25
- (void)deleteCKRecordAtLocation:(id)arg1;	// IMP=0x001000000003f99e
- (void)deleteCKRecordsForStreamName:(id)arg1;	// IMP=0x001000000003f883
- (void)deleteCKRecordsAtOrBeforeLocation:(id)arg1;	// IMP=0x001000000003f693
- (void)enumerateRecordsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003f577
- (void)markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x001000000003f2f1
- (void)updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x001000000003f0fa
- (_Bool)ckRecordExists:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003ef8b
- (id)ckRecordForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003edf0
- (_Bool)clearCKRecordLocalMergeableValueAndSetToSyncForZone:(id)arg1;	// IMP=0x001000000003ec06
- (_Bool)saveCKRecordLocalMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x001000000003e856
- (_Bool)saveCKRecordHighestDeletedLocationRow:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 recordExists:(_Bool)arg4;	// IMP=0x001000000003e57e
- (_Bool)saveCKRecordServerMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x001000000003e2db
- (void)resetMetadataForRecord:(id)arg1 zoneName:(id)arg2;	// IMP=0x001000000003e0db
- (_Bool)resetCKRecordsMetaDataAndSetToSyncForZone:(id)arg1;	// IMP=0x001000000003def5
- (id)getSystemFieldsDataForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003dd5f
- (void)saveSystemFieldsDataForRecord:(id)arg1 syncToCloudKit:(id)arg2 recordType:(unsigned long long)arg3 crdtDeleted:(id)arg4;	// IMP=0x001000000003d685
- (id)createCKRecordFromRecordID:(id)arg1 newRecord:(_Bool *)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003d498
- (id)recordFromSystemFieldsData:(id)arg1;	// IMP=0x001000000003d3a0
- (id)ckRecordsToSyncToCloudKitForZone:(id)arg1;	// IMP=0x001000000003d0fe
- (void)enforceMaxSessionLogPrunePolicy;	// IMP=0x00100000000471b4
- (void)compactAndDeleteSessionLogs;	// IMP=0x0010000000047133
- (void)computeAggregatedSessionLogsWithHandlerBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000047017
- (unsigned long long)countAtomMergeResultRecords;	// IMP=0x0010000000046f77
- (void)recordAtomMergeResult:(unsigned long long)arg1 inStream:(id)arg2 sessionID:(id)arg3 messageID:(unsigned long long)arg4 ownerSite:(id)arg5 originatingSite:(id)arg6 eventCreatedAt:(double)arg7;	// IMP=0x0010000000046c84
- (void)recordMessageToDeviceIdentifier:(id)arg1 sessionID:(id)arg2 messageID:(unsigned long long)arg3 reachable:(_Bool)arg4 bytes:(unsigned long long)arg5 isReciprocal:(_Bool)arg6;	// IMP=0x001000000004699f
- (void)recordSessionEnd:(id)arg1 timeSincePreviousSync:(double)arg2;	// IMP=0x00100000000467af
- (void)recordSessionStart:(id)arg1 transport:(unsigned long long)arg2 reason:(unsigned long long)arg3 isReciprocal:(_Bool)arg4;	// IMP=0x001000000004654b
- (_Bool)deleteAllSiteIdentifiersExcept:(id)arg1;	// IMP=0x00100000000484f3
- (unsigned long long)sizeOfTableInKilobytes:(id)arg1;	// IMP=0x001000000004831c
- (unsigned long long)numRowsInTable:(id)arg1;	// IMP=0x0010000000047fb6
- (unsigned long long)_sizeOfFileInKilobytes:(id)arg1;	// IMP=0x0010000000047e1c
- (unsigned long long)walSizeInKilobytes;	// IMP=0x0010000000047d93
- (unsigned long long)databaseSizeInKilobytes;	// IMP=0x0010000000047d32
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000477c0
- (unsigned long long)_numPagesToVacuum;	// IMP=0x0010000000047442
@property(retain, nonatomic) NSDate *dateOfLastVacuum;
- (void)runVacuumingTask:(id)arg1;	// IMP=0x001000000004724c

@end

