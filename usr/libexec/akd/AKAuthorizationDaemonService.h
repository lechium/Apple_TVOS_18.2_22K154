//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AKAccountManager, AKAuthorizationEndorserRapportDiscovery, AKAuthorizationRapportClient, AKAuthorizationSessionManager, AKAuthorizationStoreManager, AKClient, AKCredentialRequestContext, NSArray, NSString;
@protocol AKAuthorizationClientProtocol, AKAuthorizationDaemonServiceDelegate;

@interface AKAuthorizationDaemonService : NSObject
{
    struct os_unfair_lock_s _authorizationRealUserLock;	// 8 = 0x8
    id <AKAuthorizationClientProtocol> _clientProxy;	// 16 = 0x10
    AKAuthorizationSessionManager *_authSessionManager;	// 24 = 0x18
    NSString *_realUserVerificationResults;	// 32 = 0x20
    AKAccountManager *_accountManager;	// 40 = 0x28
    AKClient *_client;	// 48 = 0x30
    id <AKAuthorizationDaemonServiceDelegate> _delegate;	// 56 = 0x38
    AKAuthorizationRapportClient *_rapportClient;	// 64 = 0x40
    AKAuthorizationEndorserRapportDiscovery *_endorserRapportDiscovery;	// 72 = 0x48
    NSArray *_safariPasswordCredentials;	// 80 = 0x50
    AKCredentialRequestContext *_originalRequestContext;	// 88 = 0x58
    AKAuthorizationStoreManager *_localAccountsStorageController;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x00200000000b17b4
@property(retain, nonatomic) AKAuthorizationStoreManager *localAccountsStorageController; // @synthesize localAccountsStorageController=_localAccountsStorageController;
@property(retain, nonatomic) AKCredentialRequestContext *originalRequestContext; // @synthesize originalRequestContext=_originalRequestContext;
@property(copy, nonatomic) NSArray *safariPasswordCredentials; // @synthesize safariPasswordCredentials=_safariPasswordCredentials;
@property(retain, nonatomic) AKAuthorizationEndorserRapportDiscovery *endorserRapportDiscovery; // @synthesize endorserRapportDiscovery=_endorserRapportDiscovery;
@property(retain, nonatomic) AKAuthorizationRapportClient *rapportClient; // @synthesize rapportClient=_rapportClient;
@property(nonatomic) __weak id <AKAuthorizationDaemonServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) AKClient *client; // @synthesize client=_client;
- (id)_accountDisplayNameWithPresentationContext:(id)arg1;	// IMP=0x00100000000b16ab
- (void)_sendPermissionRequestWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000b1627
- (void)_processUserResponse:(id)arg1 client:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000b1043
- (void)_validateAndProcessUserResponse:(id)arg1 client:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000b0d50
- (void)performAuthorizationWithContext:(id)arg1 withUserProvidedInformation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000b0b3f
- (void)presentAuthorizationUIForContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000b08f6
- (void)_extractWebSessionAuthorizationFromResponse:(id)arg1;	// IMP=0x00100000000b05c5
- (id)authorizationContextWithUserResponse:(id)arg1 client:(id)arg2;	// IMP=0x00100000000b008b
- (id)authorizationContextHelperWithContext:(id)arg1 client:(id)arg2;	// IMP=0x00100000000affbe
- (void)_completeAuthorizationWithServerResponse:(id)arg1 userResponse:(id)arg2 client:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000af93c
- (void)_fetchAuthContextWithUserResponse:(id)arg1 client:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000af3c6
- (void)_performSRPAuthorizationForUserResponse:(id)arg1 client:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000af0d3
- (void)_safePerformSRPWithUserResponse:(id)arg1 client:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000aef15
- (void)_requestUserAuthorizationForContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000aeba9
- (void)_fetchCredentialsForAssociatedDomains:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000aea58
- (void)_fetchSafariCredentialsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ae8d1
- (void)_setupLoginChoicesForPresentationContext:(id)arg1;	// IMP=0x00100000000ae335
- (long long)_credentialStateForRequestContext:(id)arg1;	// IMP=0x00100000000ae2c7
- (void)_prepareRequestContext:(id)arg1 forCredentialState:(long long)arg2;	// IMP=0x00100000000adeb4
- (_Bool)_isPCSAccessForContext:(id)arg1;	// IMP=0x00100000000addc1
- (_Bool)_shouldAllowPCSKeyAccessForContext:(id)arg1;	// IMP=0x00100000000add93
- (void)_getPresentationContextForRequestContext:(id)arg1 client:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ad4e5
- (void)storeAuthorization:(id)arg1 forProxiedRequest:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ad22c
- (_Bool)_shouldStartSatoriVerificationForRequestContext:(id)arg1;	// IMP=0x00100000000ad1bc
- (void)_initiateRapportAuthorizationWithRequestContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ad005
- (void)_initiateAuthorizationWithRequestContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ace8d
- (_Bool)_verifyEntitlementsForRequest:(id)arg1;	// IMP=0x00100000000ac990
- (void)_performSilentRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ac617
- (void)_performRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ac51c
- (void)_determineUIAndPerformRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ac44c
- (_Bool)_shouldEarlyReturnRequest:(id)arg1 forCredentialState:(long long)arg2;	// IMP=0x00100000000ac3c9
- (void)_createAndPerformRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000abde3
- (id)_clientForContext:(id)arg1;	// IMP=0x00100000000abcd9
- (id)_credentialStateController;	// IMP=0x00100000000abca2
- (void)getPresentationContextForRequestContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ab9ad
- (void)establishConnectionWithStateBroadcastHandlerEndpoint:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ab74d
- (void)establishConnectionWithNotificationHandlerEndpoint:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ab36e
- (void)continueFetchingIconForRequestContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ab259
- (void)fetchPrimaryApplicationInformationForWebServiceWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ab097
- (void)fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000aacbf
- (void)revokeUpgradeWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000aaa06
- (void)fetchAppleOwnedDomainSetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000aa8e5
- (void)fetchNativeTakeoverURLSetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000aa4aa
- (void)fetchAppleIDAuthorizationURLSetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000aa418
- (void)startDiscoveryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000aa29e
- (void)getCredentialStateForClientID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000aa213
- (void)getCredentialStateForRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000aa01b
- (void)performAuthorization:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a9519
- (void)dealloc;	// IMP=0x00100000000a94ad
- (id)initWithClient:(id)arg1;	// IMP=0x00100000000a9324
- (id)init;	// IMP=0x00100000000a92f9

@end

