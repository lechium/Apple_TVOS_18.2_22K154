//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@protocol NSXPCProxyCreating;

@interface CuttlefishXPCWrapper : NSObject
{
    id <NSXPCProxyCreating> _cuttlefishXPCConnection;	// 8 = 0x8
}

+ (_Bool)retryable:(id)arg1;	// IMP=0x0020000000027dab
- (void).cxx_destruct;	// IMP=0x0020000000021cc6
@property(readonly) id <NSXPCProxyCreating> cuttlefishXPCConnection; // @synthesize cuttlefishXPCConnection=_cuttlefishXPCConnection;
- (void)performCKServerUnreadableDataRemovalWithSpecificUser:(id)arg1 isGuitarfish:(_Bool)arg2 internalAccount:(_Bool)arg3 demoAccount:(_Bool)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0010000000021abf
- (void)fetchPCSIdentityByPublicKeyWithSpecificUser:(id)arg1 pcsservices:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000218d6
- (void)fetchCurrentItemWithSpecificUser:(id)arg1 items:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000216ed
- (void)octagonContainsDistrustedRecoveryKeysWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002151e
- (void)fetchTrustedPeerCountWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002134f
- (void)preflightRecoverOctagonUsingRecoveryKey:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000021148
- (void)testSemaphoreWithSpecificUser:(id)arg1 arg:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000021085
- (void)performATOPRVActionsWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000020eb6
- (void)removeRecoveryKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000020ce7
- (void)isRecoveryKeySet:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000020b18
- (void)recoverTLKSharesForInheritorWithSpecificUser:(id)arg1 crk:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000020911
- (void)prepareInheritancePeerWithSpecificUser:(id)arg1 epoch:(unsigned long long)arg2 machineID:(id)arg3 bottleSalt:(id)arg4 bottleID:(id)arg5 modelID:(id)arg6 deviceName:(id)arg7 serialNumber:(id)arg8 osVersion:(id)arg9 policyVersion:(id)arg10 policySecrets:(id)arg11 syncUserControllableViews:(int)arg12 secureElementIdentity:(id)arg13 signingPrivKeyPersistentRef:(id)arg14 encPrivKeyPersistentRef:(id)arg15 crk:(id)arg16 reply:(CDUnknownBlockType)arg17;	// IMP=0x0010000000020581
- (void)fetchAccountSettingsWithSpecificUser:(id)arg1 forceFetch:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000203a4
- (void)fetchRecoverableTLKSharesWithSpecificUser:(id)arg1 peerID:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000201bb
- (void)resetAccountCDPContentsWithSpecificUser:(id)arg1 idmsTargetContext:(id)arg2 idmsCuttlefishPassword:(id)arg3 notifyIdMS:(_Bool)arg4 internalAccount:(_Bool)arg5 demoAccount:(_Bool)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x001000000001ff98
- (void)removeEscrowCacheWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001fdc9
- (void)fetchViableEscrowRecordsWithSpecificUser:(id)arg1 source:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001fbef
- (void)getSupportAppInfoWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001fa20
- (void)requestHealthCheckWithSpecificUser:(id)arg1 requiresEscrowCheck:(_Bool)arg2 repair:(_Bool)arg3 knownFederations:(id)arg4 flowID:(id)arg5 deviceSessionID:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x001000000001f7e6
- (void)findCustodianRecoveryKeyWithSpecificUser:(id)arg1 uuid:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001f5fd
- (void)removeCustodianRecoveryKeyWithSpecificUser:(id)arg1 uuid:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001f414
- (void)createCustodianRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 ckksKeys:(id)arg4 uuid:(id)arg5 kind:(int)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x001000000001f1c8
- (void)setRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 ckksKeys:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001efa5
- (void)fetchTrustStateWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001edd6
- (void)fetchCurrentPolicyWithSpecificUser:(id)arg1 modelIDOverride:(id)arg2 isInheritedAccount:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001ebdc
- (void)fetchPolicyDocumentsWithSpecificUser:(id)arg1 versions:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001e9f3
- (void)fetchEscrowContentsWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001e824
- (void)fetchViableBottlesWithSpecificUser:(id)arg1 source:(long long)arg2 flowID:(id)arg3 deviceSessionID:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001e613
- (void)updateTLKsWithSpecificUser:(id)arg1 ckksKeys:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001e40c
- (void)setPreapprovedKeysWithSpecificUser:(id)arg1 preapprovedKeys:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001e223
- (void)updateWithSpecificUser:(id)arg1 forceRefetch:(_Bool)arg2 deviceName:(id)arg3 serialNumber:(id)arg4 osVersion:(id)arg5 policyVersion:(id)arg6 policySecrets:(id)arg7 syncUserControllableViews:(id)arg8 secureElementIdentity:(id)arg9 walrusSetting:(id)arg10 webAccess:(id)arg11 reply:(CDUnknownBlockType)arg12;	// IMP=0x001000000001df30
- (void)attemptPreapprovedJoinWithSpecificUser:(id)arg1 ckksKeys:(id)arg2 tlkShares:(id)arg3 preapprovedKeys:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001dd0d
- (void)preflightPreapprovedJoinWithSpecificUser:(id)arg1 preapprovedKeys:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001db24
- (void)joinWithSpecificUser:(id)arg1 voucherData:(id)arg2 voucherSig:(id)arg3 ckksKeys:(id)arg4 tlkShares:(id)arg5 preapprovedKeys:(id)arg6 flowID:(id)arg7 deviceSessionID:(id)arg8 canSendMetrics:(_Bool)arg9 reply:(CDUnknownBlockType)arg10;	// IMP=0x001000000001d87b
- (void)vouchWithRerollWithSpecificUser:(id)arg1 oldPeerID:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001d674
- (void)vouchWithCustodianRecoveryKeyWithSpecificUser:(id)arg1 crk:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001d46d
- (void)vouchWithRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 tlkShares:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001d24a
- (void)preflightVouchWithCustodianRecoveryKeyWithSpecificUser:(id)arg1 crk:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001d061
- (void)preflightVouchWithRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001ce5a
- (void)vouchWithBottleWithSpecificUser:(id)arg1 bottleID:(id)arg2 entropy:(id)arg3 bottleSalt:(id)arg4 tlkShares:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x001000000001cc15
- (void)preflightVouchWithBottleWithSpecificUser:(id)arg1 bottleID:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001ca2c
- (void)vouchWithSpecificUser:(id)arg1 peerID:(id)arg2 permanentInfo:(id)arg3 permanentInfoSig:(id)arg4 stableInfo:(id)arg5 stableInfoSig:(id)arg6 ckksKeys:(id)arg7 flowID:(id)arg8 deviceSessionID:(id)arg9 canSendMetrics:(_Bool)arg10 reply:(CDUnknownBlockType)arg11;	// IMP=0x001000000001c76b
- (void)establishWithSpecificUser:(id)arg1 ckksKeys:(id)arg2 tlkShares:(id)arg3 preapprovedKeys:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001c548
- (void)prepareWithSpecificUser:(id)arg1 epoch:(unsigned long long)arg2 machineID:(id)arg3 bottleSalt:(id)arg4 bottleID:(id)arg5 modelID:(id)arg6 deviceName:(id)arg7 serialNumber:(id)arg8 osVersion:(id)arg9 policyVersion:(id)arg10 policySecrets:(id)arg11 syncUserControllableViews:(int)arg12 secureElementIdentity:(id)arg13 setting:(id)arg14 signingPrivKeyPersistentRef:(id)arg15 encPrivKeyPersistentRef:(id)arg16 reply:(CDUnknownBlockType)arg17;	// IMP=0x001000000001c1b8
- (void)fetchEgoEpochWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001bfe9
- (void)fetchAllowedMachineIDsWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001be1a
- (void)handleRemovedMachineIDsDueToUnknownReasonsWithSpecificUser:(id)arg1 machineIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001bc31
- (void)handleEvictedMachineIDsWithSpecificUser:(id)arg1 machineIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001ba48
- (void)markTrustedDeviceListFetchFailed:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001b879
- (void)setAllowedMachineIDsWithSpecificUser:(id)arg1 allowedMachineIDs:(id)arg2 userInitiatedRemovals:(id)arg3 evictedRemovals:(id)arg4 unknownReasonRemovals:(id)arg5 honorIDMSListChanges:(_Bool)arg6 version:(id)arg7 flowID:(id)arg8 deviceSessionID:(id)arg9 canSendMetrics:(_Bool)arg10 altDSID:(id)arg11 trustedDeviceHash:(id)arg12 deletedDeviceHash:(id)arg13 trustedDevicesUpdateTimestamp:(id)arg14 reply:(CDUnknownBlockType)arg15;	// IMP=0x001000000001b540
- (void)localResetWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001b371
- (void)resetWithSpecificUser:(id)arg1 resetReason:(long long)arg2 idmsTargetContext:(id)arg3 idmsCuttlefishPassword:(id)arg4 notifyIdMS:(_Bool)arg5 internalAccount:(_Bool)arg6 demoAccount:(_Bool)arg7 isGuitarfish:(_Bool)arg8 accountType:(long long)arg9 reply:(CDUnknownBlockType)arg10;	// IMP=0x001000000001b136
- (void)trustStatusWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001af67
- (void)dropPeerIDsWithSpecificUser:(id)arg1 peerIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001aea4
- (void)distrustPeerIDsWithSpecificUser:(id)arg1 peerIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001acbb
- (void)departByDistrustingSelfWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001aaec
- (void)trustedDeviceNamesByPeerIDWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a91d
- (void)octagonPeerIDGivenBottleIDWithSpecificUser:(id)arg1 bottleID:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001a734
- (void)honorIDMSListChangesForSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a565
- (void)dumpWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a396
- (void)pingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001a205
- (id)initWithCuttlefishXPCConnection:(id)arg1;	// IMP=0x001000000001a19a

@end

