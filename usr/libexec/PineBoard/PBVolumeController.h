//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MPAVRoutingController, MPVolumeController, NSNumber, NSSet, NSString, PBBulletinService, PBDistributedAssertion, PBSBulletin;
@protocol PBVolumeControllerDelegate;

@interface PBVolumeController : NSObject
{
    _Bool _isReady;	// 8 = 0x8
    _Bool _systemMusicVolumeSupported;	// 9 = 0x9
    _Bool _systemAudioVolumeSupported;	// 10 = 0xa
    _Bool _systemMusicVolumeNotificationsEnabled;	// 11 = 0xb
    _Bool _systemAudioVolumeNotificationsEnabled;	// 12 = 0xc
    _Bool _updatingVolumeValues;	// 13 = 0xd
    id <PBVolumeControllerDelegate> _delegate;	// 16 = 0x10
    PBBulletinService *_bulletinService;	// 24 = 0x18
    PBSBulletin *_volumeBulletin;	// 32 = 0x20
    MPAVRoutingController *_systemMusicRoutingController;	// 40 = 0x28
    MPAVRoutingController *_systemAudioRoutingController;	// 48 = 0x30
    MPVolumeController *_systemMusicVolumeController;	// 56 = 0x38
    MPVolumeController *_systemAudioVolumeController;	// 64 = 0x40
    NSNumber *_systemMusicVolume;	// 72 = 0x48
    NSNumber *_systemMusicVolume_unmuted;	// 80 = 0x50
    NSNumber *_systemAudioVolume;	// 88 = 0x58
    NSNumber *_systemAudioVolume_unmuted;	// 96 = 0x60
    NSSet *_systemMusicRoutes;	// 104 = 0x68
    NSSet *_systemAudioRoutes;	// 112 = 0x70
    PBDistributedAssertion *_suppressVolumeHUDAssertion;	// 120 = 0x78
}

+ (id)_systemAudioVolumeDataSource;	// IMP=0x002000000006be97
+ (id)_systemVolumeAudioCategories;	// IMP=0x001000000006be58
- (void).cxx_destruct;	// IMP=0x002000000006ea8c
@property(readonly, nonatomic) PBDistributedAssertion *suppressVolumeHUDAssertion; // @synthesize suppressVolumeHUDAssertion=_suppressVolumeHUDAssertion;
@property(readonly, nonatomic) _Bool updatingVolumeValues; // @synthesize updatingVolumeValues=_updatingVolumeValues;
@property(readonly, nonatomic) _Bool systemAudioVolumeNotificationsEnabled; // @synthesize systemAudioVolumeNotificationsEnabled=_systemAudioVolumeNotificationsEnabled;
@property(readonly, nonatomic) _Bool systemMusicVolumeNotificationsEnabled; // @synthesize systemMusicVolumeNotificationsEnabled=_systemMusicVolumeNotificationsEnabled;
@property(readonly, nonatomic) _Bool systemAudioVolumeSupported; // @synthesize systemAudioVolumeSupported=_systemAudioVolumeSupported;
@property(readonly, nonatomic) _Bool systemMusicVolumeSupported; // @synthesize systemMusicVolumeSupported=_systemMusicVolumeSupported;
@property(readonly, nonatomic) NSSet *systemAudioRoutes; // @synthesize systemAudioRoutes=_systemAudioRoutes;
@property(readonly, nonatomic) NSSet *systemMusicRoutes; // @synthesize systemMusicRoutes=_systemMusicRoutes;
@property(readonly, nonatomic) NSNumber *systemAudioVolume_unmuted; // @synthesize systemAudioVolume_unmuted=_systemAudioVolume_unmuted;
@property(readonly, nonatomic) NSNumber *systemAudioVolume; // @synthesize systemAudioVolume=_systemAudioVolume;
@property(readonly, nonatomic) NSNumber *systemMusicVolume_unmuted; // @synthesize systemMusicVolume_unmuted=_systemMusicVolume_unmuted;
@property(readonly, nonatomic) NSNumber *systemMusicVolume; // @synthesize systemMusicVolume=_systemMusicVolume;
@property(readonly, nonatomic) MPVolumeController *systemAudioVolumeController; // @synthesize systemAudioVolumeController=_systemAudioVolumeController;
@property(readonly, nonatomic) MPVolumeController *systemMusicVolumeController; // @synthesize systemMusicVolumeController=_systemMusicVolumeController;
@property(readonly, nonatomic) MPAVRoutingController *systemAudioRoutingController; // @synthesize systemAudioRoutingController=_systemAudioRoutingController;
@property(readonly, nonatomic) MPAVRoutingController *systemMusicRoutingController; // @synthesize systemMusicRoutingController=_systemMusicRoutingController;
@property(retain, nonatomic) PBSBulletin *volumeBulletin; // @synthesize volumeBulletin=_volumeBulletin;
@property(retain, nonatomic) PBBulletinService *bulletinService; // @synthesize bulletinService=_bulletinService;
@property(nonatomic) _Bool isReady; // @synthesize isReady=_isReady;
@property(readonly, nonatomic) __weak id <PBVolumeControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (float)odeonVolumeStepForCurrentVolume:(float)arg1 isIncrementing:(_Bool)arg2;	// IMP=0x001000000006e912
- (_Bool)odeonActiveForRoutingController:(id)arg1;	// IMP=0x001000000006e877
- (_Bool)bluetoothActiveForRoutingController:(id)arg1;	// IMP=0x001000000006e783
- (_Bool)airPlayActiveForRoutingController:(id)arg1;	// IMP=0x001000000006e6e8
- (void)_presentVolumeBulletinForRoutes:(id)arg1 volumeLevel:(float)arg2;	// IMP=0x001000000006e61f
- (void)_updateVolumeWithReason:(id)arg1 silenceVolumeHUD:(_Bool)arg2;	// IMP=0x001000000006d934
- (void)_setNeedsVolumeUpdateWithReason:(id)arg1 silenceVolumeHUD:(_Bool)arg2;	// IMP=0x001000000006d7a7
- (void)bulletinService:(id)arg1 didDismissBulletin:(id)arg2 withReason:(unsigned long long)arg3;	// IMP=0x001000000006d76c
- (void)routingController:(id)arg1 pickedRoutesDidChange:(id)arg2;	// IMP=0x001000000006d689
- (void)volumeController:(id)arg1 mutedStateDidChange:(_Bool)arg2;	// IMP=0x001000000006d520
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2 silenceVolumeHUD:(_Bool)arg3;	// IMP=0x001000000006d3bb
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(_Bool)arg2;	// IMP=0x001000000006d270
- (void)setVolumeNotificationsEnabled:(_Bool)arg1 forOutputContext:(unsigned long long)arg2;	// IMP=0x001000000006d1ac
- (_Bool)odeonActiveForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006d142
- (_Bool)bluetoothActiveForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006d0fd
- (_Bool)airPlayActiveForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006d0b8
- (_Bool)volumeSupportedForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006d0a8
- (CDStruct_e6eb8490)currentVolumeStateForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006cf2e
- (void)setVolumeMuted:(_Bool)arg1 forOutputContext:(unsigned long long)arg2;	// IMP=0x001000000006ca16
- (void)decreaseVolumeForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006c619
- (void)increaseVolumeForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000006c189
- (void)_initMediaPlayer;	// IMP=0x001000000006bf0b
- (id)initWithDelegate:(id)arg1 distributedAssertion:(id)arg2;	// IMP=0x001000000006bcf4
- (id)initWithDelegate:(id)arg1;	// IMP=0x001000000006bc4b
- (id)init;	// IMP=0x001000000006bc3d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

