//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSData, SDUnlockSetupRequest;

@interface SDAutoUnlockPairingKeySession
{
    _Bool _waitingForUnlock;	// 8 = 0x8
    _Bool _waitingForLTK;	// 9 = 0x9
    _Bool _requestedLTKForRemote;	// 10 = 0xa
    _Bool _companionViewNotSyncing;	// 11 = 0xb
    _Bool;	// 12 = 0xc
    _Bool _companionCurrentlySyncing;	// 13 = 0xd
    _Bool _canceled;	// 14 = 0xe
    NSData *_requestData;	// 16 = 0x10
    SDUnlockSetupRequest *_request;	// 24 = 0x18
    NSData *_longTermKey;	// 32 = 0x20
}

- (void).cxx_destruct;	// IMP=0x002000000001cb81
@property(retain, nonatomic) NSData *longTermKey; // @synthesize longTermKey=_longTermKey;
@property(retain) SDUnlockSetupRequest *request; // @synthesize request=_request;
@property _Bool canceled; // @synthesize canceled=_canceled;
@property _Bool companionCurrentlySyncing; // @synthesize companionCurrentlySyncing=_companionCurrentlySyncing;
@property _Bool companionNeedsUnlock; // @synthesize companionNeedsUnlock=_companionNeedsUnlock;
@property _Bool companionViewNotSyncing; // @synthesize companionViewNotSyncing=_companionViewNotSyncing;
@property _Bool requestedLTKForRemote; // @synthesize requestedLTKForRemote=_requestedLTKForRemote;
@property _Bool waitingForLTK; // @synthesize waitingForLTK=_waitingForLTK;
@property _Bool waitingForUnlock; // @synthesize waitingForUnlock=_waitingForUnlock;
@property(retain, nonatomic) NSData *requestData; // @synthesize requestData=_requestData;
- (void)transport:(id)arg1 didReceivePayload:(id)arg2 type:(unsigned short)arg3 deviceID:(id)arg4;	// IMP=0x001000000001c913
- (void)sendSetupCreateEscrowRecordStepData:(id)arg1 error:(id)arg2;	// IMP=0x001000000001c632
- (void)sendSetupSessionCreatedWithLocalAttestedKey:(id)arg1 stepData:(id)arg2 error:(id)arg3 failureReason:(unsigned int)arg4;	// IMP=0x001000000001c2e5
- (void)sendSetupSessionCreatedWithLocalKey:(id)arg1 stepData:(id)arg2 error:(id)arg3 failureReason:(unsigned int)arg4 ltkSyncing:(id)arg5;	// IMP=0x001000000001bc6e
- (void)sendKeyDeviceLocked;	// IMP=0x001000000001bad4
- (void)handleCreateEscrowSecret:(id)arg1;	// IMP=0x001000000001b383
- (void)handleSetupRequest;	// IMP=0x001000000001b37d
- (void)handleMessage:(id)arg1 fromDeviceID:(id)arg2 type:(unsigned short)arg3;	// IMP=0x001000000001b298
- (void)notifyDelegateWithError:(id)arg1;	// IMP=0x001000000001b171
- (void)watchLTKsChanged:(id)arg1;	// IMP=0x001000000001ac28
- (void)keyBagLockStateChange:(id)arg1;	// IMP=0x001000000001ac22
- (void)addObservers;	// IMP=0x001000000001ab68
- (void)handleTimerFired;	// IMP=0x001000000001a977
- (_Bool)useAttestedProtocol;	// IMP=0x001000000001a926
- (_Bool)ltkHashMatches;	// IMP=0x001000000001a7dc
- (_Bool)canCreatePairing;	// IMP=0x001000000001a7d4
- (void)onqueue_cancel;	// IMP=0x001000000001a6ca
- (void)cancel;	// IMP=0x001000000001a643
- (void)onqueue_start;	// IMP=0x001000000001a5b1
- (void)start;	// IMP=0x001000000001a52a
- (void)invalidate;	// IMP=0x001000000001a3f3
- (id)initWithDevice:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000001a3a7

@end

