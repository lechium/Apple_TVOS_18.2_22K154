//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CBController, CNContact, CNContactStore, CUSystemMonitor, MISSING_TYPE, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableString, NSNumber, NSSet, NSString, SDAirDropServer, SDDeferrableOperation, SDSmartCoverMonitor, SFPowerSource, _TtC16DaemoniOSLibrary27SDAirDropContactHashManager;
@protocol OS_dispatch_source;

@interface SDStatusMonitor : NSObject
{
    _Bool _activateStarted;	// 8 = 0x8
    NSNumber *_airDropAllowed;	// 16 = 0x10
    int _airDropCount;	// 24 = 0x18
    int _airDropModeNotifyToken;	// 28 = 0x1c
    _Bool _airDropPublished;	// 32 = 0x20
    NSObject<OS_dispatch_source> *_airDropEveryoneModeExpiryTimer;	// 40 = 0x28
    NSString *_nextAirDropID;	// 48 = 0x30
    int _airPlayPrefsToken;	// 56 = 0x38
    NSDictionary *_awdlState;	// 64 = 0x40
    NSNumber *_backlightOn;	// 72 = 0x48
    int _backlightLevelToken;	// 80 = 0x50
    NSString *_bonjourName;	// 88 = 0x58
    _Bool _carplayConnected;	// 96 = 0x60
    NSMutableDictionary *_certificates;	// 104 = 0x68
    NSString *_computerName;	// 112 = 0x70
    NSString *_consoleUser;	// 120 = 0x78
    unsigned int _consoleUserID;	// 128 = 0x80
    _TtC16DaemoniOSLibrary27SDAirDropContactHashManager *_contactHashManager;	// 136 = 0x88
    CNContactStore *_contactStore;	// 144 = 0x90
    NSString *_currentDiscoverableMode;	// 152 = 0x98
    NSString *_deviceInformation;	// 160 = 0xa0
    _Bool _deviceIsHighPriority;	// 168 = 0xa8
    NSNumber *_deviceKeyBagState;	// 176 = 0xb0
    NSNumber *_deviceSupportsWAPI;	// 184 = 0xb8
    NSNumber *_deviceUIUnlocked;	// 192 = 0xc0
    _Bool _deviceWasUnlockedOnce;	// 200 = 0xc8
    struct __CFRunLoopSource *_dynamicStoreSource;	// 208 = 0xd0
    _Bool _finderAirDropEnabled;	// 216 = 0xd8
    SDAirDropServer *_finderServer;	// 224 = 0xe0
    NSNumber *_handoffVisible;	// 232 = 0xe8
    NSMutableDictionary *_identities;	// 240 = 0xf0
    int _keyBagUnlockToken;	// 248 = 0xf8
    NSString *_localHostName;	// 256 = 0x100
    long long _mediaAccessControlSetting;	// 264 = 0x108
    NSDictionary *_mountPoints;	// 272 = 0x110
    NSString *_myAppleID;	// 280 = 0x118
    NSString *_myAppleIDCommonName;	// 288 = 0x120
    struct __SecCertificate *_myAppleIDIntermediateCertificate;	// 296 = 0x128
    struct __SecCertificate *_myAppleIDCertificate;	// 304 = 0x130
    struct __SecIdentity *_myAppleIDSecIdentity;	// 312 = 0x138
    NSMutableString *_myEmailHashes;	// 320 = 0x140
    NSMutableString *_myPhoneHashes;	// 328 = 0x148
    struct _DNSServiceRef_t *_nameMonitor;	// 336 = 0x150
    _Bool _needsExitForLocaleChange;	// 344 = 0x158
    NSString *_netbiosName;	// 352 = 0x160
    unsigned int _notifierObject;	// 360 = 0x168
    struct IONotificationPort *_notifyPortRef;	// 368 = 0x170
    NSDictionary *_odisksMountPoints;	// 376 = 0x178
    long long _pairedWatchWristState;	// 384 = 0x180
    _Bool _iCloudSharedPhotoLibraryEnabled;	// 392 = 0x188
    NSNumber *_personalHotspotAutoState;	// 400 = 0x190
    _Bool _personalHotspotFamilyEnabled;	// 408 = 0x198
    NSMutableDictionary *_personalHotspotFamilyStates;	// 416 = 0x1a0
    NSNumber *_personalHotspotAllowed;	// 424 = 0x1a8
    struct __IOPMConnection *_pmConnection;	// 432 = 0x1b0
    unsigned int _rootPort;	// 440 = 0x1b8
    NSNumber *_screenOn;	// 448 = 0x1c0
    NSMutableDictionary *_serverNames;	// 456 = 0x1c8
    _Bool _sleepModeOn;	// 464 = 0x1d0
    struct __SCPreferences *_smbPreferences;	// 472 = 0x1d8
    NSMutableDictionary *_ssidHashes;	// 480 = 0x1e0
    CUSystemMonitor *__systemMonitor;	// 488 = 0x1e8
    unsigned int _systemUIFlags;	// 496 = 0x1f0
    int _uiLockStatusToken;	// 500 = 0x1f4
    NSString *_workgroup;	// 504 = 0x1f8
    long long _watchWristState;	// 512 = 0x200
    SDDeferrableOperation *_preventLocaleRestart;	// 520 = 0x208
    SDSmartCoverMonitor *_smartCoverMonitor;	// 528 = 0x210
    NSString *_requestedDiscoverableMode;	// 536 = 0x218
    CBController *_bluetoothController;	// 544 = 0x220
    int _screenBlankedToken;	// 552 = 0x228
    _Bool _wirelessEnabled;	// 556 = 0x22c
    _Bool _computerToComputer;	// 557 = 0x22d
    _Bool _controlCenterVisible;	// 558 = 0x22e
    _Bool _multipleUsersLoggedIn;	// 559 = 0x22f
    _Bool _wirelessAccessPoint;	// 560 = 0x230
    _Bool _wirelessCritical;	// 561 = 0x231
    _Bool _isWifiPersonalHotspot;	// 562 = 0x232
    _Bool _isUsing2GHzWifi;	// 563 = 0x233
    _Bool _isMirroringActive;	// 564 = 0x234
    CNContact *___meCard;	// 568 = 0x238
    NSDate *_lastDeviceUnlockDate;	// 576 = 0x240
    NSDate *_lastDarkWakeDate;	// 584 = 0x248
    NSSet *_effectiveBlockedAppBundleIDs;	// 592 = 0x250
}

+ (MISSING_TYPE *)enableAirDropHUDScene;	// IMP=0x00200000001601d5
+ (_Bool)enableShareSheetVectorSlots;	// IMP=0x00100000001601bc
+ (_Bool)enableOOBPCredentialLogging;	// IMP=0x0010000000160132
+ (_Bool)isBuddyCompleted;	// IMP=0x001000000015fcfe
+ (_Bool)b332PairingEnabled;	// IMP=0x001000000015fcc2
+ (long long)shareSheetMaxSuggestions;	// IMP=0x001000000015f850
+ (long long)mrQLProgressUpdateFreqMsec;	// IMP=0x001000000015ede8
+ (double)b332BTAddressRotationDelay;	// IMP=0x001000000015eb8d
+ (float)airDropProgressUIMaxPercentage;	// IMP=0x001000000015e414
+ (id)sharedMonitor;	// IMP=0x0010000000158d28
- (void).cxx_destruct;	// IMP=0x0020000000163ad2
@property(readonly) _Bool isMirroringActive; // @synthesize isMirroringActive=_isMirroringActive;
@property(readonly) _Bool isUsing2GHzWifi; // @synthesize isUsing2GHzWifi=_isUsing2GHzWifi;
@property(readonly) _Bool isWifiPersonalHotspot; // @synthesize isWifiPersonalHotspot=_isWifiPersonalHotspot;
@property(readonly) _Bool wirelessCritical; // @synthesize wirelessCritical=_wirelessCritical;
@property(readonly) _Bool wirelessAccessPoint; // @synthesize wirelessAccessPoint=_wirelessAccessPoint;
@property(readonly) _Bool multipleUsersLoggedIn; // @synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn;
@property(readonly) _Bool controlCenterVisible; // @synthesize controlCenterVisible=_controlCenterVisible;
@property(readonly) _Bool computerToComputer; // @synthesize computerToComputer=_computerToComputer;
@property(readonly) NSSet *effectiveBlockedAppBundleIDs; // @synthesize effectiveBlockedAppBundleIDs=_effectiveBlockedAppBundleIDs;
@property(readonly) NSDate *lastDarkWakeDate; // @synthesize lastDarkWakeDate=_lastDarkWakeDate;
@property(readonly) NSDate *lastDeviceUnlockDate; // @synthesize lastDeviceUnlockDate=_lastDeviceUnlockDate;
- (double)_currentEveryoneModeExpiryInterval;	// IMP=0x00100000001639cb
- (double)_everyoneModeExpiryInterval;	// IMP=0x0010000000163929
- (void)_cancelCheckForEveryoneModeExpiry;	// IMP=0x001000000016382f
- (void)_scheduleCheckForEveryoneModeExpiry;	// IMP=0x0010000000163622
- (void)_updateEveryoneModeExpiryDateOnChange:(id)arg1;	// IMP=0x0010000000163493
- (void)_expireEveryoneModeAndOnlySetDefault:(_Bool)arg1;	// IMP=0x00100000001632cf
- (void)_checkEveryoneModeExpiry;	// IMP=0x0010000000163213
- (id)_everyoneModeExpiryDate;	// IMP=0x0010000000163052
- (_Bool)_isEveryoneModeExpired;	// IMP=0x0010000000162fa3
- (void)logWiFiPowerState;	// IMP=0x0010000000162ef1
- (void)clearWirelessState;	// IMP=0x0010000000162eb4
- (void)installSSIDCacheMonitor;	// IMP=0x0010000000162c8f
- (void)installWiFiPasswordSharingMonitor;	// IMP=0x0010000000162b5c
- (void)handleWiFiPasswordSharingChanged;	// IMP=0x0010000000162b38
- (id)stringForWatchWristState:(long long)arg1;	// IMP=0x0010000000162b19
@property(readonly) long long watchWristState;
- (void)updateWatchWristState:(long long)arg1;	// IMP=0x0010000000162a25
- (void)installWristStateMonitor;	// IMP=0x0010000000162a1f
- (void)installVolumesMonitor;	// IMP=0x0010000000162a19
- (void)installUserProfileMonitor;	// IMP=0x0010000000162a13
- (void)installUserPictureMonitor;	// IMP=0x0010000000162a0d
- (void)installUILockStatusMonitor;	// IMP=0x0010000000162a07
- (void)installMirroringMonitor;	// IMP=0x0010000000162a01
- (void)installSystemUIMonitor;	// IMP=0x00100000001629fb
- (void)installBacklightServicesMonitor;	// IMP=0x00100000001629f5
- (void)installSpringBoardStateMonitor;	// IMP=0x00100000001629ef
- (_Bool)smbConfiguration:(struct __SCPreferences *)arg1 netBiosName:(id *)arg2 workgroup:(id *)arg3;	// IMP=0x00100000001629e7
- (void)reloadSMBConfInfo;	// IMP=0x0010000000162884
- (void)installSMBPreferencesMonitor;	// IMP=0x001000000016287e
- (void)installSleepWakeCallBack;	// IMP=0x00100000001627be
- (void)installSleepNotification;	// IMP=0x00100000001627b8
- (void)handleSleepWakeCallBack:(unsigned int)arg1 messageArguement:(void *)arg2;	// IMP=0x00100000001625bd
- (void)installSleepStateMonitor;	// IMP=0x00100000001625b7
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x00100000001625a5
@property(readonly) SFPowerSource *localPowerSource;
- (void)updateLocalPowerSource:(id)arg1;	// IMP=0x0010000000162517
- (void)handleMISStateChanged:(id)arg1;	// IMP=0x00100000001624a1
- (void)installMISMonitor;	// IMP=0x001000000016249b
- (void)updatePairedWatchLockState:(int)arg1;	// IMP=0x00100000001623ef
@property(readonly) int pairedWatchLockState;
- (void)updatePairedWatchWristState:(long long)arg1;	// IMP=0x0010000000162311
@property(readonly) long long pairedWatchWristState;
- (void)handleNameMonitorCallBack:(const char *)arg1 flags:(unsigned int)arg2 error:(int)arg3;	// IMP=0x0010000000162218
- (void)updateBlacklistedAppBundleIDs;	// IMP=0x00100000001620f9
- (void)managedConfigurationSettingsChanged:(id)arg1;	// IMP=0x00100000001620be
- (void)installManagedConfigurationMonitor;	// IMP=0x0010000000162009
- (void)installLocaleChangeMonitor;	// IMP=0x0010000000161e11
- (void)installKeyBagUnlockMonitor;	// IMP=0x0010000000161e0b
- (void)installFinderSidebarPrefsMonitor;	// IMP=0x0010000000161e05
- (void)installDynamicStoreCallBack;	// IMP=0x0010000000161ba8
- (void)handleDynamicStoreCallback:(struct __SCDynamicStore *)arg1 changedKeys:(struct __CFArray *)arg2;	// IMP=0x00100000001618ff
- (void)installDisplaySleepMonitor;	// IMP=0x0010000000161796
- (void)installDisplayConfigurationMonitor;	// IMP=0x0010000000161790
- (void)installCoreTelephonyMonitor;	// IMP=0x001000000016178a
- (void)installContactsMonitor;	// IMP=0x0010000000161604
- (void)meCardChanged:(id)arg1;	// IMP=0x001000000016151d
- (void)contactStoreDidChange:(id)arg1;	// IMP=0x0010000000161448
- (void)installSmartCoverStatusMonitor;	// IMP=0x0010000000161419
- (void)installClamshellStateChangeMonitor;	// IMP=0x0010000000161413
- (void)uninstallCarPlayStatusMonitor;	// IMP=0x001000000016140d
- (void)installWirelessCarPlayMonitor;	// IMP=0x0010000000161407
- (void)installCarPlayStatusMonitor;	// IMP=0x0010000000161401
- (void)restartBonjourNameMonitor;	// IMP=0x00100000001613b2
- (void)uninstallBonjourNameMonitor;	// IMP=0x0010000000161386
- (void)installBonjourNameMonitor;	// IMP=0x0010000000161288
- (void)retryInstallBluetoothMonitor;	// IMP=0x00100000001611b9
- (void)bluetoothMonitorInvalidated;	// IMP=0x0010000000161129
- (void)bluetoothDidSetPowerStateWithError:(id)arg1;	// IMP=0x0010000000161056
- (void)bluetoothActivatedWithError:(id)arg1;	// IMP=0x0010000000160f63
- (void)bluetoothStateChanged;	// IMP=0x0010000000160e7c
- (void)installBluetoothMonitor;	// IMP=0x0010000000160b3d
- (void)bluetoothAddressChanged;	// IMP=0x0010000000160ae1
- (void)installD2DEncryptionMonitor;	// IMP=0x00100000001609e1
- (void)d2dEncryptionChanged;	// IMP=0x0010000000160985
- (void)d2dEncryptionAvailableWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000160975
- (void)airplaneModeChanged;	// IMP=0x001000000016095c
- (void)installAirplaneModeMonitor;	// IMP=0x0010000000160956
- (void)installBacklightMonitor;	// IMP=0x0010000000160950
- (void)installWifiInterfaceMonitor;	// IMP=0x001000000016094a
- (void)installWirelessMonitor;	// IMP=0x0010000000160944
- (void)updateAWDLStateInfo;	// IMP=0x001000000016090b
- (void)handleAWDLState:(id)arg1;	// IMP=0x0010000000160905
- (void)installAppleIDAccountInfoMonitor;	// IMP=0x001000000016084b
- (void)appleIDAccountInfoChanged:(id)arg1;	// IMP=0x00100000001607b0
- (void)installAppleIDUsernameMonitor;	// IMP=0x0010000000160732
- (long long)mediaAccessControlSetting;	// IMP=0x0010000000160725
- (void)updateMediaAccessControlSetting:(_Bool)arg1;	// IMP=0x0010000000160662
- (void)installAirPlayPreferencesMonitor;	// IMP=0x00100000001605d4
- (void)logAirDropTransactionForClientServer:(_Bool)arg1 beginEnd:(_Bool)arg2 count:(int)arg3;	// IMP=0x00100000001604f8
@property(readonly) _Bool asynchronousProxyLoadingEnabled;
@property(readonly) _Bool wirelessCarPlay;
@property(readonly) _Bool wifiUserPowerPreference;
@property(readonly) _Bool testDiskFull;
@property(readonly) _Bool supportsXcodePairing;
@property(readonly) _Bool supportsFitnessPlusPairing;
@property(readonly) _Bool smartCoverIsClosed;
@property(readonly) _Bool sleepModeOn;
@property(readonly) _Bool signedIntoPrimaryiCloudAccount;
@property(readonly) _Bool showThisComputer;
@property(readonly) _Bool showMeInWormhole;
@property(readonly) _Bool screenOn;
@property(readonly) _Bool runningAsSetupUser;
@property(readonly) _Bool registerAllInterfaces;
@property(readonly) _Bool myAppleIDIsManaged;
@property(readonly) _Bool internetSharingEnabled;
@property(readonly) _Bool lostModeEnabled;
@property(readonly) _Bool ignoreIconDiskCache;
@property(readonly) _Bool handoffVisible;
@property(readonly) _Bool forceP2P;
@property(readonly) _Bool forceAWDL;
@property(readonly) _Bool finderAirDropEnabled;
@property(readonly) _Bool enableXML;
@property(readonly) _Bool enableWebloc;
@property(readonly) _Bool enableStreamDebugging;
@property(readonly) _Bool enableStrangers;
@property(readonly) _Bool enablePKZipCompression;
@property(readonly) _Bool enablePKZip;
@property(readonly) _Bool enableHotspotFallback;
@property(readonly) _Bool enableDVZip;
@property(readonly) _Bool enableDemoMode;
@property(readonly) _Bool enableDebugMode;
@property(readonly) _Bool enableContinuity;
@property(readonly) _Bool enableBugs;
@property(readonly) _Bool enableAllRecents;
@property(readonly) _Bool enableAirDropReceiving;
@property(readonly) _Bool enableAirDropAdvertising;
@property(readonly) _Bool eduModeEnabled;
@property(readonly) _Bool dockHasDownloadsFolder;
@property(readonly) _Bool disableTLS;
@property(readonly) _Bool disableRotation;
@property(readonly) _Bool disableTransformingPhotosAssetBundlesToFolders;
@property(readonly) _Bool disableExtractMediaFromBundles;
@property(readonly) _Bool disableQuarantine;
@property(readonly) _Bool disablePipelining;
@property(readonly) _Bool disablePictureQuery;
@property(readonly) _Bool disablePeopleSuggestions;
@property(readonly) _Bool disableContinuityTLS;
@property(readonly) _Bool disableCompression;
@property(readonly) _Bool disableAutoAcceptForPhotosAssetBundles;
@property(readonly) _Bool disableAutoAccept;
@property(readonly) _Bool deviceWasUnlockedOnce;
@property(readonly) _Bool deviceUIUnlocked;
@property(readonly) _Bool deviceSupportsWAPI;
@property(readonly) _Bool deviceSupportsRanging;
@property(readonly) _Bool deviceSupportsContinuity;
@property(readonly) _Bool deviceRequiresNewRanging;
@property(readonly) _Bool deviceKeyBagUnlockedAndScreenOn;
@property(readonly) _Bool deviceKeyBagUnlocked;
@property(readonly) _Bool deviceKeyBagLocking;
@property(readonly) _Bool deviceKeyBagLocked;
@property(readonly) _Bool deviceKeyBagDisabled;
@property(readonly) _Bool deviceIsInClassD;
@property(readonly) _Bool deviceInBiolockout;
@property(readonly) _Bool currentConsoleUser;
@property(readonly) _Bool connectedEnabled;
@property(readonly) _Bool coalesceMe;
@property(readonly) _Bool carplayConnected;
@property(readonly) _Bool bypassLTKeyAbort;
@property(readonly) _Bool browseAllInterfaces;
@property(readonly) _Bool bonjourEnabled;
@property(readonly) _Bool backlightOn;
@property(readonly) _Bool alwaysSendPayload;
@property(readonly) _Bool alwaysAutoAccept;
@property(readonly) _Bool altDSIDNeedsFixing;
@property(readonly) _Bool allEnabled;
@property(readonly) _Bool isLocalDeviceMeDevice;
@property(readonly) _Bool iCloudSharedPhotoLibraryEnabled;
@property(readonly) _Bool lowPowerModeEnabled;
@property(readonly) _Bool isTourModeEnabled;
- (void)installSystemStateInterfaces;	// IMP=0x001000000015fa77
- (void)installLowPowerModeMonitor;	// IMP=0x001000000015fa71
- (void)lowPowerModeStateChanged;	// IMP=0x001000000015fa6b
@property(readonly, getter=isAirDropAvailable) _Bool airdropAvailable;
- (void)updateAirDropAllowed;	// IMP=0x001000000015f991
@property(readonly, getter=isAirDropAllowed) _Bool airdropAllowed;
@property(readonly) int workgroupThreshold;
@property(readonly) NSString *workgroup;
@property(readonly) unsigned int systemUIFlags;
@property(readonly) NSString *someComputerName;
@property(readonly) int sidebarMaxCount;
@property(readonly) NSString *netbiosName;
@property(readonly) NSData *myShortHashesForAirDrop;
@property(readonly) NSData *myMediumHashes;
@property(readonly) NSString *myPrimaryEmail;
@property(readonly) NSString *myGivenName;
@property(readonly) NSString *myName;
@property(readonly) NSString *myEmail;
@property(readonly) NSDictionary *myAppleIDValidationRecord;
@property(readonly) NSArray *myAppleIDPhoneNumbers;
@property(readonly) NSString *myAppleIDPhoneHash;
@property(readonly) NSString *myAppleIDEmailHash;
@property(readonly) NSArray *myAppleIDEmailAddresses;
@property(readonly) NSString *myAppleIDCommonName;
- (id)_myAppleID;	// IMP=0x001000000015eeb4
@property(readonly) NSString *myAppleID;
@property(readonly) NSString *myAltDSID;
@property(readonly) NSString *myAccountAppleID;
@property(readonly) NSString *modelName;
@property(readonly) NSString *modelCode;
@property(readonly) int minPersonImageSize;
- (void)clearLocalHostName;	// IMP=0x001000000015eb50
@property(readonly) NSString *localHostName;
@property(readonly) long long deviceKeyBagState;
@property(readonly) NSString *deviceInformation;
- (void)clearConsoleUser;	// IMP=0x001000000015e5fb
@property(readonly) NSString *consoleUser;
- (void)clearComputerName;	// IMP=0x001000000015e58a
@property(readonly, copy) NSString *computerName;
@property(readonly, copy) NSString *bonjourName;
@property(readonly) NSData *bluetoothAddress;
- (id)awdlStateInfo;	// IMP=0x001000000015e447
@property(readonly) NSArray *awdlPeerList;
@property(readonly) NSDictionary *awdlInfo;
- (_Bool)isMulticastAdvertisementsDisabled;	// IMP=0x001000000015e3fb
@property _Bool airplaneModeEnabled;
@property _Bool wirelessEnabled; // @synthesize wirelessEnabled=_wirelessEnabled;
@property __weak SDAirDropServer *finderServer;
@property _Bool bluetoothEnabled;
@property(readonly) _Bool bluetoothEnabledIncludingRestricted;
@property NSString *nextAirDropID;
@property _Bool airDropPublished;
- (id)wifiSSIDForSSIDHash:(id)arg1;	// IMP=0x001000000015df4d
- (unsigned int)wifiPasswordSharingAvailability;	// IMP=0x001000000015dd74
- (id)defaultWiFiDevice;	// IMP=0x001000000015dd6c
- (_Bool)_multipleUsersLoggedIn;	// IMP=0x001000000015dd64
- (void)postNotification:(id)arg1;	// IMP=0x001000000015dd50
- (void)postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x001000000015dcbf
- (void)removePreventExitForLocaleReason:(id)arg1;	// IMP=0x001000000015db62
- (void)pushDateForPreventExitForLocaleReason:(id)arg1 expirationDate:(id)arg2;	// IMP=0x001000000015d9c4
- (void)addPreventExitForLocaleReason:(id)arg1;	// IMP=0x001000000015d867
@property(readonly) _Bool simStateReady;
- (long long)signalStrength;	// IMP=0x001000000015d852
- (void)updatePersonalHotspotAllowed;	// IMP=0x001000000015d776
@property(readonly) _Bool personalHotspotAllowed;
- (unsigned char)networkType;	// IMP=0x001000000015d6cb
@property(readonly) _Bool familyHotspotEnabled;
- (void)updateFamilyHotspotState;	// IMP=0x001000000015d67b
- (long long)familyHotspotStateForAltDSID:(id)arg1;	// IMP=0x001000000015d66e
- (_Bool)lteConnectionShows4G;	// IMP=0x001000000015d666
- (void)cellularDataEnabled:(_Bool *)arg1 airplaneMode:(_Bool *)arg2;	// IMP=0x001000000015d650
- (void)updateAutoHotspotState;	// IMP=0x001000000015d62d
- (long long)autoHotspotState;	// IMP=0x001000000015d625
- (id)phoneNumbersForContact:(id)arg1;	// IMP=0x001000000015d421
- (void)resetMeCardWithReason:(id)arg1;	// IMP=0x001000000015d2ca
@property(readonly, nonatomic) CNContact *meCard; // @synthesize meCard=___meCard;
- (id)instantMessageEmailsForContact:(id)arg1;	// IMP=0x001000000015cea0
- (id)emailOrPhoneForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x001000000015cdfb
- (id)emailsForContact:(id)arg1;	// IMP=0x001000000015cc37
- (id)contactWithContactIdentifier:(id)arg1;	// IMP=0x001000000015c8e8
- (id)contactsWithPhoneNumberOrEmail:(id)arg1 keys:(id)arg2;	// IMP=0x001000000015c79c
- (_Bool)isEmail:(id)arg1;	// IMP=0x001000000015c780
- (id)contactWithPreferredIdentifierForContacts:(id)arg1;	// IMP=0x001000000015c462
- (_Bool)contactsContainsShortHashes:(id)arg1;	// IMP=0x001000000015c449
- (_Bool)contactIsBlocked:(id)arg1;	// IMP=0x001000000015c441
- (_Bool)contactIdentifierIsBlocked:(id)arg1;	// IMP=0x001000000015c439
- (id)contactIdentifierForMediumHashes:(id)arg1;	// IMP=0x001000000015c420
- (id)contactsForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x001000000015c307
- (void)clearMyIconAndHash;	// IMP=0x001000000015c23d
- (id)addAdditionalInformationToMeCard:(id)arg1;	// IMP=0x001000000015ba1a
@property(readonly) NSDictionary *awdlState;
- (id)awdlNetwork;	// IMP=0x001000000015b9d1
- (id)awdlInfoForPeerWithServiceName:(id)arg1;	// IMP=0x001000000015b9c9
- (id)awdlDevice;	// IMP=0x001000000015b9c1
- (id)verifiedIdentityForAppleID:(id)arg1;	// IMP=0x001000000015b925
- (id)unifiedAppleIDInfo;	// IMP=0x001000000015b2fe
- (id)phoneNumbersForAppleID:(id)arg1;	// IMP=0x001000000015b23b
- (void)handleAppleAccountSignOut;	// IMP=0x001000000015b1ad
- (void)handleAppleAccountSignIn;	// IMP=0x001000000015b11f
- (void)fixAltDSIDIfNeeded;	// IMP=0x001000000015ae9d
- (id)emailAddressesForAppleID:(id)arg1;	// IMP=0x001000000015adda
- (struct __SecIdentity *)_copyMyAppleIDSecIdentity;	// IMP=0x001000000015ad2f
- (struct __SecIdentity *)copyMyAppleIDSecIdentity;	// IMP=0x001000000015acf3
- (struct __SecCertificate *)_copyMyAppleIDIntermediateCertificate;	// IMP=0x001000000015abdd
- (struct __SecCertificate *)copyMyAppleIDIntermediateCertificate;	// IMP=0x001000000015abcb
- (struct __SecCertificate *)_copyMyAppleIDCertificate;	// IMP=0x001000000015ab03
- (struct __SecCertificate *)copyMyAppleIDCertificate;	// IMP=0x001000000015aac7
- (struct __SecCertificate *)copyCertificateForRealName:(id)arg1;	// IMP=0x001000000015aa25
- (id)commonNameForCertificate:(struct __SecCertificate *)arg1;	// IMP=0x001000000015a966
- (void)clearMyAppleIDInfo;	// IMP=0x001000000015a805
- (void)cacheIdentity:(id)arg1;	// IMP=0x001000000015a72d
- (void)cacheCertificate:(struct __SecCertificate *)arg1 forRealName:(id)arg2;	// IMP=0x001000000015a683
- (_Bool)verifyAndParseValidationRecordData:(id)arg1 intoDictionary:(out id *)arg2;	// IMP=0x001000000015a587
- (long long)appleIDAccountState;	// IMP=0x001000000015a3ff
- (void)updateDiscoverableMode;	// IMP=0x001000000015a1ff
- (void)setServerMountPoints:(id)arg1;	// IMP=0x001000000015a171
@property(retain) NSString *discoverableMode;
- (void)setODiskMountPoints:(id)arg1;	// IMP=0x001000000015a061
- (id)serverNameForHost:(id)arg1;	// IMP=0x0010000000159fb3
- (void)removeServerName:(id)arg1;	// IMP=0x0010000000159f22
- (id)reconciledDiscoverableMode;	// IMP=0x0010000000159dae
- (id)odiskMountPointsForServer:(id)arg1;	// IMP=0x0010000000159d1b
- (id)newDiscoverableMode;	// IMP=0x0010000000159b41
- (id)mountPointsForServer:(id)arg1;	// IMP=0x0010000000159aae
- (_Bool)isClarityBoardEnabled;	// IMP=0x0010000000159aa6
- (_Bool)isAirDropReady;	// IMP=0x0010000000159928
- (long long)discoverableLevel;	// IMP=0x0010000000159881
- (id)defaultDiscoverableMode;	// IMP=0x0010000000159864
- (id)createHostNameKey:(id)arg1;	// IMP=0x00100000001597ac
- (void)airDropTransactionEnd:(_Bool)arg1;	// IMP=0x001000000015975d
- (void)airDropTransactionBegin:(_Bool)arg1;	// IMP=0x0010000000159712
- (void)addServerName:(id)arg1 forHostName:(id)arg2;	// IMP=0x0010000000159646
@property(readonly, copy) NSString *description;
- (void)clearMonitorCache;	// IMP=0x0010000000159314
- (void)activateSystemMonitor;	// IMP=0x00100000001592d5
- (id)systemMonitor;	// IMP=0x0010000000159273
- (void)activate;	// IMP=0x001000000015901c
- (id)init;	// IMP=0x0010000000158d91
@property(nonatomic, readonly) _Bool screenStateSupportsAirDrop;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

