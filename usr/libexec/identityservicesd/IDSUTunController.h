//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDeviceConnectionInfo, IDSLinkManager, MISSING_TYPE, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface IDSUTunController : NSObject
{
    struct SimpleNSStringToObjectTable _deviceConnectionInfoTableByCbuuid;	// 8 = 0x8
    struct _opaque_pthread_mutex_t _deviceConnectionInfoTableByCbuuidLock;	// 32 = 0x20
    IDSLinkManager *_linkManager;	// 96 = 0x60
    _Bool _logPackets;	// 104 = 0x68
    _Bool _vifShouldReadMultiple;	// 105 = 0x69
    unsigned int _vifMaxPendingPackets;	// 108 = 0x6c
    _Bool _vifUseChannel;	// 112 = 0x70
    _Bool _hasFixedDestination;	// 113 = 0x71
    _Bool _encryptionEnabled;	// 114 = 0x72
    _Bool _controlChannelEncryptionDisabled;	// 115 = 0x73
    struct os_unfair_lock_s _controlChannelVersionCacheLock;	// 116 = 0x74
    NSMutableDictionary *_controlChannelVersionCache;	// 120 = 0x78
    _Bool _isSimulateResetLoopTest;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_ipsecQueue;	// 136 = 0x88
    _Bool _useBTDatagramPipe;	// 144 = 0x90
    _Bool _ignoreUTunChannelWriteSignal;	// 145 = 0x91
    IDSDeviceConnectionInfo *_testDeviceConnectionInfo;	// 152 = 0x98
}

+ (id)sharedInstance;	// IMP=0x00200000003caf6d
- (void).cxx_destruct;	// IMP=0x00200000003edfd0
@property(readonly, nonatomic) IDSLinkManager *linkManager; // @synthesize linkManager=_linkManager;
- (void)onTransportThread_StopBTDatagramLinkForDefaultPairedDevice;	// IMP=0x00100000003edf9c
- (unsigned long long)onTransportThread_SendWithConnectionContext:(id)arg1 packetBuffer:(CDStruct_90727270 *)arg2;	// IMP=0x00100000003ede6a
- (void)clearStats;	// IMP=0x00100000003edcb1
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x00100000003ed874
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x00100000003ed86e
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x00100000003ed85c
- (void)link:(id)arg1 hasSpaceAvailable:(_Bool)arg2 deviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000003ed856
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000003ed5b7
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000003ed5b1
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_90727270 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000003ed290
- (void)sendSuspendOTRNegotiationMessage:(id)arg1;	// IMP=0x00100000003ed0f4
- (void)sendOTRNegotiationMessage:(id)arg1 negotiationCount:(unsigned int)arg2 negotiationData:(id)arg3;	// IMP=0x00100000003eced1
- (void)setLinkPreferences:(id)arg1;	// IMP=0x00100000003ecdb5
- (void)setPreferInfraWiFi:(_Bool)arg1;	// IMP=0x00100000003ecc4d
- (unsigned long long)totalPacketsReceivedForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003ec93b
- (unsigned long long)totalPacketsSentForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003ec629
- (id)perServiceDataReceivedForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003ec0d2
- (id)perServiceDataSentForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003ebb7b
- (id)perServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003eb936
- (id)onTransportThread_PerServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003eb2f3
- (MISSING_TYPE *)clearReliableUnicastStateForSession: /* Error: Ran out of types for this method. */;	// IMP=0x00100000003eb1d7
- (void)clearPluginCacheForSession:(id)arg1;	// IMP=0x00100000003eb04b
- (id)copyLinkStatsDict;	// IMP=0x00100000003eaeb2
- (void)deletePairedDevice:(id)arg1;	// IMP=0x00100000003ead26
- (void)connectPairedDevice:(id)arg1;	// IMP=0x00100000003eab9a
- (void)addPairedDevice:(id)arg1 shouldPairDirectlyOverIPsec:(_Bool)arg2;	// IMP=0x00100000003ea9c6
- (void)addPairedDevice:(id)arg1;	// IMP=0x00100000003ea9b2
- (void)tearDownEncryptionForDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;	// IMP=0x00100000003ea826
- (void)obliterateConnectionInfoForCBUUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 completionQueue:(id)arg3;	// IMP=0x00100000003ea37c
- (void)obliterateConnectionInfoWithCompletionBlock:(CDUnknownBlockType)arg1 completionQueue:(id)arg2;	// IMP=0x00100000003ea35a
- (void)obliterateConnectionInfoForCBUUID:(id)arg1;	// IMP=0x00100000003ea23a
- (void)startLocalSetup;	// IMP=0x00100000003ea1d9
- (void)onTransportThread_requestChildConnectionIDForLinkID:(BOOL)arg1 sessionID:(id)arg2;	// IMP=0x00100000003ea1c3
- (void)onTransportThread_setClientUniquePID:(unsigned long long)arg1 sessionID:(id)arg2;	// IMP=0x00100000003ea1ad
- (void)onTransportThread_reportLinkMetricsForSessionID:(id)arg1 linkID:(unsigned char)arg2 lastPacketReceivedTime:(double)arg3 lastPacketSentTime:(double)arg4;	// IMP=0x00100000003ea197
- (void)onTransportThread_reportLinkEventForSessionID:(id)arg1 eventName:(id)arg2 linkID:(unsigned char)arg3;	// IMP=0x00100000003ea181
- (void)onTransportThread_sendConnectedLinkInfoToAVCForSessionID:(id)arg1;	// IMP=0x00100000003ea16b
- (void)onTransportThread_updateParticipantType:(unsigned short)arg1 forSessionID:(id)arg2 sessionStateCounter:(unsigned int)arg3;	// IMP=0x00100000003ea155
- (unsigned long long)onTransportThread_createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2 sessionID:(id)arg3;	// IMP=0x00100000003ea13f
- (unsigned long long)onTransportThread_participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2 sessionID:(id)arg3;	// IMP=0x00100000003ea129
- (void)onTransportThread_registerPluginForGroup:(id)arg1 relayGroupID:(id)arg2 options:(id)arg3;	// IMP=0x00100000003ea113
- (void)onTransportThread_setUPlusOneModeForSessionID:(id)arg1 isUPlusOneEnabled:(_Bool)arg2;	// IMP=0x00100000003ea0fd
- (void)onTransportThread_updateSessionURIToParticipantIDs:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 sessionInfo:(id)arg4;	// IMP=0x00100000003ea0e7
- (void)onTransportThread_updateSessionParticipants:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 participants:(id)arg4;	// IMP=0x00100000003ea0d1
- (void)onTransportThread_getSessionInfo:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 options:(id)arg4;	// IMP=0x00100000003ea0bb
- (void)onTransportThread_setRemoteDeviceVersion:(id)arg1 version:(unsigned int)arg2;	// IMP=0x00100000003ea0a5
- (void)onTransportThread_removeParticipantIDsWithSessionID:(id)arg1 participantIDs:(id)arg2 sessionStateCounter:(unsigned int)arg3;	// IMP=0x00100000003ea08f
- (void)onTransportThread_manageDesignatedDestinationsWithSessionID:(id)arg1 destinations:(id)arg2 withType:(unsigned short)arg3 sessionStateCounter:(unsigned int)arg4;	// IMP=0x00100000003ea079
- (unsigned long long)onTransportThread_getLinkType:(id)arg1;	// IMP=0x00100000003ea063
- (void)onTransportThread_sendStatsRequestWithOptions:(id)arg1 options:(id)arg2;	// IMP=0x00100000003ea04d
- (void)onTransportThread_sendStatsRequest:(id)arg1 options:(id)arg2;	// IMP=0x00100000003ea037
- (void)onTransportThread_flushLinkProbingStatus:(id)arg1 options:(id)arg2;	// IMP=0x00100000003ea021
- (void)onTransportThread_queryLinkProbingStatus:(id)arg1 options:(id)arg2;	// IMP=0x00100000003ea00b
- (void)onTransportThread_stopLinkProbing:(id)arg1 options:(id)arg2;	// IMP=0x00100000003e9ff5
- (void)onTransportThread_startLinkProbing:(id)arg1 options:(id)arg2;	// IMP=0x00100000003e9fdf
- (void)onTransportThread_CurrentCellularSignalStrength:(id)arg1 signalRaw:(int *)arg2 signalStrength:(int *)arg3 signalGrade:(int *)arg4;	// IMP=0x00100000003e9f77
- (void)onTransportThread_receiveJoinNotificationFromAParticipant:(id)arg1;	// IMP=0x00100000003e9f61
- (void)onTransportThread_setWiFiAssistState:(id)arg1 isWiFiAssistEnabled:(_Bool)arg2;	// IMP=0x00100000003e9f4b
- (void)onTransportThread_StopKeepAlive:(id)arg1 linkIDs:(id)arg2;	// IMP=0x00100000003e9f35
- (void)onTransportThread_UpdateProtocolQualityOfService:(id)arg1 linkID:(BOOL)arg2 isGood:(_Bool)arg3;	// IMP=0x00100000003e9f1f
- (void)onTransportThread_DropIPPackets:(id)arg1 linkID:(BOOL)arg2 payloadArray:(id)arg3;	// IMP=0x00100000003e9f09
- (void)onTransportThread_SetPacketNotificationFilter:(id)arg1 linkID:(BOOL)arg2 uniqueTag:(unsigned int)arg3 isEnabled:(_Bool)arg4;	// IMP=0x00100000003e9ef3
- (void)onTransportThread_SetDefaultUnderlyingLink:(id)arg1 linkID:(BOOL)arg2;	// IMP=0x00100000003e9edd
- (void)onTransportThread_requestMaterialsForSession:(id)arg1 participantIDs:(id)arg2 materialType:(int)arg3;	// IMP=0x00100000003e9ec7
- (void)onTransportThread_setServerDesiredMaterialsForSession:(id)arg1 materials:(id)arg2 signer:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e9eb1
- (void)onTransportThread_SendKeyMaterialMessage:(id)arg1 relayGroupID:(id)arg2 keyMaterialMessageData:(id)arg3 destinationURIs:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000003e9e9b
- (void)onTransportThread_SendSKEData:(id)arg1 skeData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e9e85
- (void)getLinkInformationForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000003e9ce4
- (void)handleAllocateRequestFailureForDevice:(id)arg1 requestID:(id)arg2 errorCode:(int)arg3;	// IMP=0x00100000003e9c04
- (void)clearIDSContextBlob:(id)arg1;	// IMP=0x00100000003e9a78
- (void)clearCellInterfaceName:(id)arg1;	// IMP=0x00100000003e98ec
- (void)clearSharedSessionHasJoinedForIDSSession:(id)arg1;	// IMP=0x00100000003e9760
- (void)setIDSContextBlob:(id)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000003e968f
- (void)setCellInterfaceName:(id)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000003e95be
- (void)setSharedSessionHasJoined:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000003e950d
- (void)setForceTCPFallbackOnCell:(id)arg1 forceTCPFallbackOnCell:(_Bool)arg2;	// IMP=0x00100000003e945c
- (void)setForceTCPFallbackOnWiFi:(id)arg1 forceTCPFallbackOnWiFi:(_Bool)arg2;	// IMP=0x00100000003e93ab
- (void)setAllowP2PforIDSSession:(id)arg1 isEnabled:(_Bool)arg2;	// IMP=0x00100000003e92fa
- (void)setIsReliableUnicastSession:(_Bool)arg1 isClient:(_Bool)arg2 forIDSSession:(id)arg3;	// IMP=0x00100000003e9231
- (void)setTimeBase:(id)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000003e9160
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000003e90af
- (void)setAcceptedRelaySession:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;	// IMP=0x00100000003e8fab
- (void)disconnectGlobalLinkForDevice:(id)arg1 isReinitiating:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e8dff
- (void)connectGlobalLinkForDevice:(id)arg1 sessionInfo:(id)arg2 connectReadyHandler:(CDUnknownBlockType)arg3 withLocalInterfacePreference:(int)arg4;	// IMP=0x00100000003e8c4b
- (void)startGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000003e8ba1
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBufferArray:(struct **)arg2 arraySize:(int)arg3;	// IMP=0x00100000003e8b05
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBuffer:(CDStruct_90727270 *)arg2;	// IMP=0x00100000003e8ada
- (void)stopGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000003e889b
- (void)startConnectionForDevice:(id)arg1 isInitiator:(_Bool)arg2 remotePartyID:(id)arg3 useStunMICheck:(_Bool)arg4;	// IMP=0x00100000003e87a5
- (void)processRemoteConnectionDataForDevice:(id)arg1 remoteConnectionData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e869a
- (void)createConnectionDataForDevice:(id)arg1 localPartyID:(id)arg2 dataReadyHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e858f
- (void)stopUDPGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000003e8350
- (void)startUDPGlobalLinkForDevice:(id)arg1;	// IMP=0x00100000003e82a6
- (void)releasePortIfNecessary:(struct IDSPortMap *)arg1 port:(unsigned short)arg2;	// IMP=0x00100000003e81db
- (void)resumeSocketWithOptions:(id)arg1 shouldLogCall:(_Bool)arg2;	// IMP=0x00100000003e7cbd
- (void)suspendSocketWithOptions:(id)arg1;	// IMP=0x00100000003e7977
- (void)checkSuspendTrafficForDevice:(id)arg1 wait:(_Bool)arg2;	// IMP=0x00100000003e76b6
- (void)doCheckSuspendTrafficForDevice:(id)arg1;	// IMP=0x00100000003e7255
- (void)closeSocketWithOptions:(id)arg1;	// IMP=0x00100000003e723e
- (void)closeSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e6a71
- (void)cleanupSocketsForClient:(id)arg1;	// IMP=0x00100000003e5e78
- (void)openSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003e4a5b
- (void)prepareDefaultPairedConnectionInfoWithDeviceUniqueID:(id)arg1 shouldUseIPsecLink:(_Bool)arg2;	// IMP=0x00100000003e45ae
- (id)_prepareConnectionInfoWithCBUUID:(id)arg1 deviceUniqueID:(id)arg2 shouldUseIPsecLink:(_Bool)arg3 identityPair:(id)arg4 remoteDeviceEncryptionInfo:(id)arg5;	// IMP=0x00100000003e4488
- (id)defaultPairedDeviceIdentityPair;	// IMP=0x00100000003e4480
- (void)closeDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;	// IMP=0x00100000003e404f
- (void)setupDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;	// IMP=0x00100000003e1ed2
- (id)controlChannelVersionForCbuuid:(id)arg1;	// IMP=0x00100000003e1e6b
- (void)receiveControlChannelMessage:(id)arg1 fromCbuuid:(id)arg2 deviceUniqueID:(id)arg3;	// IMP=0x00100000003dba9b
- (id)stringComponentsForServiceConnectorService:(id)arg1;	// IMP=0x00100000003dba7f
- (void)startCompressionForConnection:(id)arg1 deviceConnectionInfo:(id)arg2;	// IMP=0x00100000003db255
- (int)processCompressionResponse:(id)arg1 fromDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000003da3dc
- (int)processCompressionRequest:(id)arg1 fromDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000003d928e
- (void)internalOpenSocketWithDestination:(id)arg1 localSA:(id)arg2 remoteSA:(id)arg3 protocol:(int)arg4 trafficClass:(int)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00100000003d8b27
- (_Bool)handleIncomingPacket:(CDStruct_90727270 *)arg1 fromDeviceToken:(id)arg2;	// IMP=0x00100000003d68a7
- (void)resetAllConnectionsForDevice:(id)arg1;	// IMP=0x00100000003d65ba
- (void)removeConnection:(id)arg1 fromDeviceConnectionInfo:(id)arg2 removeCode:(long long)arg3 removeReason:(id)arg4;	// IMP=0x00100000003d5f7b
- (id)initWithName:(id)arg1 address:(id)arg2 andTestTransport:(id)arg3;	// IMP=0x00100000003d5f6d
- (void)resetUTunTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000003d5cc0
- (void)resetIPsecTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000003d5b7c
- (void)resetTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x00100000003d5af2
- (void)startControlChannelWithDevice:(id)arg1 endpoint:(id)arg2;	// IMP=0x00100000003d4cec
- (void)didConnectControlChannelForDeviceConnectionInfo:(id)arg1 connection:(id)arg2 error:(id)arg3;	// IMP=0x00100000003d3e2c
- (void)prepareControlChannelForDeviceConnectionInfo:(id)arg1 genericConnection:(id)arg2;	// IMP=0x00100000003d3ce4
- (void)internalStartConnectionWithEndpoint:(id)arg1 service:(const char *)arg2 parameters:(id)arg3 serviceConnector:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000003d38f4
- (id)init;	// IMP=0x00100000003d357c
- (id)setupNewDeviceConnectionInfoForCbuuid:(id)arg1 deviceUniqueID:(id)arg2 identityPair:(id)arg3 remoteDeviceEncryptionInfo:(id)arg4 shouldUseIPsecLink:(_Bool)arg5;	// IMP=0x00100000003d25e9
- (_Bool)setupIPsecLinkForDeviceConnectionInfo:(id)arg1;	// IMP=0x00100000003d23af
- (void)startDataChannelWithDevice:(id)arg1 genericConnection:(id)arg2 serviceConnectorService:(id)arg3 endpoint:(id)arg4;	// IMP=0x00100000003cd1a3
- (_Bool)setupUTunForDeviceConnectionInfo:(id)arg1;	// IMP=0x00100000003cccb4
- (unsigned char)handleUtunChannelWrite:(id)arg1 source:(struct sockaddr *)arg2 destination:(struct sockaddr *)arg3 upperProtocol:(unsigned char)arg4 bytes:(const void *)arg5 bytesLen:(unsigned long long)arg6;	// IMP=0x00100000003ccca9
- (void)handleUtunChannelRead:(id)arg1 limit:(unsigned int)arg2;	// IMP=0x00100000003ccca3
- (void)handleIPPayload:(const void *)arg1 bytesLength:(unsigned long long)arg2 source:(struct sockaddr *)arg3 destination:(struct sockaddr *)arg4 upperProtocol:(unsigned char)arg5 forDeviceConnectionInfo:(id)arg6 flush:(_Bool)arg7 callerShouldStop:(_Bool *)arg8;	// IMP=0x00100000003ccc9d
- (void)_getStallDetectorForConnection:(id)arg1 deviceConnecionInfo:(id)arg2;	// IMP=0x00100000003cc871
- (void)_reloadSettings;	// IMP=0x00100000003cc86b
- (void)reloadSettings;	// IMP=0x00100000003cb2fd

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

