//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSCloudKitKeyTransparencyStore, IDSCurrentServerTime, IDSDAccountController, IDSDServiceController, IDSKeyTransparencyPolicy, IDSPeerIDManager, IDSPushHandler, IDSRateLimiter, IDSRegistrationKeyManager, IDSRegistrationReasonTracker, KTVerifier, NSDate, NSDictionary, NSMutableDictionary;
@protocol CUTMetricLogger, IDSKeyTransparencyRegistrationDataSource;

@interface IDSKeyTransparencyVerifier : NSObject
{
    IDSCloudKitKeyTransparencyStore *_keyTransparencyStore;	// 8 = 0x8
    IDSKeyTransparencyPolicy *_policy;	// 16 = 0x10
    id <IDSKeyTransparencyRegistrationDataSource> _registrationDataSource;	// 24 = 0x18
    long long _mostRecentKTCDPAccountStatus;	// 32 = 0x20
    KTVerifier *_KTVerifier;	// 40 = 0x28
    NSDictionary *_serviceToVerifier;	// 48 = 0x30
    NSDictionary *_optInEligibleKTApplicationToIDSServiceIdentifier;	// 56 = 0x38
    NSDictionary *_serviceToOptInManager;	// 64 = 0x40
    IDSRegistrationKeyManager *_keyManager;	// 72 = 0x48
    id <CUTMetricLogger> _internalMetricLogger;	// 80 = 0x50
    id <CUTMetricLogger> _productionMetricLogger;	// 88 = 0x58
    IDSRateLimiter *_selfHealRateLimiter;	// 96 = 0x60
    IDSRateLimiter *_registerUpdateRateLimiter;	// 104 = 0x68
    NSMutableDictionary *_cacheClearRateLimiterByService;	// 112 = 0x70
    NSDate *_kickPeerVerificationDate;	// 120 = 0x78
}

+ (id)strippedURIFromKeyTransparencyURI:(id)arg1;	// IMP=0x00400000004bfb40
+ (id)keyTransparencyURIPrefixForServiceIdentifier:(id)arg1;	// IMP=0x00100000004bf9a5
+ (id)keyTransparencyApplicationForServiceIdentifier:(id)arg1;	// IMP=0x00100000004bf8fa
+ (id)keyTransparencyServiceIdentifierForTransparencyApplication:(id)arg1;	// IMP=0x00100000004bf84f
+ (id)keyTransparencyVersionNumberForServiceType:(id)arg1;	// IMP=0x00100000004ac73a
+ (_Bool)isKeyTransparencyEnabled;	// IMP=0x00100000004ac700
+ (id)sharedInstance;	// IMP=0x00100000004ab77a
- (void).cxx_destruct;	// IMP=0x00200000004c071d
@property(retain, nonatomic) NSDate *kickPeerVerificationDate; // @synthesize kickPeerVerificationDate=_kickPeerVerificationDate;
@property(retain, nonatomic) NSMutableDictionary *cacheClearRateLimiterByService; // @synthesize cacheClearRateLimiterByService=_cacheClearRateLimiterByService;
@property(retain, nonatomic) IDSRateLimiter *registerUpdateRateLimiter; // @synthesize registerUpdateRateLimiter=_registerUpdateRateLimiter;
@property(retain, nonatomic) IDSRateLimiter *selfHealRateLimiter; // @synthesize selfHealRateLimiter=_selfHealRateLimiter;
@property(readonly, nonatomic) id <CUTMetricLogger> productionMetricLogger; // @synthesize productionMetricLogger=_productionMetricLogger;
@property(readonly, nonatomic) id <CUTMetricLogger> internalMetricLogger; // @synthesize internalMetricLogger=_internalMetricLogger;
@property(readonly, nonatomic) IDSRegistrationKeyManager *keyManager; // @synthesize keyManager=_keyManager;
@property(readonly, nonatomic) NSDictionary *serviceToOptInManager; // @synthesize serviceToOptInManager=_serviceToOptInManager;
@property(readonly, nonatomic) NSDictionary *optInEligibleKTApplicationToIDSServiceIdentifier; // @synthesize optInEligibleKTApplicationToIDSServiceIdentifier=_optInEligibleKTApplicationToIDSServiceIdentifier;
@property(readonly, nonatomic) NSDictionary *serviceToVerifier; // @synthesize serviceToVerifier=_serviceToVerifier;
@property(readonly, nonatomic) KTVerifier *KTVerifier; // @synthesize KTVerifier=_KTVerifier;
@property(nonatomic) long long mostRecentKTCDPAccountStatus; // @synthesize mostRecentKTCDPAccountStatus=_mostRecentKTCDPAccountStatus;
@property(readonly, nonatomic) id <IDSKeyTransparencyRegistrationDataSource> registrationDataSource; // @synthesize registrationDataSource=_registrationDataSource;
@property(readonly, nonatomic) IDSKeyTransparencyPolicy *policy; // @synthesize policy=_policy;
@property(readonly, nonatomic) IDSCloudKitKeyTransparencyStore *keyTransparencyStore; // @synthesize keyTransparencyStore=_keyTransparencyStore;
- (void)getCurrentRegistrationStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004c0290
- (_Bool)ktShouldClearCacheOnOptInOut;	// IMP=0x00100000004c01e9
- (double)ktRegisterUpdateLimitTime;	// IMP=0x00100000004c013a
- (unsigned long long)ktRegisterUpdateRequestLimit;	// IMP=0x00100000004c009e
- (double)ktCacheClearRequestLimitTime;	// IMP=0x00100000004bffef
- (unsigned long long)ktCacheClearRequestLimit;	// IMP=0x00100000004bff53
- (double)keyTransparencyPeerUpdateLastResortFetchInterval;	// IMP=0x00100000004bfea7
- (double)keyTransparencyCKContainerExpiryTime;	// IMP=0x00100000004bfe4d
- (id)_clientErrorWithCode:(long long)arg1 debugDescription:(id)arg2 underlyingError:(id)arg3;	// IMP=0x00100000004bfd65
- (void)_presentInternalVerificationAlertWithText:(id)arg1;	// IMP=0x00100000004bfc44
- (id)SHA256HashForKeyTransparencyTrustedService:(id)arg1;	// IMP=0x00100000004bf58d
- (id)SHA256HashForKeyTransparencyTrustedServices:(id)arg1;	// IMP=0x00100000004bf0c4
- (id)SHA256HashForKeyTransparencyTrustedDevice:(id)arg1;	// IMP=0x00100000004bee94
- (id)_keyTransparencyVerifierForServiceIdentifier:(id)arg1;	// IMP=0x00100000004bedd3
- (long long)_IDSEndpointTransparencyVerificationStateForKTResult:(unsigned long long)arg1;	// IMP=0x00100000004bedb5
- (id)_IDSEndpointTransparencyStatesForKTLoggableDatas:(id)arg1 index:(id)arg2;	// IMP=0x00100000004beb6e
- (id)_KTDatasForIDSProtoKeyTransparencyTrustedDevices:(id)arg1 serviceIdentifier:(id)arg2;	// IMP=0x00100000004be628
- (id)_IDSProtoKeyTransparencyTrustedDeviceForKeyTransparencyIndex:(id)arg1 entry:(id)arg2;	// IMP=0x00100000004be39b
- (id)_KTDatasForIDSKeyTransparencyEntries:(id)arg1;	// IMP=0x00100000004be1dd
- (id)_KTDataForIDSKeyTransparencyEntry:(id)arg1;	// IMP=0x00100000004be033
- (id)_mergeCloudKitTrustedDevices:(id)arg1 accountKeyTrustedDevices:(id)arg2;	// IMP=0x00100000004bdf80
- (_Bool)_isTrustedCandidate:(id)arg1 index:(id)arg2 givenTrustedDevices:(id)arg3;	// IMP=0x00100000004bdaad
- (unsigned long long)_numberOfMatchesForCandidates:(id)arg1 index:(id)arg2 trustedDevices:(id)arg3;	// IMP=0x00100000004bd99e
- (void)_submitMetricsForTrustedDeviceVerificationWithCloudKitResult:(id)arg1 cloudKitOperationTimeInterval:(double)arg2 accountKeyResult:(id)arg3 accountKeyOperationTimeInterval:(double)arg4 index:(id)arg5 entries:(id)arg6;	// IMP=0x00100000004bcf9e
- (void)_submitMetricsForTrustedDeviceEnrollmentWithCloudKitResult:(id)arg1 cloudKitOperationTimeInterval:(double)arg2 accountKeyResult:(id)arg3 accountKeyOperationTimeInterval:(double)arg4;	// IMP=0x00100000004bc867
- (void)_submitMetricForTrustedDeviceEnrollmentWithKVSResult:(id)arg1 kvsSyncTimeInterval:(double)arg2;	// IMP=0x00100000004bc4ad
- (void)reportAccountKeyFetchMetricForService:(id)arg1 withSuccess:(_Bool)arg2 isAccountMismatch:(_Bool)arg3 withError:(id)arg4;	// IMP=0x00100000004bbef9
- (_Bool)isKeyInKVS:(id)arg1;	// IMP=0x00100000004bbdc2
- (void)updateCurrentDeviceInKVS:(CDUnknownBlockType)arg1;	// IMP=0x00100000004bb8e6
- (void)repairKVSDeviceEntryIfNeeded;	// IMP=0x00100000004bb6ab
- (void)fetchCurrentDeviceKVSKey:(CDUnknownBlockType)arg1;	// IMP=0x00100000004bb3dc
- (void)removeAllKVSEntries;	// IMP=0x00100000004bb39f
- (id)forceSyncKVS;	// IMP=0x00100000004bae4a
- (id)_fetchExpiredEntriesFromKVS;	// IMP=0x00100000004ba6ab
- (id)fetchTrustedDevicesFromKVS;	// IMP=0x00100000004ba2e3
- (void)_removeObjectsForKeysFromKVS:(id)arg1;	// IMP=0x00100000004ba0dc
- (void)_insertTrustedDeviceToKVS:(id)arg1 withMetadata:(id)arg2;	// IMP=0x00100000004b9ec2
- (id)_fetchCurrentKVS;	// IMP=0x00100000004b9e72
- (void)updateKVSWithTrustedDevices:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b963e
- (void)cacheClearRequest:(id)arg1;	// IMP=0x00100000004b8ebf
- (void)_notifyClientOfKTVerifierResults:(id)arg1 forService:(id)arg2;	// IMP=0x00100000004b8a24
- (void)peerVerificationFinishedWithResults:(id)arg1;	// IMP=0x00100000004b8210
- (void)_handleKTCDPStatusUpdate:(id)arg1;	// IMP=0x00100000004b7bf2
- (void)fetchKTCDPStatus:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b7688
- (long long)_IDSKTAccountStatusForKTAccountStatus:(unsigned long long)arg1;	// IMP=0x00100000004b7674
- (void)registrationDataNeedsUpdate;	// IMP=0x00100000004b74e3
- (void)fetchKTRegistrationStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b73d3
- (void)healSelfForApplication:(id)arg1 withHealableErrors:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b733c
- (void)fetchSelfVerificationInfoForApplication:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b5c04
- (void)_fetchVerificationInfoForService:(id)arg1 forURIs:(id)arg2 localURI:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00100000004b5030
- (void)fetchPeerVerificationInfoForApplication:(id)arg1 forURIs:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b4def
- (void)clearTransparencyCacheForService:(id)arg1 peerURI:(id)arg2;	// IMP=0x00100000004b4ab1
- (void)clearCacheAndUpdatePeersForService:(id)arg1;	// IMP=0x00100000004b41f6
- (void)getOptInStatesForKTApplications:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b3b5e
- (_Bool)isOptedInForServiceIdentifier:(id)arg1;	// IMP=0x00100000004b3913
- (void)sendOptInUpdateRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b29cf
- (void)sendOptInUpdateForApplications:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b217f
- (void)checkOptInEligibilityForApplication:(id)arg1 andFetchSelfVerificationRequestIDWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b18d8
- (id)_clientErrorForKTResult:(unsigned long long)arg1 underlyingError:(id)arg2;	// IMP=0x00100000004b1810
- (void)_mutateSuccessfulSyncIndicatorOnKTLoggableDatas:(id)arg1 forIndex:(id)arg2;	// IMP=0x00100000004b11fd
- (void)_fulfillOrFailPromiseSeal:(id)arg1 basedOnIndex:(id)arg2 KTResult:(unsigned long long)arg3 ktLoggableDatas:(id)arg4 optedIn:(_Bool)arg5 error:(id)arg6;	// IMP=0x00100000004b10c3
- (id)_currentVerificationResultsForRegisteredIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004b0b73
- (id)_verifyKeyTransparencyOfRegisteredIndex:(id)arg1 verificationState:(id)arg2 entry:(id)arg3;	// IMP=0x00100000004b0672
- (void)_forceVerificationWithIndex:(id)arg1 ticket:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b0130
- (id)_currentPeerVerificationResultsForQueriedIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004afa57
- (id)_transparencyTicketForQueryResultsWithIndex:(id)arg1 verificationState:(id)arg2 entries:(id)arg3;	// IMP=0x00100000004af54c
- (void)currentPeerVerificationResultsForURIVerificationMap:(id)arg1 forService:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004aec34
- (void)nukeKeyTransparencyStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004ae8b1
- (void)forceVerificationWithIndex:(id)arg1 ticket:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004ae6f8
- (id)currentVerificationResultsForRegisteredIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004ae4aa
- (id)currentPeerVerificationResultsForQueriedIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004ae25c
- (id)_pruneTrustedDevice:(id)arg1 givenEligibleServiceIdentifiers:(id)arg2;	// IMP=0x00100000004ae05a
- (id)transparencyTicketForRegistrationWithIndex:(id)arg1 verificationState:(id)arg2 entry:(id)arg3;	// IMP=0x00100000004add93
- (void)initiateKTQueryForUris:(id)arg1 service:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004ad963
- (void)_kickPeerVerificationForURIs:(id)arg1 localURI:(id)arg2 service:(id)arg3 fetchNow:(_Bool)arg4 withCompletion:(CDUnknownBlockType)arg5;	// IMP=0x00100000004ad591
- (void)kickPeerVerificationForURIs:(id)arg1 service:(id)arg2 localURI:(id)arg3 fetchNow:(_Bool)arg4 withCompletion:(CDUnknownBlockType)arg5;	// IMP=0x00100000004ad177
- (id)transparencyTicketForQueryResultsWithIndex:(id)arg1 verificationState:(id)arg2 entries:(id)arg3 localURI:(id)arg4;	// IMP=0x00100000004acc94
- (id)fetchKTEligibleServices;	// IMP=0x00100000004acc44
- (void)fetchLocalDeviceTrustCircleEligibleServiceIdentifiersWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004aca04
- (void)fetchLocalDeviceTrustCircleEligibilityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004ac83f
- (_Bool)isDeviceAccountStateKeyTransparencyEligible;	// IMP=0x00100000004ac7b6
@property(readonly, nonatomic) IDSRegistrationReasonTracker *registrationReasonTracker;
@property(readonly, nonatomic) IDSPushHandler *pushHandler;
@property(readonly, nonatomic) IDSCurrentServerTime *serverTime;
@property(readonly, nonatomic) IDSDServiceController *serviceController;
@property(readonly, nonatomic) IDSDAccountController *accountController;
@property(readonly, nonatomic) IDSPeerIDManager *peerIDManager;
- (id)initWithPolicy:(id)arg1 serviceToVerifier:(id)arg2 keyManager:(id)arg3 store:(id)arg4 registrationDataSource:(id)arg5 internalMetricLogger:(id)arg6 productionMetricLogger:(id)arg7 serviceToKTOptInManager:(id)arg8;	// IMP=0x00100000004abc72
- (id)init;	// IMP=0x00100000004ab7cf

@end

