//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSKeyTransparencyVerifier, IDSQuerySDPersistenceManager, NSCache, NSMutableDictionary, NSMutableSet, NSString;
@protocol IDSPeerIDPushHandler, IDSPeerIDQueryHandler, IMUserDefaults;

@interface IDSPeerIDManager_SwiftData : NSObject
{
    NSMutableDictionary *_clientDataUpdateBlocks;	// 8 = 0x8
    NSMutableDictionary *_purgeClientDataBlocks;	// 16 = 0x10
    NSMutableDictionary *_endpointQueryListeners;	// 24 = 0x18
    NSMutableDictionary *_disasterModeTokens;	// 32 = 0x20
    id <IDSPeerIDQueryHandler> _queryHandler;	// 40 = 0x28
    id <IMUserDefaults> _userDefaults;	// 48 = 0x30
    NSMutableSet *_reportedExcessiveQueryCacheEntries;	// 56 = 0x38
    NSCache *_dbCache;	// 64 = 0x40
    id <IDSPeerIDPushHandler> _pushHandler;	// 72 = 0x48
    IDSKeyTransparencyVerifier *_keyTransparencyVerifier;	// 80 = 0x50
    IDSQuerySDPersistenceManager *_swiftDataManager;	// 88 = 0x58
    IDSQuerySDPersistenceManager *_restrictedPersistenceManager;	// 96 = 0x60
}

+ (_Bool)_datePassed:(id)arg1;	// IMP=0x0020000000015cf6
+ (unsigned long long)dbCacheCountLimit;	// IMP=0x001000000000afbe
+ (unsigned long long)dbCacheCostLimit;	// IMP=0x001000000000af22
+ (_Bool)shouldUseSelfTokens;	// IMP=0x001000000000ae7d
- (void).cxx_destruct;	// IMP=0x002000000001e995
@property(retain, nonatomic) IDSQuerySDPersistenceManager *restrictedPersistenceManager; // @synthesize restrictedPersistenceManager=_restrictedPersistenceManager;
@property(retain, nonatomic) IDSQuerySDPersistenceManager *swiftDataManager; // @synthesize swiftDataManager=_swiftDataManager;
@property(retain, nonatomic) IDSKeyTransparencyVerifier *keyTransparencyVerifier; // @synthesize keyTransparencyVerifier=_keyTransparencyVerifier;
@property(retain, nonatomic) id <IDSPeerIDPushHandler> pushHandler; // @synthesize pushHandler=_pushHandler;
@property(retain, nonatomic) NSCache *dbCache; // @synthesize dbCache=_dbCache;
@property(retain, nonatomic) NSMutableSet *reportedExcessiveQueryCacheEntries; // @synthesize reportedExcessiveQueryCacheEntries=_reportedExcessiveQueryCacheEntries;
@property(retain, nonatomic) id <IMUserDefaults> userDefaults; // @synthesize userDefaults=_userDefaults;
- (void);	// IMP=0x001000000001e8c7
@property(retain, nonatomic) id <IDSPeerIDQueryHandler> queryHandler; // @synthesize queryHandler=_queryHandler;
@property(retain, nonatomic) NSMutableDictionary *disasterModeTokens; // @synthesize disasterModeTokens=_disasterModeTokens;
@property(retain, nonatomic) NSMutableDictionary *endpointQueryListeners; // @synthesize endpointQueryListeners=_endpointQueryListeners;
@property(retain, nonatomic) NSMutableDictionary *purgeClientDataBlocks; // @synthesize purgeClientDataBlocks=_purgeClientDataBlocks;
@property(retain, nonatomic) NSMutableDictionary *clientDataUpdateBlocks; // @synthesize clientDataUpdateBlocks=_clientDataUpdateBlocks;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;	// IMP=0x001000000001e79d
- (void)_updateKTContext:(id)arg1 forURI:(id)arg2;	// IMP=0x001000000001e1bf
- (id)_loadCachedPeerIDValueForKey:(id)arg1 ignoreExpiration:(_Bool)arg2;	// IMP=0x001000000001ddef
- (void)performCleanupTasks;	// IMP=0x001000000001dca3
- (void)endpointsForURIs:(id)arg1 serviceIdentifier:(id)arg2 localURI:(id)arg3 completion:(CDUnknownBlockType)arg4 queue:(id)arg5;	// IMP=0x001000000001d804
- (void)removeEndpointQueryCompletionBlockForToken:(id)arg1;	// IMP=0x001000000001d61a
- (void)addEndpointQueryCompletionBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2 queue:(id)arg3;	// IMP=0x001000000001d329
- (void)removePurgeClientDataBlockForToken:(id)arg1;	// IMP=0x001000000001d209
- (void)addPurgeClientDataBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2;	// IMP=0x001000000001cf9a
- (void)removeClientDataUpdateBlockForToken:(id)arg1;	// IMP=0x001000000001ce7a
- (void)addClientDataUpdateBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2;	// IMP=0x001000000001cc0b
- (void)removeCompletionBlockForToken:(id)arg1;	// IMP=0x001000000001cba2
- (void)addCompletionBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2;	// IMP=0x001000000001ca7f
- (id)shortHandleForURI:(id)arg1 fromURI:(id)arg2;	// IMP=0x001000000001c8be
- (id)uriForShortHandle:(id)arg1;	// IMP=0x001000000001c49f
- (id)peerTokensForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x001000000001c295
- (id)urisMatchingPushToken:(id)arg1 service:(id)arg2;	// IMP=0x001000000001bdb4
- (id)activeURIsFromURI:(id)arg1 service:(id)arg2;	// IMP=0x001000000001b6b1
- (_Bool)hasPeerTokensForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x001000000001b515
- (_Bool)hasPeerTokensForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x001000000001b1b0
- (void)forgetPeerTokensForService:(id)arg1;	// IMP=0x001000000001ad16
- (void)forgetPeerTokensForURI:(id)arg1 service:(id)arg2;	// IMP=0x001000000001a69b
- (void)forgetPeerTokensForURI:(id)arg1 fromURI:(id)arg2 services:(id)arg3;	// IMP=0x0010000000019e0b
- (void)forgetPeerTokensForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x00100000000196c2
- (void)forgetPeerTokensForURIs:(id)arg1 services:(id)arg2;	// IMP=0x001000000001917a
- (id)pleaseDontCopyCacheDictionaryRepresentation;	// IMP=0x0010000000018f30
- (void)clearCacheAndPersistImmediately:(_Bool)arg1;	// IMP=0x0010000000018c3f
- (void)notePeerToken:(id)arg1 forURI:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x0010000000018524
- (_Bool)startQueryForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 context:(id)arg5 reason:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x0010000000017b41
- (_Bool)startQueryForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 forSending:(_Bool)arg5 forRefresh:(_Bool)arg6 isForced:(_Bool)arg7 reason:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x0010000000017a1a
- (void)updateCachedVerifierResultsWithResults:(id)arg1;	// IMP=0x0010000000016e10
- (id)keyTransparencyContextForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3;	// IMP=0x0010000000016cea
- (id)_keyTransparencyVerifierResultForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3;	// IMP=0x0010000000016c9a
- (id)verifierResultsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3;	// IMP=0x001000000001663e
- (id)_peerIDKeysForService:(id)arg1;	// IMP=0x00100000000164d9
- (id)_peerIDKeysForService:(id)arg1 andFromURI:(id)arg2;	// IMP=0x00100000000162e8
- (id)_endpointsForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3 ignoreExpiration:(_Bool)arg4 ignoreCache:(_Bool)arg5 hitCache:(_Bool *)arg6;	// IMP=0x0010000000015d32
- (id)_endpointsForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3 ignoreExpiration:(_Bool)arg4;	// IMP=0x0010000000015d17
- (id)lightDescriptionForVerifierResult:(id)arg1;	// IMP=0x0010000000015b66
- (id)idInfoResultForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3 infoType:(unsigned long long)arg4 infoOptions:(id)arg5 idStatusUpdates:(id)arg6;	// IMP=0x0010000000015143
- (id)endpointsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3 withCapabilities:(id)arg4;	// IMP=0x0010000000014c5c
- (id)endpointsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3 ignoringTTL:(_Bool)arg4;	// IMP=0x0010000000014a59
- (id)endpointForPushToken:(id)arg1 URI:(id)arg2 service:(id)arg3 fromURI:(id)arg4;	// IMP=0x00100000000146e0
- (id)endpointsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3;	// IMP=0x0010000000014516
- (_Bool)shouldShowPeerErrorsFor:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x00100000000144e1
- (_Bool)hasProperty:(id)arg1 forURI:(id)arg2 pushToken:(id)arg3 fromURI:(id)arg4 service:(id)arg5;	// IMP=0x00100000000144b8
- (long long)_valueOfProperty:(id)arg1 forURI:(id)arg2 pushToken:(id)arg3 fromURI:(id)arg4 service:(id)arg5;	// IMP=0x0010000000013fb0
- (double)timeToCacheURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3 forStatus:(unsigned int)arg4;	// IMP=0x0010000000013cd7
- (id)sessionTokenForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4 expirationDate:(id *)arg5 refreshDate:(id *)arg6 fromIdentity:(id)arg7 includeSelfDevice:(_Bool)arg8;	// IMP=0x0010000000013924
- (id)senderCorrelationIdentifierForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x00100000000137a0
- (id)senderCorrelationIdentifierForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x0010000000013717
- (id)publicDeviceIdentityContainerForPushToken:(id)arg1;	// IMP=0x0010000000013304
- (id)publicKeyForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x0010000000013180
- (_Bool)hasPublicKeyForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x001000000001314d
- (id)endpointsForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3 fromIdentity:(id)arg4 filterBehavior:(unsigned long long)arg5 allowRefresh:(_Bool)arg6;	// IMP=0x0010000000012927
- (id)sessionTokensForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3 fromIdentity:(id)arg4 includeSelfDevice:(_Bool)arg5 fullyRemoveSelfDevice:(_Bool)arg6 allowRefresh:(_Bool)arg7;	// IMP=0x0010000000011c84
- (id)sessionTokensForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3 fromIdentity:(id)arg4 includeSelfDevice:(_Bool)arg5 fullyRemoveSelfDevice:(_Bool)arg6;	// IMP=0x0010000000011c59
- (id)finishedQueryWithInfo:(id)arg1 forURIs:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x001000000000d7e3
- (id)persistenceManagers;	// IMP=0x001000000000d77c
- (id)persistenceManagerForService:(id)arg1;	// IMP=0x001000000000d71e
- (void)_setDisasterModeToken:(id)arg1 forURI:(id)arg2;	// IMP=0x001000000000d4cc
- (id)_disasterModeTokenForURI:(id)arg1;	// IMP=0x001000000000d31c
- (void)setPersistenceManager:(id)arg1;	// IMP=0x001000000000d239
- (void)dealloc;	// IMP=0x001000000000d1bf
- (id)initWithPushHandler:(id)arg1 queryHandler:(id)arg2 restrictedPersistenceManager:(id)arg3 keyTransparencyVerifier:(id)arg4 userDefaults:(id)arg5 dbCache:(id)arg6;	// IMP=0x001000000000b197
- (id)initWithPushHandler:(id)arg1 queryHandler:(id)arg2 keyTransparencyVerifier:(id)arg3 userDefaults:(id)arg4;	// IMP=0x001000000000b05a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

