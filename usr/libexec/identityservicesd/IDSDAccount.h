//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUTDeferredTaskQueue, IDSGameCenterData, IDSRegistration, IDSRegistrationPushHandler, IDSServiceProperties, MISSING_TYPE, NSArray, NSDate, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface IDSDAccount : NSObject
{
    NSMutableDictionary *_accountInfo;	// 8 = 0x8
    IDSRegistration *_registrationInfo;	// 16 = 0x10
    IDSServiceProperties *_service;	// 24 = 0x18
    NSString *_uniqueID;	// 32 = 0x20
    NSMutableArray *_setupHandlers;	// 40 = 0x28
    NSHashTable *_registrationListeners;	// 48 = 0x30
    IDSRegistrationPushHandler *_pushHandler;	// 56 = 0x38
    NSDate *_dateOfLastHandlesCheck;	// 64 = 0x40
    NSMutableSet *_localServices;	// 72 = 0x48
    unsigned int _disabledAutomatically:1;	// 80 = 0x50
    unsigned int _duringInit:1;	// 80 = 0x50
    unsigned int _shouldRequeryHandles:1;	// 80 = 0x50
    unsigned int _issuingDependentCheck:1;	// 80 = 0x50
    unsigned int _issuingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingDependentCheck:1;	// 80 = 0x50
    unsigned int _pendingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingReIdentify:1;	// 80 = 0x50
    unsigned int _pendingReRegister:1;	// 81 = 0x51
    unsigned int _isRegistrationActive:1;	// 81 = 0x51
    unsigned int _pendingAccountInfoBroadcast:1;	// 81 = 0x51
    unsigned int _isBeingRemoved:1;	// 81 = 0x51
    CUTDeferredTaskQueue *_broadcastAccountInfoChangedTask;	// 88 = 0x58
}

+ (_Bool)dependentRegistration:(id)arg1 hasDependentRegistrationWithURI:(id)arg2 token:(id)arg3;	// IMP=0x00200000001a576f
+ (void)dependentRegistration:(id)arg1 findDeviceUniqueID:(id *)arg2 btID:(id *)arg3 forURI:(id)arg4 token:(id)arg5 supportsLiveDelivery:(_Bool *)arg6;	// IMP=0x00100000001a4d90
+ (void)sendMessageWithSendParameters:(id)arg1 service:(id)arg2 threadContext:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 progressBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x001000000035b6b9
+ (void)_sendLocallyWithSendParameters:(id)arg1 service:(id)arg2 uriToLocalDestination:(id)arg3 data:(id)arg4 protobuf:(id)arg5 threadContext:(id)arg6 progressBlock:(CDUnknownBlockType)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000003584ad
+ (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 threadContext:(id)arg4 sendParameters:(id)arg5;	// IMP=0x001000000035599f
- (void).cxx_destruct;	// IMP=0x00200000001ae94d
@property(readonly, nonatomic) CUTDeferredTaskQueue *broadcastAccountInfoChangedTask; // @synthesize broadcastAccountInfoChangedTask=_broadcastAccountInfoChangedTask;
@property(nonatomic) _Bool isBeingRemoved; // @synthesize isBeingRemoved=_isBeingRemoved;
@property(readonly, nonatomic) _Bool issuingDependentCheck; // @synthesize issuingDependentCheck=_issuingDependentCheck;
@property(nonatomic) _Bool pendingDependentCheck; // @synthesize pendingDependentCheck=_pendingDependentCheck;
@property(nonatomic) _Bool wasDisabledAutomatically; // @synthesize wasDisabledAutomatically=_disabledAutomatically;
@property(readonly, nonatomic) NSDictionary *accountInfo; // @synthesize accountInfo=_accountInfo;
@property(readonly, nonatomic) IDSRegistration *registration; // @synthesize registration=_registrationInfo;
- (void)didUpdateProtocolForPairedDevice:(id)arg1;	// IMP=0x00100000001ae5e1
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x00100000001ae2ae
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x00100000001adf58
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x00100000001aded3
- (void)_notifyDelegatesAddedLocalDevice:(id)arg1;	// IMP=0x00100000001adb36
- (void)_notifyClientDelegatesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001ada14
@property(readonly, retain, nonatomic) NSDictionary *accountSetupInfo;
- (id)smallDescription;	// IMP=0x00100000001ad768
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSArray *linkedAccounts;
- (id)adHocAccounts;	// IMP=0x00100000001acb00
- (_Bool)forEachAdhocAccount:(CDUnknownBlockType)arg1;	// IMP=0x00100000001ac16f
- (id)accountAndAdHocAccounts;	// IMP=0x00100000001ac0f9
- (void)_updateAccountWithAccountInfo:(id)arg1;	// IMP=0x00100000001ab8b9
- (void)writeAccountDefaults:(id)arg1;	// IMP=0x00100000001ab8a5
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2 interestedSubservices:(id)arg3;	// IMP=0x00100000001aad95
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2;	// IMP=0x00100000001aad80
- (void)_broadcastAccountInfoChanged;	// IMP=0x00100000001aabeb
- (void)_notifyListenersWithChanges:(id)arg1;	// IMP=0x00100000001a9ba2
- (void)_broadcastAccountMessageBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a9a64
- (_Bool)isAdHocAccount;	// IMP=0x00100000001a99e8
- (id)primaryServiceName;	// IMP=0x00100000001a9948
@property(readonly, nonatomic) IDSRegistration *primaryRegistration;
- (id)primaryAccountUniqueID;	// IMP=0x00100000001a980e
- (id)primaryAccount;	// IMP=0x00100000001a9772
@property(readonly, nonatomic) long long lastRegistrationFailureError;
@property(readonly, nonatomic) NSDate *lastRegistrationFailureDate;
@property(readonly, nonatomic) NSDate *lastRegistrationSuccessDate;
@property(readonly, nonatomic) NSDate *lastGDRDate;
- (id)dependentRegistrationMatchingUUID:(id)arg1;	// IMP=0x00100000001a969f
- (id)dependentRegistrationMatchingUUID:(id)arg1 includingTinker:(_Bool)arg2;	// IMP=0x00100000001a93d0
@property(readonly, nonatomic) NSArray *registeredDevices;
@property(readonly, nonatomic) NSArray *dependentRegistrationsIncludingCurrentDevice;
- (id)dependentRegistrationsIncludingTinker:(_Bool)arg1;	// IMP=0x00100000001a91e0
@property(readonly, nonatomic) NSArray *dependentRegistrations;
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingCurrentDevice:(_Bool)arg2 includingTinker:(_Bool)arg3;	// IMP=0x00100000001a77c7
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingTinker:(_Bool)arg2;	// IMP=0x00100000001a7771
@property(readonly, nonatomic) IDSDAccount *superAccount;
@property(readonly, nonatomic) NSDictionary *defaultPairedDependentRegistration;
- (id)defaultPairedDependentRegistrationIncludingTinker:(_Bool)arg1;	// IMP=0x00100000001a70b5
- (id)_fromIDFromDevice:(id)arg1 withCBUUID:(id)arg2 uniqueID:(id)arg3;	// IMP=0x00100000001a6c8f
- (id)fromIDForCBUUID:(id)arg1 deviceID:(id)arg2;	// IMP=0x00100000001a5f3a
- (_Bool)hasDependentRegistrationWithURI:(id)arg1 token:(id)arg2;	// IMP=0x00100000001a5dc8
- (void)findDeviceUniqueID:(id *)arg1 btID:(id *)arg2 forURI:(id)arg3 token:(id)arg4 supportsLiveDelivery:(_Bool *)arg5;	// IMP=0x00100000001a5495
@property(readonly, nonatomic) _Bool isUsableForSending;
@property(readonly, nonatomic) _Bool hasEverRegistered;
- (id)_registrationCert;	// IMP=0x00100000001a4b2a
- (_Bool)hasVettedAliasURI:(id)arg1;	// IMP=0x00100000001a4ab4
- (_Bool)hasAliasURI:(id)arg1;	// IMP=0x00100000001a4a13
@property(readonly, nonatomic) NSArray *prefixedURIStringsFromRegistration;
@property(readonly, nonatomic) NSArray *unprefixedURIStringsFromRegistration;
- (void)setupAccountWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a43b8
@property(readonly, nonatomic) _Bool isEnabled;
@property(readonly, nonatomic) _Bool shouldRegisterUsingDSHandle;
@property(readonly, nonatomic) _Bool shouldAutoRegisterAllHandles;
@property(readonly, nonatomic) _Bool isRegistered;
- (void)authenticationChanged;	// IMP=0x00100000001a4267
@property(retain, nonatomic) NSDate *expirationDate;
@property(nonatomic) _Bool isTemporary;
@property(readonly, nonatomic) long long registrationError;
@property(readonly, nonatomic) int registrationErrorReason;
@property(readonly, nonatomic) int registrationStatus;
@property(retain, nonatomic) NSString *loginID;
@property(readonly, nonatomic) NSString *dsID;
@property(readonly, nonatomic) NSString *dsHandle;
@property(readonly, nonatomic) int accountType;
@property(nonatomic) _Bool isUserDisabled;
- (void)clearDisplayName;	// IMP=0x00100000001a3651
@property(retain, nonatomic) NSString *displayName;
@property(retain, nonatomic) IDSGameCenterData *gameCenterData;
@property(retain, nonatomic) NSString *userUniqueIdentifier;
@property(readonly, nonatomic) NSString *uniqueID;
@property(readonly, nonatomic) IDSServiceProperties *service;
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000001a2eb2
- (void)dealloc;	// IMP=0x00100000001a2b65
- (void)cleanupAccount;	// IMP=0x00100000001a2b4f
- (id)initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5;	// IMP=0x00100000001a2b2d
- (id)initAdHocAccountWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6;	// IMP=0x00100000001a2b02
- (id)_initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6 isAdHocAccount:(_Bool)arg7;	// IMP=0x00100000001a251e
- (id)initWithDictionary:(id)arg1 service:(id)arg2 uniqueID:(id)arg3;	// IMP=0x00100000001a1e85
- (void)_setupAccount;	// IMP=0x00100000001a12dd
- (void)_resetVariables;	// IMP=0x00100000001a12cf
- (void)_cleanupAccount;	// IMP=0x001000000019fc18
- (void)sendSenderKeyMessageToDestinations:(id)arg1 fromURI:(id)arg2 guid:(id)arg3 messageData:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x001000000025ab07
- (void)_notifyRegistrationListenersAccountDidUpdateRegisteredDevices;	// IMP=0x001000000025a943
- (void)removeRegistrationListener:(id)arg1;	// IMP=0x001000000025a8dd
- (void)addRegistrationListener:(id)arg1;	// IMP=0x001000000025a860
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x001000000025a5ab
- (id)pushHandler;	// IMP=0x001000000025a593
- (id)serviceType;	// IMP=0x001000000025a54c
- (void)reportClientEvent:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000025a49c
- (void)reportMessage:(id)arg1 toURI:(id)arg2;	// IMP=0x001000000025a3ec
- (void)reportAction:(long long)arg1 ofTempURI:(id)arg2 fromURI:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x001000000025a335
- (void)reportiMessageUnknownSender:(id)arg1 messageID:(id)arg2 isBlackholed:(_Bool)arg3 isJunked:(_Bool)arg4 messageServerTimestamp:(id)arg5 toURI:(id)arg6;	// IMP=0x001000000025a23b
- (void)reportSpamWithMessages:(id)arg1 toURI:(id)arg2;	// IMP=0x001000000025a19e
- (long long)validationStatusForAlias:(id)arg1;	// IMP=0x001000000025a18c
- (id)aliases;	// IMP=0x001000000025a17a
- (double)_maxSelectedButVettedGracePeriod;	// IMP=0x0010000000259fd1
- (id)_allUserIntentWithDefaultReason:(_Bool)arg1;	// IMP=0x0010000000259aa0
- (void)_stopTrackingUserIntentOfAlias:(id)arg1;	// IMP=0x001000000025987c
- (MISSING_TYPE *)_setUserIntentState:forAlias:withReason: /* Error: Ran out of types for this method. */;	// IMP=0x00100000002593ab
- (id)_userIntentDictForAlias:(id)arg1;	// IMP=0x0010000000259093
- (unsigned char)unselectReasonForAlias:(id)arg1;	// IMP=0x0010000000258fcf
- (void)loadAliasUserIntentMetadataIfNeeded;	// IMP=0x0010000000258faf
- (unsigned char)currentAliasState:(id)arg1;	// IMP=0x0010000000258f36
- (_Bool)wasRecentlySelectedAlias:(id)arg1;	// IMP=0x0010000000258f1e
- (void)markAsWasSelectedAlias:(id)arg1;	// IMP=0x0010000000258efe
- (void)markAsVettedAlias:(id)arg1;	// IMP=0x0010000000258e95
- (void)markAsUnvettedAlias:(id)arg1;	// IMP=0x0010000000258e1c
- (void)markAsUnselectedAlias:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x0010000000258dff
- (void)markAsSelectedAlias:(id)arg1;	// IMP=0x0010000000258ddf
- (id)invisibleAliases;	// IMP=0x0010000000258d85
- (id)vettedAliases;	// IMP=0x0010000000258d2b
- (void)reIdentify;	// IMP=0x0010000000258d14
- (void)reregister;	// IMP=0x0010000000258d00
- (void)_refreshRegistration;	// IMP=0x0010000000258a3f
- (void)validateProfile;	// IMP=0x0010000000258632
- (void)askPeersToClearCacheWithURIs:(id)arg1 fromURI:(id)arg2 forService:(id)arg3;	// IMP=0x001000000025825e
- (void)_handleKTOptInStatusUpdateError:(long long)arg1;	// IMP=0x0010000000258207
- (_Bool)updateKTOptInStatusWithRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002572fa
- (_Bool)updateKTOptInStatus:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002564d1
@property(readonly, nonatomic) NSDictionary *pseudonymURIMap;
@property(readonly, nonatomic) NSArray *pseudonyms;
- (id)pseudonymForPseudonymURIString:(id)arg1;	// IMP=0x001000000025568b
- (void)_removePseudonyms:(id)arg1;	// IMP=0x00100000002550c6
- (void)_removePseudonym:(id)arg1;	// IMP=0x001000000025501e
- (void)_addPseudonym:(id)arg1;	// IMP=0x0010000000254a38
- (void)_removeAllPseudonyms;	// IMP=0x0010000000254970
- (_Bool)revokePseudonym:(id)arg1 requestProperties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000254572
- (_Bool)renewPseudonym:(id)arg1 forUpdatedExpiryEpoch:(double)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000254165
- (_Bool)provisionPseudonymForURI:(id)arg1 properties:(id)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000253b69
- (void)_handlePseudonymProvisionError:(long long)arg1;	// IMP=0x0010000000253a8b
- (void)updateFeatureToggleStateWithOptions:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000002538d1
- (void)retrieveFeatureToggleStateForOptions:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000025365a
- (unsigned long long)_handleAndConvertFeatureToggleError:(long long)arg1;	// IMP=0x0010000000253566
- (void)resetErrorState;	// IMP=0x00100000002534c4
- (void)refreshVettedAliases;	// IMP=0x0010000000253396
- (void)validateCredentialsWithDeliveryCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000025330c
- (void)deactivateAndPurgeIdentify;	// IMP=0x00100000002530f6
- (void)unvalidateAliases:(id)arg1;	// IMP=0x0010000000252ee6
- (void)_unvalidateAliases:(id)arg1;	// IMP=0x001000000025294c
- (void)validateAliases:(id)arg1;	// IMP=0x001000000025273c
- (void)_validateAliases:(id)arg1;	// IMP=0x00100000002524fe
- (void)_validateAliases:(id)arg1 validateAlreadyValid:(_Bool)arg2;	// IMP=0x00100000002519c5
- (void)addAliases:(id)arg1;	// IMP=0x00100000002518c8
- (void)_addAliases:(id)arg1;	// IMP=0x00100000002510c7
- (void)removeAliases:(id)arg1;	// IMP=0x0010000000250ff4
- (void)_removeAliases:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x0010000000250650
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6;	// IMP=0x0010000000250625
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6 aliasProperties:(id)arg7;	// IMP=0x0010000000250157
- (long long)_validationStatusForAlias:(id)arg1;	// IMP=0x001000000024feaf
- (id)_uriDictionariesFromAccountInfo;	// IMP=0x001000000024fdb8
- (id)_unprefixedURIStringsFromAccountInfo;	// IMP=0x001000000024fb97
- (void)_ignoreIncomingPushes;	// IMP=0x001000000024fb75
- (void)_acceptIncomingPushes;	// IMP=0x001000000024fb50
- (void)center:(id)arg1 failedRegionValidation:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x001000000024f782
- (void)center:(id)arg1 succeededRegionValidation:(id)arg2 regionID:(id)arg3 phoneNumber:(id)arg4 extraContext:(id)arg5 verified:(_Bool)arg6;	// IMP=0x001000000024f2d7
- (void)center:(id)arg1 succeededCurrentEmailsRequest:(id)arg2 emailInfo:(id)arg3;	// IMP=0x001000000024f03c
- (void)center:(id)arg1 failedAuthentication:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x001000000024ec6d
- (void)center:(id)arg1 succeededAuthentication:(id)arg2;	// IMP=0x001000000024e90b
- (void)center:(id)arg1 startedAuthenticating:(id)arg2;	// IMP=0x001000000024e714
- (void)registrationControllerNeedsNewRegistration:(id)arg1;	// IMP=0x001000000024e538
- (void)registrationController:(id)arg1 deregistrationSucceeded:(id)arg2;	// IMP=0x001000000024e32d
- (void)registrationController:(id)arg1 deregistrationWillStart:(id)arg2;	// IMP=0x001000000024e1e8
- (void)registrationController:(id)arg1 registrationFailed:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x001000000024cd3e
- (void)registrationController:(id)arg1 registrationSucceeded:(id)arg2;	// IMP=0x001000000024bb0d
- (void)registrationController:(id)arg1 registrationUpdated:(id)arg2;	// IMP=0x001000000024b91d
- (void)registrationController:(id)arg1 registrationWillStart:(id)arg2;	// IMP=0x001000000024b702
- (void)centerNeedsNewIdentification:(id)arg1;	// IMP=0x001000000024b6fc
- (void)center:(id)arg1 failedIdentification:(id)arg2 error:(long long)arg3;	// IMP=0x001000000024b6f6
- (void)center:(id)arg1 succeededIdentification:(id)arg2 phoneNumber:(id)arg3 token:(id)arg4;	// IMP=0x001000000024b499
- (unsigned long long)_unregistered130RetryInterval;	// IMP=0x001000000024b483
- (void)_updateSessionsWithRegisteredURIs:(id)arg1 retryIfNotRegistered:(_Bool)arg2;	// IMP=0x001000000024ab47
- (void)_updateSessionsWithRegisteredURIs:(id)arg1;	// IMP=0x001000000024ab30
- (void)_updateSessionsForAllRegisteredURIs;	// IMP=0x001000000024aac2
- (void)_flushTokensForRegisteredURIs:(id)arg1;	// IMP=0x001000000024a02e
- (void)_processReceivedDependentRegistration:(id)arg1 oldDependentRegistrations:(id)arg2;	// IMP=0x0010000000249278
- (void)_issueDependentCheck;	// IMP=0x00100000002483a7
- (void)_issueCriticalDependentCheck;	// IMP=0x0010000000248379
- (_Bool)_issueForcedDependentCheckIfPossible;	// IMP=0x0010000000248331
- (void)_saveAndNotifyGDRUpdate;	// IMP=0x0010000000247e23
- (void)_notifyListenersAndSetDependentRegistrations:(id)arg1 onRegistrationInfo:(id)arg2;	// IMP=0x0010000000247b94
- (void)gdrReAuthenticateIfNecessary;	// IMP=0x0010000000247703
- (void)_clearGDRState;	// IMP=0x0010000000247609
- (void)handler:(id)arg1 flushCacheForURIs:(id)arg2;	// IMP=0x0010000000247206
- (void)handler:(id)arg1 profileHandlesUpdated:(id)arg2 status:(id)arg3 allowGDR:(id)arg4;	// IMP=0x0010000000246966
- (void)handler:(id)arg1 profile:(id)arg2 deviceUpdated:(id)arg3 service:(id)arg4;	// IMP=0x0010000000245ff6
- (void)_updateHandles:(_Bool)arg1;	// IMP=0x00100000002457a7
- (void)_parseHandlesInfo:(id)arg1 currentAliases:(id)arg2 currentVettedAliases:(id)arg3;	// IMP=0x0010000000243c71
- (void)handler:(id)arg1 reloadBag:(id)arg2;	// IMP=0x00100000002436f2
- (void)handler:(id)arg1 pushTokenChanged:(id)arg2;	// IMP=0x001000000024328f
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;	// IMP=0x0010000000242f0f
- (void)passwordUpdated;	// IMP=0x0010000000242c41
- (void)unregisterAccount;	// IMP=0x0010000000242a29
- (void)_unregisterAccount;	// IMP=0x001000000024262b
- (void)registerAccount;	// IMP=0x0010000000242441
- (void)_registerAccount;	// IMP=0x0010000000241868
- (_Bool)_migrateRegistrationIfNeeded;	// IMP=0x001000000024110e
- (void)_retryRegister;	// IMP=0x0010000000240f74
- (void)authenticateAccount;	// IMP=0x0010000000240d5c
- (_Bool)_isPasswordPromptPermissibleDuringAuthentication;	// IMP=0x0010000000240c6a
- (void)_authenticateAccount;	// IMP=0x0010000000240830
- (void)deactivateRegistration;	// IMP=0x001000000024004d
- (void)activateRegistration;	// IMP=0x001000000023f358
- (void)systemRestoreStateDidChange;	// IMP=0x001000000023f1dc
- (void)systemDidStartBackup;	// IMP=0x001000000023f13f
- (void)systemDidFinishMigration;	// IMP=0x001000000023f0a4
- (void)_reregister;	// IMP=0x001000000023f090
- (void)_reregisterAndReidentify:(_Bool)arg1;	// IMP=0x001000000023ec61
- (void)_removeAuthenticationCredentialsIncludingAuthToken:(_Bool)arg1;	// IMP=0x001000000023e894
- (void)_removeAuthenticationCredentials;	// IMP=0x001000000023e87d
- (void)_reregisterAndReProvision;	// IMP=0x001000000023e614
- (void)_reAuthenticate;	// IMP=0x001000000023e5af
- (_Bool)_stopRegistrationAgent;	// IMP=0x001000000023e3b2
- (void)_updateRegistrationStatusWithError:(long long)arg1 info:(id)arg2;	// IMP=0x001000000023d294
- (void)setRegistrationStatus:(int)arg1 error:(long long)arg2 alertInfo:(id)arg3;	// IMP=0x001000000023cdbc
- (void)_checkRegistration;	// IMP=0x001000000023c114
- (void)_updateVettedAliases:(id)arg1 emailInfo:(id)arg2 addToCurrentHandlesIfNeeded:(_Bool)arg3;	// IMP=0x001000000023b757
- (void)_updatePseudonymsFromEmailInfo:(id)arg1;	// IMP=0x001000000023ae3a
- (void)_keychainMigrationComplete:(id)arg1;	// IMP=0x001000000023aa2b
- (void)_needsEncryptionIdentityRoll:(id)arg1;	// IMP=0x001000000023a9c6
- (void)_identityGenerated:(id)arg1;	// IMP=0x001000000023a919
- (void)_identityRebuilt:(id)arg1;	// IMP=0x001000000023a8b4
- (void)_deregisterDeviceCenterNotifications;	// IMP=0x001000000023a757
- (void)_registerForDeviceCenterNotifications;	// IMP=0x001000000023a5be
- (void)_registrationAbilityChanged:(id)arg1;	// IMP=0x001000000023a431
- (_Bool)isRegistrationActive;	// IMP=0x001000000023a41a
- (_Bool)isDeviceAuthenticated;	// IMP=0x001000000023a3d1
- (_Bool)isDeviceRegistered;	// IMP=0x001000000023a334
- (void)refreshAdHocServiceNames;	// IMP=0x0010000000239daf
- (_Bool)_rebuildRegistrationInfo:(_Bool)arg1;	// IMP=0x0010000000237214
- (int)_neededRegistrationType;	// IMP=0x00100000002371bf
- (void)_updateCallerIDToTemporaryPhone;	// IMP=0x0010000000236efd
- (void)_updatePhoneNumberCallerID;	// IMP=0x0010000000236a5b
- (_Bool)_hasBudgetForForcedGDR;	// IMP=0x0010000000236665
- (void)_updatePerformedForcedGDRDate;	// IMP=0x0010000000236542
- (id)_performedForcedGDRDatePeriod;	// IMP=0x0010000000236447
- (void)_clearForcedGDRDate;	// IMP=0x0010000000236403
- (void)_clearForcedGDRCount;	// IMP=0x00100000002363bf
- (void)_incrementForcedGDRCount;	// IMP=0x0010000000236330
- (int)_currentForcedGDRCount;	// IMP=0x00100000002362bb
- (_Bool)_isBuddyBlockingRegistration;	// IMP=0x00100000002362a2
- (id)userDefaults;	// IMP=0x0010000000236289
- (id)senderKeyDistributionManager;	// IMP=0x0010000000236232
- (id)systemMonitor;	// IMP=0x0010000000236219
- (id)peerIDManager;	// IMP=0x0010000000236200
- (id)serviceController;	// IMP=0x00100000002361e7
- (id)accountController;	// IMP=0x00100000002361ce
- (id)appleIDNotificationCenter;	// IMP=0x00100000002361b5
- (id)registrationCenter;	// IMP=0x001000000023619c
- (_Bool)shouldIncludeDefaultDeviceAsDestinationForMessageWithParams:(id)arg1;	// IMP=0x001000000037179e
- (id)pairingManager;	// IMP=0x0010000000371785
- (void)decryptMessageData:(id)arg1 guid:(id)arg2 localURI:(id)arg3 remoteURI:(id)arg4 pushToken:(id)arg5 groupID:(id)arg6 encryptionType:(long long)arg7 isLiveRetry:(_Bool)arg8 replayKey:(id)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x0010000000370f67
- (void)sendMessage:(id)arg1 params:(id)arg2 bulkedPayload:(id)arg3 fromID:(id)arg4 toDestinations:(id)arg5 useDictAsTopLevel:(_Bool)arg6 dataToEncrypt:(id)arg7 encryptPayload:(_Bool)arg8 wantsResponse:(_Bool)arg9 expirationDate:(id)arg10 command:(id)arg11 wantsDeliveryStatus:(_Bool)arg12 wantsCertifiedDelivery:(_Bool)arg13 deliveryStatusContext:(id)arg14 messageUUID:(id)arg15 priority:(long long)arg16 localDelivery:(_Bool)arg17 disallowRefresh:(_Bool)arg18 willSendBlock:(CDUnknownBlockType)arg19 completionBlock:(CDUnknownBlockType)arg20;	// IMP=0x0010000000370ab3
- (void)sendMessageWithSendParameters:(id)arg1 willSendBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000036d179
- (void)_rapportSendWithSendParameters:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000036ce2a
- (void)_sendRemotelyWithSendParameters:(id)arg1 data:(id)arg2 protobuf:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x0010000000368171
- (void)_sendLocallyWithSendParameters:(id)arg1 uriToLocalDestination:(id)arg2 data:(id)arg3 protobuf:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x0010000000365390
- (id)utunDeliveryController;	// IMP=0x0010000000365377
- (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 rapportDestinations:(id *)arg4 sendParameters:(id)arg5;	// IMP=0x0010000000362509
- (void)sendServerMessage:(id)arg1 command:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000361f75
- (void)_sendMessageWithSendParametersOnMainThread:(id)arg1 filteredDestinations:(id)arg2 data:(id)arg3 compressedData:(id)arg4 protobufToSend:(id)arg5 willSendBlock:(CDUnknownBlockType)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00100000003608d9
- (id)newSendMessageContext;	// IMP=0x00100000003603a1
- (long long)maxRemoteMessagingPayloadSize;	// IMP=0x0010000000360319

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

