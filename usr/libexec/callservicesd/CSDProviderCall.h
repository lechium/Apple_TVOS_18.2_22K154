//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVAudioSession, CSDPauseDigitsQueue, CXAbstractProviderSource, CXCallFailureContext, CXCallSource, CXCallUpdate, LSApplicationRecord, MISSING_TYPE, NSDictionary, NSNotificationCenter, NSString, NSUUID, TUCallCenter, TUCallScreenShareAttributes, TUDynamicCallDisplayContext, TUMediaTokens, TUParticipant, TUUserConfiguration;
@protocol CSDProviderCallDelegate, TUFeatureFlags;

@interface CSDProviderCall
{
    _Bool _outgoing;	// 8 = 0x8
    _Bool _wantsStagingArea;	// 9 = 0x9
    _Bool _video;	// 10 = 0xa
    _Bool _conversation;	// 11 = 0xb
    _Bool _sharingScreen;	// 12 = 0xc
    _Bool _expanseProvider;	// 13 = 0xd
    _Bool _mixesVoiceWithMedia;	// 14 = 0xe
    _Bool _mediaPlaybackOnExternalDevice;	// 15 = 0xf
    _Bool _underlyingUplinkMuted;	// 16 = 0x10
    _Bool _prefersToPlayDuringWombat;	// 17 = 0x11
    _Bool _injectingAudio;	// 18 = 0x12
    _Bool _isUnderlyingLinksConnected;	// 19 = 0x13
    _Bool _held;	// 20 = 0x14
    _Bool _sendingVideo;	// 21 = 0x15
    _Bool _shouldAcceptDateConnectedProviderUpdates;	// 22 = 0x16
    int _ttyType;	// 24 = 0x18
    int _originatingUIType;	// 28 = 0x1c
    TUParticipant *_activeRemoteParticipant;	// 32 = 0x20
    id <TUFeatureFlags> _featureFlags;	// 40 = 0x28
    long long _bluetoothAudioFormat;	// 48 = 0x30
    TUCallScreenShareAttributes *_screenShareAttributes;	// 56 = 0x38
    TUMediaTokens *_tokens;	// 64 = 0x40
    NSDictionary *_silencingUserInfo;	// 72 = 0x48
    TUCallCenter *_callCenter;	// 80 = 0x50
    NSString *_localMemberHandleValue;	// 88 = 0x58
    long long _screenSharingIntention;	// 96 = 0x60
    unsigned long long _screenSharingType;	// 104 = 0x68
    id <CSDProviderCallDelegate> _providerCallDelegate;	// 112 = 0x70
    NSString *_providerIdentifier;	// 120 = 0x78
    CXCallSource *_backingCallSource;	// 128 = 0x80
    CXAbstractProviderSource *_providerSource;	// 136 = 0x88
    long long _endedReason;	// 144 = 0x90
    CXCallFailureContext *_failureContext;	// 152 = 0x98
    CDUnknownBlockType _usesSystemMutingBlock;	// 160 = 0xa0
    CDUnknownBlockType _systemControllerUplinkMutedBlock;	// 168 = 0xa8
    CDUnknownBlockType _systemControllerSetUplinkMutedBlock;	// 176 = 0xb0
    CDUnknownBlockType _dialDelayForRequest;	// 184 = 0xb8
    CXCallUpdate *_mergedCallUpdate;	// 192 = 0xc0
    CSDPauseDigitsQueue *_pauseDigitsQueue;	// 200 = 0xc8
    TUUserConfiguration *_userConfiguration;	// 208 = 0xd0
    NSNotificationCenter *_defaultNotificationCenter;	// 216 = 0xd8
    TUDynamicCallDisplayContext *_dynamicDisplayContext;	// 224 = 0xe0
    CDUnknownBlockType _startCallBlock;	// 232 = 0xe8
}

- (void).cxx_destruct;	// IMP=0x0020000000064436
@property(copy, nonatomic) CDUnknownBlockType startCallBlock; // @synthesize startCallBlock=_startCallBlock;
@property(retain, nonatomic) TUDynamicCallDisplayContext *dynamicDisplayContext; // @synthesize dynamicDisplayContext=_dynamicDisplayContext;
@property(retain, nonatomic) NSNotificationCenter *defaultNotificationCenter; // @synthesize defaultNotificationCenter=_defaultNotificationCenter;
@property(readonly, nonatomic) TUUserConfiguration *userConfiguration; // @synthesize userConfiguration=_userConfiguration;
@property(retain, nonatomic) CSDPauseDigitsQueue *pauseDigitsQueue; // @synthesize pauseDigitsQueue=_pauseDigitsQueue;
@property(retain, nonatomic) CXCallUpdate *mergedCallUpdate; // @synthesize mergedCallUpdate=_mergedCallUpdate;
@property(copy, nonatomic) CDUnknownBlockType dialDelayForRequest; // @synthesize dialDelayForRequest=_dialDelayForRequest;
@property(copy, nonatomic) CDUnknownBlockType systemControllerSetUplinkMutedBlock; // @synthesize systemControllerSetUplinkMutedBlock=_systemControllerSetUplinkMutedBlock;
@property(copy, nonatomic) CDUnknownBlockType systemControllerUplinkMutedBlock; // @synthesize systemControllerUplinkMutedBlock=_systemControllerUplinkMutedBlock;
@property(copy, nonatomic) CDUnknownBlockType usesSystemMutingBlock; // @synthesize usesSystemMutingBlock=_usesSystemMutingBlock;
@property(retain, nonatomic) CXCallFailureContext *failureContext; // @synthesize failureContext=_failureContext;
@property(nonatomic) _Bool shouldAcceptDateConnectedProviderUpdates; // @synthesize shouldAcceptDateConnectedProviderUpdates=_shouldAcceptDateConnectedProviderUpdates;
@property(nonatomic) _Bool sendingVideo; // @synthesize sendingVideo=_sendingVideo;
@property(nonatomic) long long endedReason; // @synthesize endedReason=_endedReason;
@property(nonatomic, getter=isHeld) _Bool held; // @synthesize held=_held;
@property(retain, nonatomic) CXAbstractProviderSource *providerSource; // @synthesize providerSource=_providerSource;
@property(retain, nonatomic) CXCallSource *backingCallSource; // @synthesize backingCallSource=_backingCallSource;
@property(readonly, copy, nonatomic) NSString *providerIdentifier; // @synthesize providerIdentifier=_providerIdentifier;
@property(nonatomic) __weak id <CSDProviderCallDelegate> providerCallDelegate; // @synthesize providerCallDelegate=_providerCallDelegate;
- (void)setIsUnderlyingLinksConnected:(_Bool)arg1;	// IMP=0x0010000000064234
- (_Bool)isUnderlyingLinksConnected;	// IMP=0x0010000000064224
- (void)setScreenSharingType:(unsigned long long)arg1;	// IMP=0x0010000000064213
- (unsigned long long)screenSharingType;	// IMP=0x0010000000064202
- (id)localMemberHandleValue;	// IMP=0x00100000000641f1
@property(nonatomic, getter=isInjectingAudio) _Bool injectingAudio; // @synthesize injectingAudio=_injectingAudio;
@property(retain, nonatomic) TUCallCenter *callCenter; // @synthesize callCenter=_callCenter;
- (_Bool)prefersToPlayDuringWombat;	// IMP=0x00100000000641bd
@property(nonatomic, getter=isUnderlyingUplinkMuted) _Bool underlyingUplinkMuted; // @synthesize underlyingUplinkMuted=_underlyingUplinkMuted;
@property(retain, nonatomic) NSDictionary *silencingUserInfo; // @synthesize silencingUserInfo=_silencingUserInfo;
@property(readonly, nonatomic) _Bool mediaPlaybackOnExternalDevice; // @synthesize mediaPlaybackOnExternalDevice=_mediaPlaybackOnExternalDevice;
@property(readonly, nonatomic) int originatingUIType; // @synthesize originatingUIType=_originatingUIType;
@property(readonly, nonatomic, getter=isExpanseProvider) _Bool expanseProvider; // @synthesize expanseProvider=_expanseProvider;
- (id)tokens;	// IMP=0x0010000000064147
- (id)screenShareAttributes;	// IMP=0x0010000000064136
- (_Bool)isSharingScreen;	// IMP=0x0010000000064126
@property(nonatomic, getter=isConversation) _Bool conversation; // @synthesize conversation=_conversation;
@property(nonatomic) _Bool wantsStagingArea; // @synthesize wantsStagingArea=_wantsStagingArea;
- (_Bool)isOutgoing;	// IMP=0x00100000000640e6
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(copy, nonatomic) TUParticipant *activeRemoteParticipant; // @synthesize activeRemoteParticipant=_activeRemoteParticipant;
- (_Bool)isReRing;	// IMP=0x001000000006406f
- (id)imageURLForCXSandboxExtendedURL:(id)arg1;	// IMP=0x0010000000063b76
- (id)activeRemoteParticipantForCallUpdate:(id)arg1;	// IMP=0x0010000000063a52
- (oneway void)handleAudioSessionActivationStateChangedTo:(id)arg1;	// IMP=0x00100000000639c2
- (void)pauseDigitsQueueChanged:(id)arg1;	// IMP=0x0010000000063906
- (long long)_switchToCXCallFailureReasonFromTUCallDisconnectedReason:(int)arg1;	// IMP=0x00100000000637e5
- (void)_sendSoftPauseDigitsIfNecessary;	// IMP=0x0010000000063674
- (void)_sendDTMFDigits:(id)arg1 type:(long long)arg2;	// IMP=0x0010000000063520
- (id)tuScreenShareAttributesForScreenAttributes:(id)arg1;	// IMP=0x0010000000063287
- (id)cxScreenShareAttributesForCallAttributes:(id)arg1;	// IMP=0x0010000000063037
- (void)dequeueNextPauseDigits;	// IMP=0x0010000000062f7e
- (void)setRemoteVideoPresentationState:(int)arg1;	// IMP=0x0010000000062e39
- (void)setRemoteVideoPresentationSize:(struct CGSize)arg1;	// IMP=0x0010000000062cdb
- (void)playRemoteDTMFToneForKey:(unsigned char)arg1;	// IMP=0x0010000000062bad
- (void)sendHardPauseDigits;	// IMP=0x00100000000629d2
- (void)setDownlinkMuted:(_Bool)arg1;	// IMP=0x0010000000062981
- (void)setUnderlyingUplinkMuted:(_Bool)arg1 bottomUpMute:(_Bool)arg2;	// IMP=0x0010000000062781
@property(nonatomic) int ttyType; // @synthesize ttyType=_ttyType;
- (void)setUplinkMuted:(_Bool)arg1;	// IMP=0x0010000000062553
- (void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2;	// IMP=0x00100000000621e2
- (void)setSharingScreen:(_Bool)arg1;	// IMP=0x0010000000061fe2
- (void)setScreenShareAttributes:(id)arg1;	// IMP=0x0010000000061dfe
- (void)setIsSendingVideo:(_Bool)arg1;	// IMP=0x0010000000061d2a
- (void)setProviderFailureReasonIfNecessary:(long long)arg1;	// IMP=0x0010000000061c41
- (void)disconnectWithReason:(int)arg1;	// IMP=0x00100000000618da
- (void)ungroup;	// IMP=0x0010000000061812
- (void)groupWithOtherCall:(id)arg1;	// IMP=0x00100000000616fd
- (void)_setIsOnHold:(_Bool)arg1;	// IMP=0x00100000000615e1
- (void)unhold;	// IMP=0x001000000006154d
- (void)hold;	// IMP=0x00100000000614b6
- (void)answerWithRequest:(id)arg1;	// IMP=0x001000000006120b
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000006086b
- (id)_dialDelayForRequest:(id)arg1;	// IMP=0x0010000000060863
- (void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x00100000000603ae
- (id)startCallActionWithDialRequest:(id)arg1;	// IMP=0x0010000000060069
- (void)setMediaPlaybackOnExternalDevice:(_Bool)arg1;	// IMP=0x001000000005ffc4
- (void)setMixesVoiceWithMedia:(_Bool)arg1;	// IMP=0x001000000005ff1f
@property(nonatomic) long long bluetoothAudioFormat; // @synthesize bluetoothAudioFormat=_bluetoothAudioFormat;
- (void)askProviderToAllowAudioInjection:(_Bool)arg1;	// IMP=0x001000000005fcc1
- (void)setScreening:(_Bool)arg1;	// IMP=0x001000000005fa26
- (void)setEndpointOnCurrentDevice:(_Bool)arg1;	// IMP=0x001000000005f936
- (void)setDateConnected:(id)arg1;	// IMP=0x001000000005f894
@property(copy, nonatomic) NSUUID *callGroupUUID;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
- (void)setOutgoing:(_Bool)arg1;	// IMP=0x001000000005f497
- (_Bool)supportsScreening;	// IMP=0x001000000005f3c4
- (_Bool)usesSystemMuting;	// IMP=0x001000000005f380
- (_Bool)accessoryButtonEventsEnabled;	// IMP=0x001000000005f33c
- (long long)transmissionMode;	// IMP=0x001000000005f2e7
- (long long)serviceStatus;	// IMP=0x001000000005f292
- (long long)outputAudioPowerSpectrumToken;	// IMP=0x001000000005f1bc
- (long long)inputAudioPowerSpectrumToken;	// IMP=0x001000000005f0e6
- (unsigned long long)initialLinkType;	// IMP=0x001000000005f010
- (_Bool)isDownlinkMuted;	// IMP=0x001000000005efc5
- (_Bool)isUplinkMuted;	// IMP=0x001000000005ef65
- (_Bool)isSendingVideo;	// IMP=0x001000000005ef53
- (_Bool)isDomestic;	// IMP=0x001000000005ed7c
- (_Bool)isInternational;	// IMP=0x001000000005ea25
- (int)hardPauseDigitsState;	// IMP=0x001000000005e96d
- (id)hardPauseDigits;	// IMP=0x001000000005e890
- (_Bool)hasEnded;	// IMP=0x001000000005e85d
- (_Bool)hasConnected;	// IMP=0x001000000005e82a
- (_Bool)hasStartedConnecting;	// IMP=0x001000000005e7f7
- (int)callStatusFromUnderlyingSource;	// IMP=0x001000000005e756
- (id)provider;	// IMP=0x001000000005e6d6
@property(readonly, nonatomic) LSApplicationRecord *applicationRecord;
- (id)conversationID;	// IMP=0x001000000005e623
- (_Bool)isMutuallyExclusiveCall;	// IMP=0x001000000005e59b
- (_Bool)shouldSuppressInCallUI;	// IMP=0x001000000005e557
- (_Bool)prefersExclusiveAccessToCellularNetwork;	// IMP=0x001000000005e513
- (_Bool)mayRequireBreakBeforeMake;	// IMP=0x001000000005e4cf
- (id)remoteParticipantHandles;	// IMP=0x001000000005e3ce
- (id)handoffActivityUserInfo;	// IMP=0x001000000005e2be
- (id)handoffDynamicIdentifier;	// IMP=0x001000000005e244
- (_Bool)supportsEmergencyFallback;	// IMP=0x001000000005e200
- (_Bool)isFailureExpected;	// IMP=0x001000000005e1bc
- (_Bool)isEmergency;	// IMP=0x001000000005e178
- (_Bool)supportsTTYWithVoice;	// IMP=0x001000000005e0e8
- (_Bool)isOneToOneModeEnabled;	// IMP=0x001000000005e058
- (id)providerContext;	// IMP=0x001000000005e008
@property(readonly, nonatomic) _Bool ignoresBluetoothDeviceUID;
@property(readonly, nonatomic) _Bool mixesVoiceWithMedia; // @synthesize mixesVoiceWithMedia=_mixesVoiceWithMedia;
- (long long)soundRegion;	// IMP=0x001000000005df31
- (_Bool)needsManualInCallSounds;	// IMP=0x001000000005ded2
- (id)audioMode;	// IMP=0x001000000005ddfd
- (long long)screenSharingIntention;	// IMP=0x001000000005ddb1
- (id)audioCategory;	// IMP=0x001000000005dcdc
@property(readonly, nonatomic) AVAudioSession *proxyAVAudioSession;
- (long long)audioInterruptionOperationMode;	// IMP=0x001000000005dbbf
- (long long)audioInterruptionProviderType;	// IMP=0x001000000005db72
- (id)activeRemoteParticipants;	// IMP=0x001000000005da76
- (id)localSenderIdentityAccountUUID;	// IMP=0x001000000005d97d
- (id)localSenderIdentityUUID;	// IMP=0x001000000005d92d
- (id)isoCountryCode;	// IMP=0x001000000005d8dd
- (_Bool)isRemoteUplinkMuted;	// IMP=0x001000000005d899
- (id)initiator;	// IMP=0x001000000005d776
- (long long)videoStreamToken;	// IMP=0x001000000005d732
- (_Bool)isThirdPartyVideo;	// IMP=0x001000000005d6ac
- (_Bool)isBlocked;	// IMP=0x001000000005d602
- (_Bool)isUsingBaseband;	// IMP=0x001000000005d517
- (MISSING_TYPE *)handle;	// IMP=0x001000000005d2c3
- (id)callHistoryIdentifier;	// IMP=0x001000000005d1db
- (_Bool)hasBeenRedirected;	// IMP=0x001000000005d197
- (id)callerNameFromNetwork;	// IMP=0x001000000005d0f7
- (long long)providerEndedReason;	// IMP=0x001000000005d0b3
- (long long)providerErrorCode;	// IMP=0x001000000005d06f
- (id)endedReasonUserInfo;	// IMP=0x001000000005d010
- (void)updateForDisconnection;	// IMP=0x001000000005bc2b
- (int)_switchFromFailureReasonToDisconnectedReason:(long long)arg1;	// IMP=0x001000000005bb11
- (void)updateWithCallUpdate:(id)arg1 notifyDelegate:(_Bool)arg2;	// IMP=0x001000000005ac80
- (void)updateWithCallUpdate:(id)arg1;	// IMP=0x001000000005ac69
- (void)systemMuteStatusChanged:(id)arg1;	// IMP=0x001000000005a6f4
- (void)performUplinkMuted:(_Bool)arg1;	// IMP=0x001000000005a648
- (void)dealloc;	// IMP=0x001000000005a5ab
- (id)initWithHandoffContext:(id)arg1 backingCallSource:(id)arg2;	// IMP=0x001000000005a489
- (id)initOutgoingWithJoinConversationRequest:(id)arg1;	// IMP=0x001000000005a177
- (id)initOutgoingWithRequestedStartCallAction:(id)arg1 backingCallSource:(id)arg2;	// IMP=0x001000000005a01b
- (id)initOutgoingWithDialRequest:(id)arg1 configuration:(id)arg2;	// IMP=0x0010000000059ecb
- (id)initOutgoingWithDialRequest:(id)arg1;	// IMP=0x0010000000059da2
- (id)initOutgoingWithUpdate:(id)arg1 callUUID:(id)arg2 backingCallSource:(id)arg3 isExpanseProvider:(_Bool)arg4;	// IMP=0x0010000000059c9d
- (id)initOutgoingWithUniqueProxyIdentifier:(id)arg1 backingCallSourceIdentifier:(id)arg2 callUpdate:(id)arg3 isVideo:(_Bool)arg4 endpointOnCurrentDevice:(_Bool)arg5 originatingUIType:(int)arg6 configuration:(id)arg7;	// IMP=0x001000000005999d
- (id)initOutgoingWithUniqueProxyIdentifier:(id)arg1 backingCallSourceIdentifier:(id)arg2 callUpdate:(id)arg3 isVideo:(_Bool)arg4 endpointOnCurrentDevice:(_Bool)arg5 originatingUIType:(int)arg6;	// IMP=0x0010000000059883
- (id)initIncomingWithBackingCallSource:(id)arg1 UUID:(id)arg2 update:(id)arg3;	// IMP=0x0010000000059693
- (id)initWithUniqueProxyIdentifier:(id)arg1 configuration:(id)arg2;	// IMP=0x00100000000591bb
- (id)initWithUniqueProxyIdentifier:(id)arg1 endpointOnCurrentDevice:(_Bool)arg2;	// IMP=0x0010000000059110

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

