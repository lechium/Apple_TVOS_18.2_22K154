//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDConversationProviderManager, CSDDeviceLockStateObserver, CSDPendingMembershipTracker, CSDReportingController, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, MISSING_TYPE, NSDictionary, NSMapTable, NSMutableDictionary, NSMutableSet, NSString, TUCallProviderManager;
@protocol CSDConversationInvitationResolving, CSDIDSService, CSDParticipantUpdateSanitizer, CSDVoucherManager, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDPendingMembershipTracker *_pendingMembershipTracker;	// 8 = 0x8
    NSMutableDictionary *_mutableConversationsByUUID;	// 16 = 0x10
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;	// 24 = 0x18
    NSMutableDictionary *_mutablePseudonymsByCallUUID;	// 32 = 0x20
    NSMutableDictionary *_mutablePseudonymsByRequestIdentifiers;	// 40 = 0x28
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;	// 48 = 0x30
    NSMutableDictionary *_mutableConversationsRequestingUpgradeWithPreferences;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;	// 64 = 0x40
    NSMapTable *_delegateToQueue;	// 72 = 0x48
    NSMutableSet *_incomingPendingMessageGUIDs;	// 80 = 0x50
    CSDConversationPersistenceController *_persistenceController;	// 88 = 0x58
    CSDDeviceLockStateObserver *_lockStateObserver;	// 96 = 0x60
    TUCallProviderManager *_callProviderManager;	// 104 = 0x68
    CSDConversationLinkManager *_linkManager;	// 112 = 0x70
    CSDReportingController *_reportingController;	// 120 = 0x78
    id <TUFeatureFlags> _featureFlags;	// 128 = 0x80
    CSDConversationNoticeManager *_conversationNoticeManger;	// 136 = 0x88
    CSDSharedConversationServerBag *_serverBag;	// 144 = 0x90
    id <CSDConversationInvitationResolving> _invitationResolver;	// 152 = 0x98
    NSMutableDictionary *_screenCaptureQueue;	// 160 = 0xa0
    id <CSDVoucherManager> _voucherManager;	// 168 = 0xa8
    id <CSDParticipantUpdateSanitizer> _participantUpdateSanitizer;	// 176 = 0xb0
    NSObject<OS_dispatch_queue> *_queue;	// 184 = 0xb8
    id <CSDIDSService> _service;	// 192 = 0xc0
    CDUnknownBlockType _groupSessionProviderCreationBlock;	// 200 = 0xc8
    FTDeviceSupport *_deviceSupport;	// 208 = 0xd0
    CDUnknownBlockType _conversationCreationBlock;	// 216 = 0xd8
    CDUnknownBlockType _sendDataBlock;	// 224 = 0xe0
    CDUnknownBlockType _getPersonalNicknameBlock;	// 232 = 0xe8
    CSDConversationProviderManager *_conversationProviderManager;	// 240 = 0xf0
    CDUnknownBlockType _lockdownModeEnabled;	// 248 = 0xf8
    CDUnknownBlockType _activeLocalHandles;	// 256 = 0x100
    CDUnknownBlockType _activeLocalHandlesForProvider;	// 264 = 0x108
    CDUnknownBlockType _senderIdentitiesBlock;	// 272 = 0x110
    CDUnknownBlockType _localCallerID;	// 280 = 0x118
    CDUnknownBlockType _notifyPendingMembershipTrackerOfDelegatedMember;	// 288 = 0x120
    CDUnknownBlockType _localCallerIDForProvider;	// 296 = 0x128
    CSDSecureImageTranscoder *_imageTranscoder;	// 304 = 0x130
    CDUnknownBlockType _isConversationRelayPreferred;	// 312 = 0x138
    CDUnknownBlockType _isHandleEligibleForScreenSharingRequestsBlock;	// 320 = 0x140
    NSMutableDictionary *_outIdentifierToConversationInfo;	// 328 = 0x148
}

- (void).cxx_destruct;	// IMP=0x0020000000144a4d
@property(retain, nonatomic) NSMutableDictionary *outIdentifierToConversationInfo; // @synthesize outIdentifierToConversationInfo=_outIdentifierToConversationInfo;
@property(copy, nonatomic) CDUnknownBlockType isHandleEligibleForScreenSharingRequestsBlock; // @synthesize isHandleEligibleForScreenSharingRequestsBlock=_isHandleEligibleForScreenSharingRequestsBlock;
@property(copy, nonatomic) CDUnknownBlockType isConversationRelayPreferred; // @synthesize isConversationRelayPreferred=_isConversationRelayPreferred;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(copy, nonatomic) CDUnknownBlockType localCallerIDForProvider; // @synthesize localCallerIDForProvider=_localCallerIDForProvider;
@property(copy, nonatomic) CDUnknownBlockType notifyPendingMembershipTrackerOfDelegatedMember; // @synthesize notifyPendingMembershipTrackerOfDelegatedMember=_notifyPendingMembershipTrackerOfDelegatedMember;
@property(copy, nonatomic) CDUnknownBlockType localCallerID; // @synthesize localCallerID=_localCallerID;
@property(copy, nonatomic) CDUnknownBlockType senderIdentitiesBlock; // @synthesize senderIdentitiesBlock=_senderIdentitiesBlock;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandlesForProvider; // @synthesize activeLocalHandlesForProvider=_activeLocalHandlesForProvider;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandles; // @synthesize activeLocalHandles=_activeLocalHandles;
@property(copy, nonatomic) CDUnknownBlockType lockdownModeEnabled; // @synthesize lockdownModeEnabled=_lockdownModeEnabled;
@property(retain, nonatomic) CSDConversationProviderManager *conversationProviderManager; // @synthesize conversationProviderManager=_conversationProviderManager;
@property(copy, nonatomic) CDUnknownBlockType getPersonalNicknameBlock; // @synthesize getPersonalNicknameBlock=_getPersonalNicknameBlock;
@property(copy, nonatomic) CDUnknownBlockType sendDataBlock; // @synthesize sendDataBlock=_sendDataBlock;
@property(copy, nonatomic) CDUnknownBlockType conversationCreationBlock; // @synthesize conversationCreationBlock=_conversationCreationBlock;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(copy, nonatomic) CDUnknownBlockType groupSessionProviderCreationBlock; // @synthesize groupSessionProviderCreationBlock=_groupSessionProviderCreationBlock;
@property(retain, nonatomic) id <CSDIDSService> service; // @synthesize service=_service;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <CSDParticipantUpdateSanitizer> participantUpdateSanitizer; // @synthesize participantUpdateSanitizer=_participantUpdateSanitizer;
@property(retain, nonatomic) id <CSDVoucherManager> voucherManager; // @synthesize voucherManager=_voucherManager;
@property(readonly, nonatomic) NSMutableDictionary *screenCaptureQueue; // @synthesize screenCaptureQueue=_screenCaptureQueue;
@property(retain, nonatomic) id <CSDConversationInvitationResolving> invitationResolver; // @synthesize invitationResolver=_invitationResolver;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) NSMutableSet *incomingPendingMessageGUIDs; // @synthesize incomingPendingMessageGUIDs=_incomingPendingMessageGUIDs;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
- (void)setPendingConversationCleanupTimer:(id)arg1;	// IMP=0x00100000001446e5
- (id)pendingConversationCleanupTimer;	// IMP=0x00100000001446db
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsRequestingUpgradeWithPreferences; // @synthesize mutableConversationsRequestingUpgradeWithPreferences=_mutableConversationsRequestingUpgradeWithPreferences;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;	// IMP=0x0010000000143eed
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;	// IMP=0x0010000000143d24
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;	// IMP=0x0010000000143b92
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x0010000000143932
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;	// IMP=0x00100000001437ad
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x0010000000143476
- (void)handleRemovedLinkDescriptors:(id)arg1;	// IMP=0x0010000000143298
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;	// IMP=0x001000000014312c
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x0010000000142fb1
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x0010000000142e45
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;	// IMP=0x0010000000142cd9
- (id)pickInitiatorFromActiveParticipants:(id)arg1 forUpdate:(id)arg2;	// IMP=0x0010000000142945
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;	// IMP=0x001000000014208c
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000141cf7
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3 withGroupSessionUpdate:(id)arg4;	// IMP=0x0010000000141989
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4 isFromPendingMessage:(_Bool)arg5;	// IMP=0x001000000013d8fe
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000013d0b8
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000013cbd2
- (id)pushTokenForSelf;	// IMP=0x001000000013cb53
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2 senderCorrelationIdentifier:(id)arg3 isFromPendingMessage:(_Bool)arg4;	// IMP=0x001000000013c470
- (void)processGroupSessionParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x001000000013ba52
- (void)sanitizeAndProcessParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x001000000013b809
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;	// IMP=0x001000000013b78d
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3 context:(id)arg4;	// IMP=0x001000000013b6f8
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;	// IMP=0x001000000013a08a
- (void)enqueueMessageRetryAttemptForMessageID:(id)arg1 message:(id)arg2 attemptCount:(unsigned long long)arg3 messageProcessingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000139ae9
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0010000000139acd
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x00100000001396c1
- (_Bool)shouldCreatePendingChatForMessageType:(long long)arg1 fromHandle:(id)arg2;	// IMP=0x00100000001396a0
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x001000000013911c
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;	// IMP=0x0010000000138fdf
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x0010000000138a0c
- (void)conversation:(id)arg1 remoteMembersChanged:(id)arg2;	// IMP=0x00100000001385ab
- (void)conversation:(id)arg1 screenShareAttributesDidChange:(id)arg2;	// IMP=0x0010000000138576
- (void)conversation:(id)arg1 screenShareAttributesUpdated:(id)arg2;	// IMP=0x00100000001384bd
- (void)conversation:(id)arg1 screenShareAttributesSelected:(id)arg2;	// IMP=0x00100000001383ff
- (void)conversation:(id)arg1 requestedEndpointWithIdentifier:(id)arg2 activitySession:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001383ca
- (void)conversationDidTriggerJoin:(id)arg1;	// IMP=0x00100000001381be
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x0010000000137df1
- (void)conversation:(id)arg1 sendResourceAtURL:(id)arg2 toParticipants:(id)arg3 metadata:(id)arg4 activitySessionUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000137dbc
- (MISSING_TYPE *)conversation:activitySessionRemoved:userOriginated: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000137d87
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x0010000000137924
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x001000000013748d
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;	// IMP=0x0010000000136f42
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x0010000000136f3c
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x0010000000136f36
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;	// IMP=0x0010000000136aac
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;	// IMP=0x0010000000136901
- (void)conversation:(id)arg1 requestBlobRecoveryForParticipantDestination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000136715
- (void)conversation:(id)arg1 participantDidStopReacting:(id)arg2;	// IMP=0x001000000013624b
- (void)conversation:(id)arg1 participant:(id)arg2 didReact:(id)arg3;	// IMP=0x0010000000135d50
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;	// IMP=0x0010000000135886
- (void)conversationDidStopScreenCapture:(id)arg1;	// IMP=0x0010000000135812
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;	// IMP=0x001000000013535a
- (void)conversation:(id)arg1 updatedActiveParticipant:(id)arg2;	// IMP=0x0010000000134eb3
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2 withLeaveReason:(unsigned long long)arg3;	// IMP=0x001000000013474d
- (void)conversation:(id)arg1 didChangeLocalParticipant:(id)arg2 broadcastActivitySession:(_Bool)arg3;	// IMP=0x0010000000134135
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;	// IMP=0x0010000000132ca0
- (void)conversationDidLeave:(id)arg1;	// IMP=0x0010000000132b06
- (void)conversationInvalidated:(id)arg1;	// IMP=0x001000000013278f
- (void)conversationConnectionDidStart:(id)arg1;	// IMP=0x00100000001322e3
- (void)conversationChanged:(id)arg1;	// IMP=0x0010000000131dab
- (void)cleanupExpiredPendingConversations;	// IMP=0x0010000000131965
- (void)setupPendingConversationCleanupTimer;	// IMP=0x001000000013167e
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;	// IMP=0x00100000001312f8
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001312e1
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2 presentationMode:(unsigned long long)arg3;	// IMP=0x0010000000130ced
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000130cd1
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001309d3
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x001000000013074f
- (void)removeConversationWithUUID:(id)arg1;	// IMP=0x00100000001304d3
- (void)removeNonIndefiniteLinks;	// IMP=0x001000000012fe81
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000012fbd0
- (void)removeConversationNoticeWithUUID:(id)arg1;	// IMP=0x001000000012fac7
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;	// IMP=0x001000000012f994
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000012f86d
- (oneway void)addScreenSharingType:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000012f241
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000012ec06
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000012e90c
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000012e5ff
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012e443
- (void)recoverLinksForPseudonyms:(id)arg1;	// IMP=0x001000000012e29d
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;	// IMP=0x001000000012e123
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000012dbce
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000012d922
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000012d589
- (void)generateAllInactiveLinks;	// IMP=0x001000000012d409
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000012d279
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000012cc4c
- (void)renewLinkIfNeeded:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000012c630
- (void)invalidateLink:(id)arg1 deleteReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000012c06c
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000012ba71
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000012aede
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000012acc9
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;	// IMP=0x001000000012a9f7
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000129fb3
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000129bff
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000129bef
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x00100000001297b7
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;	// IMP=0x001000000012952d
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;	// IMP=0x0010000000128fdf
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;	// IMP=0x0010000000128736
- (_Bool)conversationContainsScreenShareRequest:(id)arg1 localRequest:(_Bool)arg2 requestHandle:(id)arg3;	// IMP=0x001000000012853e
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000128246
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000127b6d
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001278bc
- (void)handleConversation:(id)arg1 updateGuestMode:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012711a
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001270e5
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126f76
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126f41
- (void)removeScreenShareRequestFromParticipant:(id)arg1 conversation:(id)arg2 screenShareContext:(id)arg3;	// IMP=0x0010000000126c1f
- (void)handleConversation:(id)arg1 screenShareResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126933
- (void)handleConversation:(id)arg1 screenShareRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126559
- (void)handleConversation:(id)arg1 removeHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126524
- (void)handleConversation:(id)arg1 addHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001264ef
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001264ba
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126485
- (void)handleConversation:(id)arg1 registerMessagesGroupUUIDMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x001000000012637c
- (void)handleConversation:(id)arg1 participantUpdateMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x0010000000124b63
- (void)resetActivitySessionSceneAssociationsForBundleID:(id)arg1;	// IMP=0x0010000000124b5d
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;	// IMP=0x0010000000124b57
- (void)launchApplicationForActivitySessionUUID:(id)arg1 authorizedExternally:(_Bool)arg2 forceBackground:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000124b51
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000012481c
- (void)setAutoSharePlayEnabled:(_Bool)arg1;	// IMP=0x0010000000124816
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;	// IMP=0x0010000000124810
- (void)setUsingAirplay:(_Bool)arg1 onActivitySession:(id)arg2 onConversationWithUUID:(id)arg3;	// IMP=0x001000000012463a
- (void)cancelPreviouslySentScreenShareRequests:(id)arg1;	// IMP=0x00100000001243e5
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000124271
- (void)endActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001240fd
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000123f89
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;	// IMP=0x001000000012391a
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001232cd
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;	// IMP=0x0010000000122fb5
- (void)displaySharePlayUnableToStartAlert;	// IMP=0x0010000000122ec5
- (_Bool)isScreenSharingInitiationAvailable;	// IMP=0x0010000000122ebd
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;	// IMP=0x00100000001224c8
- (void)maybeAddComplementaryAssociationVoucherFor:(id)arg1 toLocalMemberOf:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000121ad9
- (void)setSharePlayHandedOff:(_Bool)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000012184f
- (void)prepareConversationWithUUID:(id)arg1 withHandoffContext:(id)arg2;	// IMP=0x0010000000121144
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;	// IMP=0x00100000001207ec
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;	// IMP=0x001000000012075a
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;	// IMP=0x00100000001204a7
- (void)setScreenShareAttributes:(id)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000120348
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000012020f
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001200bd
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011ff86
- (int)presentationStateForConversationWithUUID:(id)arg1;	// IMP=0x001000000011fdf6
- (void)setSplitSessionUserProfileState:(long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011fcbd
- (_Bool)isConversationWithUUIDScreening:(id)arg1;	// IMP=0x001000000011fb30
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;	// IMP=0x001000000011f9a3
- (_Bool)isConversationWithUUIDRedirectingAudio:(id)arg1;	// IMP=0x001000000011f943
- (void)setAudioInjectionAllowed:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011f80b
- (void)setScreening:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011f68d
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011f555
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011f41d
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011f2e5
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000011ea1b
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011e99f
- (void)cancelOrDenyScreenShareRequest:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000011e640
- (void)requestParticipantToShareScreen:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000011e167
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x001000000011dcc0
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x001000000011d819
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011d6e1
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;	// IMP=0x001000000011d3e9
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011d2b1
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000011d179
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x001000000011d070
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x001000000011cf3b
- (void)leaveAllConversations;	// IMP=0x001000000011cd62
- (void)leaveConversationWithUUID:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000011cbe9
- (void)leaveConversationWithUUID:(id)arg1;	// IMP=0x001000000011cb78
- (void)_leaveConversation:(id)arg1;	// IMP=0x001000000011cad7
- (void)_leaveConversation:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000011c992
- (void)startAudioForConversationWithUUID:(id)arg1;	// IMP=0x001000000011c71a
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;	// IMP=0x001000000011c04d
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000011b9ec
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x001000000011b2ea
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;	// IMP=0x001000000011a474
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;	// IMP=0x0010000000119c35
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;	// IMP=0x00100000001190a4
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 avMode:(unsigned long long)arg9 presentationMode:(unsigned long long)arg10 conversationProvider:(id)arg11 screenSharingRequest:(id)arg12;	// IMP=0x0010000000117edf
- (void)removeAllConversations;	// IMP=0x0010000000117ea2
- (void)retreiveActiveConversations;	// IMP=0x00100000001176da
- (void)beginListeningOnService:(id)arg1;	// IMP=0x001000000011747f
- (void)removeDelegate:(id)arg1;	// IMP=0x0010000000117375
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000117242
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
- (id)deletedConversationLinksWithError:(id *)arg1;	// IMP=0x00100000001171aa
- (id)activatedConversationLinksWithError:(id *)arg1;	// IMP=0x001000000011712b
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;	// IMP=0x0010000000116ba8
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;	// IMP=0x0010000000116493
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;	// IMP=0x0010000000115b97
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000001156ba
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000115525
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;	// IMP=0x00100000001150ba
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;	// IMP=0x0010000000114dba
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000114852
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;	// IMP=0x001000000011473d
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000001143a9
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x0010000000114090
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;	// IMP=0x0010000000113a8f
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;	// IMP=0x001000000011384c
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;	// IMP=0x00100000001133bf
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;	// IMP=0x0000000000113021
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;	// IMP=0x0010000000112cad
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;	// IMP=0x0010000000112454
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;	// IMP=0x001000000011243f
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x0010000000111de4
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x0010000000111682
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;	// IMP=0x001000000011166d
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x00100000001114b4
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;	// IMP=0x0010000000111346
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3;	// IMP=0x0010000000111331
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;	// IMP=0x001000000011127b
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;	// IMP=0x001000000011125a
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(CDUnknownBlockType)arg7;	// IMP=0x0010000000110be2
- (void)handleReceivedUpdateJoinedMetadataMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000110290
- (void)sendDataForScreenShareMessage:(id)arg1 toParticipant:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000010ffdc
- (void)denyScreenShareRequestFrom:(id)arg1 screenShareRequest:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000010fe4e
- (void)requestParticipant:(id)arg1 toCancelScreenShareRequest:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000010fcc0
- (void)requestParticipant:(id)arg1 toScreenShareWithRequest:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000010fb44
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;	// IMP=0x001000000010f6cd
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;	// IMP=0x001000000010eae4
- (void)handleDelegatedPendingMemberIfNecessary:(id)arg1 conversation:(id)arg2 groupUUID:(id)arg3 fromHandle:(id)arg4 transactionUUID:(id)arg5;	// IMP=0x001000000010e7af
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000010df14
- (void)removeLink:(id)arg1 reason:(long long)arg2 withConversation:(id)arg3;	// IMP=0x001000000010dc62
- (void)removeLink:(id)arg1 reason:(long long)arg2;	// IMP=0x001000000010dc4d
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000010d5c4
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000010c605
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010bec4
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4 dateInitiated:(id)arg5;	// IMP=0x001000000010b393
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000010ad05
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000010a700
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000010a55b
- (id)temporaryFilePath;	// IMP=0x001000000010a4df
- (_Bool)_linksEnabled;	// IMP=0x001000000010a4d2
- (void)handleConversationHandoffRouteIdentifierChangedNotification:(id)arg1;	// IMP=0x0010000000109afc
- (void)updateConversationHandoffEligibility:(id)arg1;	// IMP=0x0010000000109062
- (void)handleConversationHandoffRecommendationChangedNotification:(id)arg1;	// IMP=0x0010000000108f82
- (void)handleConversation:(id)arg1 receivedBlobRecoveryResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000108c07
- (void)handleConversation:(id)arg1 receivedBlobRecoveryRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010886a
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;	// IMP=0x001000000010843b
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;	// IMP=0x001000000010800c
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000107925
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;	// IMP=0x00100000001077ac
- (void)notifyDelegatesOfUpdatePendingConversations;	// IMP=0x00100000001074ed
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;	// IMP=0x00100000001071ee
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;	// IMP=0x0010000000106f66
- (void)notifyDelegatesOfAVModeChanged:(unsigned long long)arg1 toAVMode:(unsigned long long)arg2 forConversation:(id)arg3;	// IMP=0x0010000000106aee
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000010662e
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;	// IMP=0x00100000001060f7
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;	// IMP=0x0010000000105c37
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 avMode:(unsigned long long)arg13 presentationMode:(unsigned long long)arg14 provider:(id)arg15 screenSharingRequest:(id)arg16;	// IMP=0x0010000000105807
- (id)conversationLinkForGroupUUID:(id)arg1;	// IMP=0x0010000000105607
- (id)conversationLinkForPseudonym:(id)arg1;	// IMP=0x0010000000105486
- (id)findConversationLinkMatchingPseudonym:(id)arg1;	// IMP=0x0010000000105286
- (id)pendingConversationWithPseudonym:(id)arg1;	// IMP=0x0010000000105028
- (id)activeApprovedConversationWithLink:(id)arg1;	// IMP=0x0010000000104c8a
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x001000000010493a
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;	// IMP=0x001000000010461c
- (id)conversationWithGroupUUID:(id)arg1;	// IMP=0x00100000001043fb
- (id)conversationWithGroupUUID:(id)arg1 andProvider:(id)arg2;	// IMP=0x00100000001041da
- (id)activeConversation;	// IMP=0x0010000000104032
- (void)removeAllPendingConversations;	// IMP=0x0010000000103f80
- (id)_removePendingConversationsWithTemporaryGroupUUIDIfNecessary:(id)arg1;	// IMP=0x0010000000103cf3
- (id)_removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x0010000000103bab
- (id)removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x0010000000103a2a
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;	// IMP=0x0010000000103686
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 avMode:(unsigned long long)arg16 presentationMode:(unsigned long long)arg17 provider:(id)arg18 screenSharingRequest:(id)arg19 isInitiator:(_Bool)arg20 isOldMessage:(_Bool)arg21;	// IMP=0x0010000000102151
- (id)localMemberForProvider:(id)arg1 fromHandle:(id)arg2 members:(id)arg3 lightweightMembers:(id)arg4 activeLocalHandles:(id)arg5;	// IMP=0x0010000000101c18
- (id)callerIDForLocalMember:(id)arg1;	// IMP=0x0010000000101c04
- (id)callerIDForLocalMember:(id)arg1 forProvider:(id)arg2;	// IMP=0x0010000000101ae1
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1 callerID:(id)arg2;	// IMP=0x0010000000101784
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;	// IMP=0x0010000000101580
- (_Bool)isHandleStringLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x001000000010127d
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;	// IMP=0x0010000000101269
- (_Bool)isHandleLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000001011ec
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2 provider:(id)arg3;	// IMP=0x0010000000101164
- (_Bool)isValidLocalHandle:(id)arg1;	// IMP=0x00100000001010cd
- (_Bool)isValidLocalHandle:(id)arg1 forProvider:(id)arg2;	// IMP=0x0010000000101036
- (_Bool)shouldIgnoreMessageForConversation:(id)arg1;	// IMP=0x0010000000100d60
- (_Bool)_shouldSkipManualApprovalForHandle:(id)arg1 conversation:(id)arg2 responseKeyData:(id)arg3;	// IMP=0x00100000001007a1
- (id)_inactiveRemoteMemberForHandle:(id)arg1 conversation:(id)arg2;	// IMP=0x00100000001005ce
- (_Bool)_isActiveRemoteMemberForHandle:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000100275
- (id)_kickedOrRejectedMemberForHandle:(id)arg1 conversation:(id)arg2;	// IMP=0x00100000000ffdf3
- (_Bool)_shouldRingForIncomingCallWithHandle:(id)arg1 conversation:(id)arg2 isFromPendingMessage:(_Bool)arg3 isOldMessage:(_Bool)arg4 isLetMeInApproved:(_Bool)arg5;	// IMP=0x00100000000ffa3d
- (_Bool)_shouldNotifyDelegatesOfMessage:(id)arg1 localHandleAdded:(_Bool)arg2 isFromStorage:(_Bool)arg3;	// IMP=0x00100000000ff9c0
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 invitationResolver:(id)arg6 pendingMembershipTracker:(id)arg7 featureFlags:(id)arg8 applicationPolicyManager:(id)arg9;	// IMP=0x00100000000fd3b9
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 invitationResolver:(id)arg5 pendingMembershipTracker:(id)arg6 featureFlags:(id)arg7;	// IMP=0x00100000000fd380
- (id)init;	// IMP=0x00100000000fd355
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2 invitationResolver:(id)arg3;	// IMP=0x00100000000fd228

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

