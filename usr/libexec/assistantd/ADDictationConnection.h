//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADDictationSessionTracker, AFDictationOptions, CoreEmbeddedSpeechRecognizer, NSMutableArray, NSString, NSXPCConnection, NSXPCListener;
@protocol AFDictationServiceDelegate, OS_dispatch_queue;

@interface ADDictationConnection : NSObject
{
    CoreEmbeddedSpeechRecognizer *_localSpeechRecognizer;	// 8 = 0x8
    _Bool _usingLocalSpeechRecognizer;	// 16 = 0x10
    id <AFDictationServiceDelegate> _serviceDelegate;	// 24 = 0x18
    AFDictationOptions *_dictationOptions;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    _Bool _waitingForSpeechRecognition;	// 48 = 0x30
    _Bool _waitingForStructuredResultsOrVoiceSearch;	// 49 = 0x31
    _Bool _waitingForAudioFile;	// 50 = 0x32
    ADDictationSessionTracker *_sessionTracker;	// 56 = 0x38
    NSXPCListener *_pendingSpeechRequestListener;	// 64 = 0x40
    NSXPCConnection *_pendingSpeechRequestConnection;	// 72 = 0x48
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 80 = 0x50
    _Bool _disconnected;	// 88 = 0x58
    CDUnknownBlockType _requestCompletion;	// 96 = 0x60
    _Bool _isDetectingUtterances;	// 104 = 0x68
    _Bool _shouldFinalizeRequestOnNextFinalResult;	// 105 = 0x69
    _Bool _didFinalizeUtteranceDetectionRequest;	// 106 = 0x6a
    NSMutableArray *_audioSessionAssertions;	// 112 = 0x70
    _Bool adSpeechSessionEnded;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x002000000034008e
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x001000000033ff52
- (oneway void)continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x001000000033ff02
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000033fe05
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x001000000033fd78
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x001000000033fceb
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x001000000033fc17
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x001000000033fbc7
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x001000000033fb3a
- (id)_localSpeechRecognizerSupportingBackground:(_Bool)arg1;	// IMP=0x001000000033f97d
- (id)_updateDictationOptionsForOnDeviceDictation:(id)arg1 language:(id)arg2;	// IMP=0x001000000033f1ec
- (oneway void)updateVoiceCommandContextWithPrefixText:(id)arg1 postfixText:(id)arg2 selectedText:(id)arg3 disambiguationActive:(id)arg4 cursorInVisibleText:(id)arg5 favorCommandSuppression:(id)arg6 abortCommandSuppression:(id)arg7 undoEvent:(id)arg8;	// IMP=0x001000000033f0a9
- (oneway void)reportIssueForError:(id)arg1 eventType:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x001000000033ee7b
- (oneway void)reportIssueForError:(id)arg1 eventType:(long long)arg2 context:(id)arg3;	// IMP=0x001000000033ec84
- (oneway void)resumeRecognitionWithPrefixText:(id)arg1 postfixText:(id)arg2 selectedText:(id)arg3;	// IMP=0x001000000033eb15
- (oneway void)pauseRecognition;	// IMP=0x001000000033e9f9
- (oneway void)suppressLowStorageNotificationForLanguage:(id)arg1 suppress:(_Bool)arg2;	// IMP=0x001000000033e90f
- (oneway void)requestOfflineDictationSupportForLanguage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000033e7f4
- (oneway void)requestOfflineAssistantSupportForLanguage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000033e6d9
- (oneway void)getInstalledOfflineLanguagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000033e618
- (oneway void)_sendEngagementFeedback:(long long)arg1 voiceQueryIdentifier:(id)arg2;	// IMP=0x001000000033e5a0
- (oneway void)_startDictationWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 language:(id)arg3 options:(id)arg4;	// IMP=0x001000000033e370
- (oneway void)addRecordedSpeechSampleData:(id)arg1;	// IMP=0x001000000033e2e0
- (oneway void)startRecordedAudioDictationWithOptions:(id)arg1 language:(id)arg2 narrowband:(_Bool)arg3 forceSampling:(_Bool)arg4;	// IMP=0x001000000033db38
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x001000000033daf4
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x001000000033da87
- (oneway void)endSession;	// IMP=0x001000000033d998
- (oneway void)preheatWithRecordDeviceIdentifier:(id)arg1;	// IMP=0x001000000033d8b6
- (oneway void)preheatTestWithLanguage:(id)arg1 options:(id)arg2;	// IMP=0x001000000033d742
- (oneway void)preheat;	// IMP=0x001000000033d6cd
- (oneway void)preheatForLanguageCode:(id)arg1;	// IMP=0x001000000033d549
- (oneway void)sendUserSelectedAlternativeDictationLanguageCode:(id)arg1;	// IMP=0x001000000033d44d
- (oneway void)sendSpeechCorrectionInfo:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x001000000033d3c1
- (oneway void)sendSpeechCorrectionInfo:(id)arg1 forCorrectionContext:(id)arg2;	// IMP=0x001000000033d32b
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x001000000033d201
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x001000000033cf8a
- (oneway void)cancelSpeech;	// IMP=0x001000000033ce55
- (oneway void)startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3;	// IMP=0x001000000033ca08
- (oneway void)startRecordingForPendingDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000033c6b9
- (void)_invokeRequestCompletion;	// IMP=0x001000000033c5f2
- (oneway void)startRequestActivityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000033c565
- (void)_startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 xpcconnection:(id)arg4;	// IMP=0x001000000033c47b
- (id)_dictationWillStartWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 xpcconnection:(id)arg4;	// IMP=0x001000000033bc3a
- (void)adSpeechDidPauseRecognition;	// IMP=0x001000000033bbef
- (void)adSpeechDidBeginLocalRecognitionWithModelInfo:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x001000000033bb62
- (void)adSpeechMultilingualSpeechRecognized:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x001000000033bad5
- (void)adSpeechLanguageDetectorFailedWithError:(id)arg1;	// IMP=0x001000000033ba48
- (void)adSpeechRecordingDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x001000000033b985
- (_Bool)adWaitingForAudioFile;	// IMP=0x001000000033b8f7
- (void)adAudioFileFinishedWriting:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x001000000033b7f4
- (void)adPronunciationRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000033b70f
- (void)adSpeechLocalRecognitionDidSucceedWithSessionUUID:(id)arg1;	// IMP=0x001000000033b604
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x001000000033b4ae
- (void)adSpeechRecognizedStructuredResult:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000033b1c3
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 rawPhrases:(id)arg2 utterances:(id)arg3 rawUtterances:(id)arg4 nluResult:(id)arg5 sessionUUID:(id)arg6 refId:(id)arg7;	// IMP=0x001000000033b0bc
- (void)adSpeechRecordingDidRecognizeVoiceCommandCandidatePackage:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000033b0a6
- (void)adSpeechRecordingDidRecognizeFinalResultCandidatePackage:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x001000000033b090
- (void)adSpeechRecordingDidRecognizePartialPackage:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000033b073
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000033b056
- (void)adSpeechDidFindVoiceSearchFinalResult:(id)arg1;	// IMP=0x001000000033afc9
- (void)adSpeechDidFindVoiceSearchPartialResult:(id)arg1;	// IMP=0x001000000033af3c
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x001000000033aeaf
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000033adca
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x001000000033ac72
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x001000000033ab50
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x001000000033aa95
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x001000000033aa8f
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x001000000033a95e
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x001000000033a948
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x001000000033a6ca
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x001000000033a670
- (void)_speechRecordingDidFinish;	// IMP=0x001000000033a52c
- (void)_updateDictationOptions:(id)arg1;	// IMP=0x001000000033a4ff
- (void)connectionDisconnected;	// IMP=0x001000000033a486
- (void)dealloc;	// IMP=0x001000000033a3b9
- (id)initWithServiceDelegate:(id)arg1;	// IMP=0x001000000033a241

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

