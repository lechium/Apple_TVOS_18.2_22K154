//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSString;

@interface CLClientManagerAdapter
{
}

+ (id)getSilo;	// IMP=0x002000000051b584
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x001000000051b56b
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x001000000051b50e
- (void)getClientManagerInternalStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0020000000523794
- (void)calculateCheeseCoverage:(id)arg1 interestInterval:(id)arg2 withOptions:(id)arg3 lookbackWindowStartDate:(id)arg4 withReply:(CDUnknownBlockType)arg5;	// IMP=0x0010000000523722
- (void)handleLiveActivityUpdate:(id)arg1;	// IMP=0x001000000052371c
- (void)triggerAnalyticsCollect;	// IMP=0x00100000005236c4
- (void)triggerClearAppClipAuthorizationIfNecessary;	// IMP=0x0010000000523371
- (double)syncgetAndSetOrChangeAppClipAuthorizationTime:(double)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000522e31
- (id)syncgetTemporaryAuthorizationStatusForClient:(CDUnknownBlockType)arg1;	// IMP=0x0010000000522799
- (void)setTemporaryAuthorizationStatusInfoForClient:(CDUnknownBlockType)arg1 data:(id)arg2;	// IMP=0x00100000005214f7
- (void)handleProvisionalIntermediationForService:(unsigned long long)arg1 forClientKey:(id)arg2 at:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000521366
- (void)checkWeakPersistentClientWithIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000005212f1
- (id)syncgetArchivedAuthorizationDecisions;	// IMP=0x00100000005212d7
- (id)syncgetApplyArchivedAuthorizationDecisionsAndDie:(id)arg1 unlessTokenMatches:(id)arg2;	// IMP=0x00100000005212ae
- (_Bool)syncgetIsMapsANonSystemLocationClient;	// IMP=0x00100000005211a5
- (_Bool)syncgetHasAuthorizedClients;	// IMP=0x00100000005210de
- (void)setLocationButtonUseMode:(int)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000520fd8
- (void)setIncidentalUseMode:(int)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000520ed2
- (void)deleteInterestZoneWithId:(id)arg1 registeredForClientKey:(id)arg2 withReply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000520958
- (void)setRelevance:(_Bool)arg1 forInterestZoneWithId:(id)arg2 registeredForClientKey:(id)arg3;	// IMP=0x001000000052088a
- (void)setRelevance:(_Bool)arg1 forInterestZoneWithId:(id)arg2 registeredForClientKey:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000520341
- (void)registerPhenolicInterestZoneForClientKey:(id)arg1 withId:(id)arg2 phenolicLocation:(int)arg3 serviceMaskOperator:(int)arg4 provenanceType:(int)arg5 withReply:(CDUnknownBlockType)arg6;	// IMP=0x0010000000520238
- (void)registerCircularInterestZoneForClientKey:(id)arg1 withId:(id)arg2 latitude:(double)arg3 longitude:(double)arg4 serviceMaskOperator:(int)arg5 provenanceType:(int)arg6 radius:(double)arg7 withReply:(CDUnknownBlockType)arg8;	// IMP=0x001000000051f48f
- (void)getIncidentalUseModeForClient:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000051f387
- (int)syncgetRegistrationResultToAuthorizationStatus:(int)arg1;	// IMP=0x001000000051f155
- (int)syncgetClientEffectiveRegistrationResultWithTransientAwareness:(CDUnknownBlockType)arg1;	// IMP=0x001000000051f057
- (void)fetchClientStaticRegistrationResult:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000051ef45
- (id)syncgetNonSystemLocationClientKey;	// IMP=0x001000000051ecf1
- (id)syncgetNonSystemLocationClientKeys;	// IMP=0x001000000051ebe9
- (void)fetchLocationClientKeysWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000051ebb9
- (id)syncgetLocationClientKeys;	// IMP=0x001000000051eab1
- (id)syncgetCopyClients;	// IMP=0x001000000051e08e
- (void)setAllowableAuthorizationMask:(unsigned long long)arg1 forClientKey:(id)arg2;	// IMP=0x001000000051dabb
- (void)appsWithClientKeysAreInstalledOnAPairedDevice:(id)arg1;	// IMP=0x001000000051d96f
- (void)checkAppInstallationStatus;	// IMP=0x001000000051d955
- (_Bool)syncgetSetLocationServicesEnabledStatically:(_Bool)arg1 withEventSource:(id)arg2;	// IMP=0x001000000051d8ca
- (void)setPurpose:(id)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x001000000051d76c
- (void)setClient:(CDUnknownBlockType)arg1;	// IMP=0x001000000051d65b
- (void)resetClients;	// IMP=0x001000000051d641
- (void)resetClient:(id)arg1;	// IMP=0x001000000051d5f7
- (void)reportLocationUtilityEvent:(int)arg1 atDate:(id)arg2;	// IMP=0x001000000051d5cb
- (void)sendMetricForFunctionCallsForClientKey:(id)arg1 info:(id)arg2;	// IMP=0x001000000051d577
- (void)setLastLocationSettingsEventSource:(id)arg1;	// IMP=0x001000000051d4ef
- (void)setClientAuthorization:(CDUnknownBlockType)arg1 zoneIdentifier:(id)arg2 subIdentityIdentifier:(id)arg3 status:(int)arg4 correctiveCompensation:(int)arg5 mayIncreaseAuth:(_Bool)arg6 entity:(id)arg7;	// IMP=0x001000000051d37a
- (void)setClientBackgroundIndicator:(CDUnknownBlockType)arg1 enabled:(_Bool)arg2 entity:(id)arg3;	// IMP=0x001000000051d082
- (void)resetNotificationConsumedForIdentifier:(id)arg1;	// IMP=0x001000000051cb0a
- (void)performMigrationWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000051c5d6
- (void)appLaunchedByAppLifecycleManager:(id)arg1;	// IMP=0x001000000051c59e
- (void)wakeUpLaunchdManagedClient:(id)arg1;	// IMP=0x001000000051c504
- (void)onCapabilityChange;	// IMP=0x001000000051c4a1
- (void)markReceivingLocationInformation:(CDUnknownBlockType)arg1;	// IMP=0x001000000051c39f
- (void)reduceAccuracy:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000051c2fe
- (void)inUseAssertionInvalidatedDueToWatchConnectivityForClientKey:(id)arg1;	// IMP=0x001000000051c2b4
- (void)takeInUseAssertionForClientKey:(id)arg1 reason:(id)arg2 assertionLevel:(int)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000051c10f
- (void)markClientEmergencyEnablementTransition:(_Bool)arg1 shouldOverrideDeauthorization:(_Bool)arg2 forBeneficiary:(id)arg3;	// IMP=0x001000000051c095
- (void)markClientEmergencyEnablementTransition:(_Bool)arg1;	// IMP=0x001000000051c06c
- (void)tearDownLocationAuthPrompt:(id)arg1;	// IMP=0x001000000051c01b
- (void)markTemporaryPreciseAuthorizationGranted:(_Bool)arg1 forClientKey:(id)arg2;	// IMP=0x001000000051bfcb
- (void)markClientTemporaryAuthorizationGranted:(_Bool)arg1 forClientKey:(id)arg2 andAuditToken:(CDStruct_6ad76789)arg3 byLocationButton:(_Bool)arg4 voiceInteractionEnabled:(_Bool)arg5;	// IMP=0x001000000051bf64
- (void)updatePromptedLatitude:(double)arg1 longitude:(double)arg2;	// IMP=0x001000000051bf1b
- (void)updatePillButtonChoiceForOutstandingPrompt:(int)arg1;	// IMP=0x001000000051bef9
- (void)considerPromptingForTranscriptSession:(id)arg1 dictionary:(id)arg2 requestType:(int)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000051be95
- (void)setClients:(id)arg1 locationPushTo:(_Bool)arg2;	// IMP=0x001000000051bd66
- (void)setClients:(id)arg1 significantLocationVisitTo:(_Bool)arg2;	// IMP=0x001000000051bc39
- (void)setClients:(id)arg1 transcriptSessionChangeTo:(_Bool)arg2;	// IMP=0x001000000051bb0c
- (void)setClients:(id)arg1 significantLocationChangeTo:(_Bool)arg2;	// IMP=0x001000000051b9df
- (void)setClients:(id)arg1 regionOfType:(int)arg2 to:(_Bool)arg3;	// IMP=0x001000000051b8b8
- (void)setProvisionalAuthorization:(id)arg1;	// IMP=0x001000000051b759
- (void)dingAllActiveTranscriptSubscriptions;	// IMP=0x001000000051b739
- (_Bool)syncgetDoSync:(CDUnknownBlockType)arg1;	// IMP=0x001000000051b711
- (void)doAsync:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000051b6e4
- (void)doAsync:(CDUnknownBlockType)arg1;	// IMP=0x001000000051b6bc
- (void *)adaptee;	// IMP=0x001000000051b689
- (void)endService;	// IMP=0x001000000051b66e
- (void)beginService;	// IMP=0x001000000051b61d
- (id)init;	// IMP=0x001000000051b5e0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

