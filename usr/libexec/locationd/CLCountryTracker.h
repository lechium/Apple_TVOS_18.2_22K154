//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <LocationSupport/CLIntersiloService.h>

@class CLLocation, CLLocationManager, CLSettingsMirror, CLTimer, NSArray, NSString;

@interface CLCountryTracker : CLIntersiloService
{
    _Bool fAtLeastOneValidLocation;	// 8 = 0x8
    _Bool fAtLeastOneAuthDetermination;	// 9 = 0x9
    CLTimer *fLocationUnknownTimeoutTimer;	// 16 = 0x10
    CLTimer *fLocationRequestTimer;	// 24 = 0x18
    CLTimer *fActiveLocationDeregisterTimer;	// 32 = 0x20
    struct CLDistanceCalc fDistanceCalc;	// 40 = 0x28
    struct unique_ptr<CLClientManager_Type::Client, std::default_delete<CLClientManager_Type::Client>> fClientManagerClient;	// 80 = 0x50
    _Bool _skipUpdatingRegulatoryDomain;	// 88 = 0x58
    _Bool _allowSimulatedLocations;	// 89 = 0x59
    _Bool _previousDisputedState;	// 90 = 0x5a
    int _minimumConfidence;	// 92 = 0x5c
    int _countryCodeDebounceInterval;	// 96 = 0x60
    int _authStatus;	// 100 = 0x64
    CLSettingsMirror *_settings;	// 104 = 0x68
    double _maximumCountryLocationChangeSpeed;	// 112 = 0x70
    double _maximumCountryLocationChangeAccuracy;	// 120 = 0x78
    double _minimumMoveDistance;	// 128 = 0x80
    double _debounceTime;	// 136 = 0x88
    double _stalenessTime;	// 144 = 0x90
    double _timeToUnknown;	// 152 = 0x98
    double _timeToActiveGiveup;	// 160 = 0xa0
    double _timeToRequestCheapActiveLocation;	// 168 = 0xa8
    CLLocationManager *_locManager;	// 176 = 0xb0
    CLLocation *_previousLocation;	// 184 = 0xb8
    NSArray *_previousCountries;	// 192 = 0xc0
    double _previousCountryCodeTimeStamp;	// 200 = 0xc8
}

+ (_Bool)isSupported;	// IMP=0x00000000004db448
+ (id)getSilo;	// IMP=0x00100000004d910e
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x00100000004d90f5
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x00100000004d9098
- (id).cxx_construct;	// IMP=0x00200000004dd683
- (void).cxx_destruct;	// IMP=0x00100000004dd65b
@property(nonatomic) int authStatus; // @synthesize authStatus=_authStatus;
@property(nonatomic) double previousCountryCodeTimeStamp; // @synthesize previousCountryCodeTimeStamp=_previousCountryCodeTimeStamp;
@property(nonatomic) _Bool previousDisputedState; // @synthesize previousDisputedState=_previousDisputedState;
@property(retain, nonatomic) NSArray *previousCountries; // @synthesize previousCountries=_previousCountries;
@property(retain, nonatomic) CLLocation *previousLocation; // @synthesize previousLocation=_previousLocation;
@property(retain, nonatomic) CLLocationManager *locManager; // @synthesize locManager=_locManager;
@property(nonatomic) double timeToRequestCheapActiveLocation; // @synthesize timeToRequestCheapActiveLocation=_timeToRequestCheapActiveLocation;
@property(nonatomic) int countryCodeDebounceInterval; // @synthesize countryCodeDebounceInterval=_countryCodeDebounceInterval;
@property(nonatomic) _Bool allowSimulatedLocations; // @synthesize allowSimulatedLocations=_allowSimulatedLocations;
@property(nonatomic) _Bool skipUpdatingRegulatoryDomain; // @synthesize skipUpdatingRegulatoryDomain=_skipUpdatingRegulatoryDomain;
@property(nonatomic) double timeToActiveGiveup; // @synthesize timeToActiveGiveup=_timeToActiveGiveup;
@property(nonatomic) double timeToUnknown; // @synthesize timeToUnknown=_timeToUnknown;
@property(nonatomic) double stalenessTime; // @synthesize stalenessTime=_stalenessTime;
@property(nonatomic) double debounceTime; // @synthesize debounceTime=_debounceTime;
@property(nonatomic) double minimumMoveDistance; // @synthesize minimumMoveDistance=_minimumMoveDistance;
@property(nonatomic) double maximumCountryLocationChangeAccuracy; // @synthesize maximumCountryLocationChangeAccuracy=_maximumCountryLocationChangeAccuracy;
@property(nonatomic) double maximumCountryLocationChangeSpeed; // @synthesize maximumCountryLocationChangeSpeed=_maximumCountryLocationChangeSpeed;
@property(nonatomic) int minimumConfidence; // @synthesize minimumConfidence=_minimumConfidence;
@property(retain, nonatomic) CLSettingsMirror *settings; // @synthesize settings=_settings;
- (double)calculateDistance:(id)arg1 b:(id)arg2;	// IMP=0x00100000004dcfb4
- (void)onManagerNotification:(const int *)arg1 data:(const void *)arg2;	// IMP=0x00100000004dcd4c
- (void)checkLocationServicesStatus;	// IMP=0x00100000004dcbfa
- (void)requestLocationWithDesiredAccuracy:(double)arg1;	// IMP=0x00100000004dca8d
- (void)onLocationUnknownTimer;	// IMP=0x00100000004dc96b
- (void)updateLocationUnknown;	// IMP=0x00100000004dc8ad
- (void)handleNewLocation:(id)arg1;	// IMP=0x00100000004db616
- (_Bool)countriesAreUnchanged:(id)arg1;	// IMP=0x00100000004db53b
- (void)sendUpdateToRDIfAllowed:(id)arg1;	// IMP=0x00100000004db450
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x00100000004db322
- (void)locationManagerDidChangeAuthorization:(id)arg1;	// IMP=0x00100000004db206
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;	// IMP=0x00100000004da7c0
- (_Bool)locationIsUsable:(id)arg1;	// IMP=0x00100000004da1f3
- (void)refreshSettings;	// IMP=0x00100000004d9d51
- (void)endService;	// IMP=0x00100000004d9b67
- (void)beginService;	// IMP=0x00100000004d91a7
- (id)init;	// IMP=0x00100000004d916a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

