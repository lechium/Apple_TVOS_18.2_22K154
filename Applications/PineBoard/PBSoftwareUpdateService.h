//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, NSTimer, PBSystemOverlayController, PCSimpleTimer, TVSBackgroundTask, UIViewController;

@interface PBSoftwareUpdateService : NSObject
{
    _Bool _monitoringEnabled;	// 8 = 0x8
    _Bool _precheckingOSUpdateConditions;	// 9 = 0x9
    TVSBackgroundTask *_osSoftwareUpdateInitialCheckTask;	// 16 = 0x10
    TVSBackgroundTask *_osSoftwareUpdatePeriodicCheckTask;	// 24 = 0x18
    PCSimpleTimer *_darkWakeTimer;	// 32 = 0x20
    PCSimpleTimer *_updateDelayExpirationTimer;	// 40 = 0x28
    NSTimer *_vendorBagRefetchTimeoutTimer;	// 48 = 0x30
    PCSimpleTimer *_dailyReportingTimer;	// 56 = 0x38
    CDUnknownBlockType _osSoftwareUpdateCheckResponse;	// 64 = 0x40
    PBSystemOverlayController *_overlayController;	// 72 = 0x48
    UIViewController *_updateViewController;	// 80 = 0x50
}

+ (id)sharedInstance;	// IMP=0x00200000001cb24f
+ (id)dependencyDescription;	// IMP=0x00100000001cb050
- (void).cxx_destruct;	// IMP=0x00200000001d8e67
@property(readonly, nonatomic) UIViewController *updateViewController; // @synthesize updateViewController=_updateViewController;
@property(readonly, nonatomic) PBSystemOverlayController *overlayController; // @synthesize overlayController=_overlayController;
@property(copy, nonatomic) CDUnknownBlockType osSoftwareUpdateCheckResponse; // @synthesize osSoftwareUpdateCheckResponse=_osSoftwareUpdateCheckResponse;
@property(retain, nonatomic) PCSimpleTimer *dailyReportingTimer; // @synthesize dailyReportingTimer=_dailyReportingTimer;
@property(nonatomic) __weak NSTimer *vendorBagRefetchTimeoutTimer; // @synthesize vendorBagRefetchTimeoutTimer=_vendorBagRefetchTimeoutTimer;
@property(retain, nonatomic) PCSimpleTimer *updateDelayExpirationTimer; // @synthesize updateDelayExpirationTimer=_updateDelayExpirationTimer;
@property(retain, nonatomic) PCSimpleTimer *darkWakeTimer; // @synthesize darkWakeTimer=_darkWakeTimer;
@property(retain, nonatomic) TVSBackgroundTask *osSoftwareUpdatePeriodicCheckTask; // @synthesize osSoftwareUpdatePeriodicCheckTask=_osSoftwareUpdatePeriodicCheckTask;
@property(retain, nonatomic) TVSBackgroundTask *osSoftwareUpdateInitialCheckTask; // @synthesize osSoftwareUpdateInitialCheckTask=_osSoftwareUpdateInitialCheckTask;
@property(nonatomic) _Bool precheckingOSUpdateConditions; // @synthesize precheckingOSUpdateConditions=_precheckingOSUpdateConditions;
@property(nonatomic) _Bool monitoringEnabled; // @synthesize monitoringEnabled=_monitoringEnabled;
@property(readonly, nonatomic, getter=isPresenting) _Bool presenting;
- (void)osUpdateProcessDidFinishApplyWithData:(id)arg1;	// IMP=0x00100000001d8394
- (void)osUpdateProcessDidUpdateApplyProgressWithData:(id)arg1;	// IMP=0x00100000001d8043
- (void)osUpdateProcessDidStartApplyWithData:(id)arg1;	// IMP=0x00100000001d7d3d
- (void)osUpdateProcessDidStartRedownloadWithData:(id)arg1;	// IMP=0x00100000001d7a37
- (void)osUpdateProcessDidFinishDownloadWithData:(id)arg1;	// IMP=0x00100000001d75bc
- (void)osUpdateProcessDidUpdateDownloadProgressWithData:(id)arg1;	// IMP=0x00100000001d73db
- (void)osUpdateProcessDidStartDownloadWithData:(id)arg1;	// IMP=0x00100000001d7108
- (void)osUpdateProcessDidFinishCheckWithData:(id)arg1;	// IMP=0x00100000001d6708
- (void)osUpdateProcessDidStartCheckWithData:(id)arg1;	// IMP=0x00100000001d6435
- (void)powerManager:(id)arg1 willWakeSystemWithReason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001d631c
- (void)powerManager:(id)arg1 willSleepSystemWithReason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001d62cc
- (_Bool)powerManagerAllowSystemToSleep:(id)arg1;	// IMP=0x00100000001d62b7
- (id)singleLineDescriptionFor:(id)arg1;	// IMP=0x00100000001d615d
- (void)_didFinishTvOSUCheckWithData:(id)arg1;	// IMP=0x00100000001d5c2f
- (void)_didFinishLegacyCheckWithData:(id)arg1;	// IMP=0x00100000001d57a3
- (void)_dismiss;	// IMP=0x00100000001d562e
- (void)_presentWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001d547b
- (void)_presentModalUpdateScreen;	// IMP=0x00100000001d52f4
- (void)_showOSUpdateUpToDateDialog:(_Bool)arg1;	// IMP=0x00100000001d511c
- (void)_showOSUpdateError:(id)arg1 inDomain:(id)arg2 description:(id)arg3 underlyingError:(id)arg4;	// IMP=0x00100000001d49a8
- (void)_promptForApplyConfirmationWithData:(id)arg1 thenDo:(CDUnknownBlockType)arg2;	// IMP=0x00100000001d43d4
- (void)_showApplyConfirmationDialogIfNeededWithData:(id)arg1;	// IMP=0x00100000001d36b4
- (void)_showOSUpdateDownloadAndApplyConfirmationForUpdate:(id)arg1 largeUpdate:(_Bool)arg2 assetIsDownloaded:(_Bool)arg3;	// IMP=0x00100000001d327c
- (id)_versionForUpdate:(id)arg1;	// IMP=0x00100000001d314b
- (void)_handleManagedConfigurationSettingsChangedNotification:(id)arg1;	// IMP=0x00100000001d312f
- (void)_handleOSUpdatePrefsDidChange;	// IMP=0x00100000001d2ed4
- (void)_handlePineBoardPrefsDidChange;	// IMP=0x00100000001d2bcb
- (void)_currentDownload:(CDUnknownBlockType)arg1;	// IMP=0x00100000001d28a6
- (void)_startOSUpdateCheckForAction:(unsigned long long)arg1;	// IMP=0x00100000001d26c8
- (_Bool)_serverAllowsAutoApplyUpdates;	// IMP=0x00100000001d1d09
- (void)_postVendorBagReloadContinueAutoApply;	// IMP=0x00100000001d12fd
- (void)_reloadVendorBag;	// IMP=0x00100000001d1142
- (void)_dailyOSUpdateReportingTimerFired:(id)arg1;	// IMP=0x00100000001d0ea5
- (void)_scheduleDailyOSUpdateReporting;	// IMP=0x00100000001d08a8
- (void)_osUpdateDelayedUpdateExpirationTimerFired:(id)arg1;	// IMP=0x00100000001d0678
- (void)_scheduleOSUpdateCheckForExpiredDelay;	// IMP=0x00100000001d0250
- (void)_osUpdateDarkWakeTimerFired:(id)arg1;	// IMP=0x00100000001cfd2c
- (void)_scheduleOSUpdateDarkWakeAt:(id)arg1;	// IMP=0x00100000001cfa3d
- (void)_cancelOSUpdateDarkWakeTimer;	// IMP=0x00100000001cf9c8
- (void)_scheduleOSUpdateTimerForNextDarkWake;	// IMP=0x00100000001cf671
- (void)_scheduleOSUpdateOnSleepCheck;	// IMP=0x00100000001cf20a
- (void)_scheduleOSUpdateCheck;	// IMP=0x00100000001ce7a3
- (_Bool)_shouldStopAfterDownloadAndBeforeApplyWithData:(id)arg1;	// IMP=0x00100000001ce493
- (_Bool)_okToCheckForOSSoftwareUpdate;	// IMP=0x00100000001ce48b
- (void)purgeAssetsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001ce2a6
- (void)purgeableAssetSpaceWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001ce221
- (void)notePlaybackStateChanged;	// IMP=0x00100000001cdccf
- (void);	// IMP=0x00100000001cdcb0
- (void)installUpdate:(id)arg1 withOptions:(id)arg2 withResult:(CDUnknownBlockType)arg3;	// IMP=0x00100000001cd76c
- (void)reallyPerformOSSoftwareRestore;	// IMP=0x00100000001cd603
- (void)purgeDownload:(CDUnknownBlockType)arg1;	// IMP=0x00100000001cd2dd
- (void)cancelDownload:(CDUnknownBlockType)arg1;	// IMP=0x00100000001ccf77
- (void)startDownload:(CDUnknownBlockType)arg1;	// IMP=0x00100000001cc99c
- (void)reallyPerformMDMOSSoftwareUpdateCheck;	// IMP=0x00100000001cc7b4
- (void)reallyPerformOSSoftwareUpdateCheck;	// IMP=0x00100000001cc739
- (void)checkForOSUpdatesWithOptions:(id)arg1 response:(CDUnknownBlockType)arg2;	// IMP=0x00100000001cc108
- (void)isUpdate:(id)arg1 readyForInstallation:(CDUnknownBlockType)arg2;	// IMP=0x00100000001cbc4f
- (void)isOSSoftwareUpdateRunning:(CDUnknownBlockType)arg1;	// IMP=0x00100000001cbbff
- (void)setAssetDownloadIsDiscretionary:(_Bool)arg1;	// IMP=0x00100000001cbbe5
- (void)currentDownload:(CDUnknownBlockType)arg1;	// IMP=0x00100000001cbbcb
- (void)isOSSoftwareUpdateChecking:(CDUnknownBlockType)arg1;	// IMP=0x00100000001cbb7b
- (void)startSoftwareUpdateMonitoring;	// IMP=0x00100000001cb884
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000001cb83a
- (id)init;	// IMP=0x00100000001cb2a6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

