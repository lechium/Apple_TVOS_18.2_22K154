//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSObject, NSString, NSTimer;
@protocol GCMotionServiceClientInterface, GCNintendoJoyConFusionGestureServiceClientInterface, OS_dispatch_source;

@interface JoyConHIDServicePlugin
{
    unsigned char _setupState;	// 8 = 0x8
    unsigned int _quirks;	// 12 = 0xc
    _Bool _isWired;	// 16 = 0x10
    unsigned short _devicePID;	// 18 = 0x12
    unsigned short _deviceUsage;	// 20 = 0x14
    NSString *_deviceName;	// 24 = 0x18
    struct {
        NSString *string;
        _Bool hasFecthedAtLeastOnce;
    } _serialNumber;	// 32 = 0x20
    struct {
        struct {
            unsigned short firmwareVersion;
            unsigned char type;
            unsigned char bluetoothMAC[6];
            unsigned char unknown1;
            unsigned char unknown2;
            unsigned char spiColorsOverride;
        } properties;
        _Bool hasFecthedAtLeastOnce;
        _Bool valid;
    } _deviceInfo;	// 48 = 0x30
    struct {
        CDStruct_11ffa521 bodyColor;
        CDStruct_11ffa521 buttonsColor;
        _Bool hasFecthedAtLeastOnce;
        _Bool valid;
    } _colorInfo;	// 62 = 0x3e
    struct {
        struct {
            struct {
                CDStruct_5aea82d7 left;
                CDStruct_5aea82d7 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
            } factory;
            struct {
                CDStruct_5aea82d7 left;
                CDStruct_5aea82d7 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
                unsigned int hasLeft:1;
                unsigned int hasRight:1;
            } user;
            struct {
                CDStruct_298edf78 left;
                CDStruct_298edf78 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
            } parameters;
        } stick;
        struct {
            struct {
                CDStruct_844ecdcb data;
                unsigned int fetchedCalibration:1;
                unsigned int fetchedHorizontalOffset:1;
            } factory;
            struct {
                CDStruct_844ecdcb data;
                unsigned int fetched:1;
                unsigned int hasData:1;
            } user;
            struct {
                CDStruct_03942939 accel;
                CDStruct_03942939 gyro;
            } coefficients;
        } motion;
    } _calibration;	// 72 = 0x48
    struct {
        _Bool initialized;
        struct {
            _Bool charging;
            unsigned char level;
        } info;
    } _battery;	// 272 = 0x110
    unsigned char _lowPowerSetting;	// 275 = 0x113
    unsigned char _inputReportMode;	// 276 = 0x114
    CDStruct_9f249b22 _playerLights;	// 277 = 0x115
    _Bool _vibrationEnabled;	// 281 = 0x119
    _Bool _imuEnabled;	// 282 = 0x11a
    unsigned char _globalPacketNumber;	// 283 = 0x11b
    struct PendingProprietaryCommands _pendingProprietaryCommands;	// 288 = 0x120
    unsigned int _pendingProprietaryCommandsCount;	// 304 = 0x130
    struct {
        struct JoyConProprietaryCommand *command;
        NSObject<OS_dispatch_source> *timeout;
        unsigned long long requestTimestamp;
    } _outstandingProprietaryCommand;	// 312 = 0x138
    struct PendingSubcommands _pendingSubcommands;	// 336 = 0x150
    unsigned int _pendingSubcommandsCount;	// 352 = 0x160
    struct {
        struct JoyConSubcommand *subcommand;
        NSObject<OS_dispatch_source> *timeout;
        unsigned long long requestTimestamp;
    } _outstandingSubcommand;	// 360 = 0x168
    struct {
        unsigned long long activateTimestamp;
        unsigned long long cancelTimestamp;
        unsigned long long lastInputReportTimestamp;
        unsigned char detectedInputReportMode;
        struct {
            CDStruct_e6f94ff9 left;
            CDStruct_e6f94ff9 right;
        } sticks;
    } _statistics;	// 384 = 0x180
    id <GCNintendoJoyConFusionGestureServiceClientInterface> _gestureClient;	// 440 = 0x1b8
    NSTimer *_homeButtonLongPressGestureTimer;	// 448 = 0x1c0
    NSTimer *_homeButtonLongPressRecognizedGesture;	// 456 = 0x1c8
    _Bool _previousHomeButtonPressed;	// 464 = 0x1d0
    id <GCMotionServiceClientInterface> _motionClient;	// 472 = 0x1d8
}

+ (_Bool)matchService:(unsigned int)arg1 options:(id)arg2 score:(long long *)arg3;	// IMP=0x00100000000067cd
- (id).cxx_construct;	// IMP=0x0000000000016c38
- (void).cxx_destruct;	// IMP=0x0000000000016ba2
- (float)defaultRightAxisSnapRadius;	// IMP=0x0000000000016b99
- (float)defaultLeftAxisSnapRadius;	// IMP=0x0000000000016b90
- (float)defaultRightThumbstickDeadzoneRadius;	// IMP=0x0000000000016b87
- (float)defaultLeftThumbstickDeadzoneRadius;	// IMP=0x0000000000016b7e
- (float)defaultRightThumbstickNoiseBuffer;	// IMP=0x0000000000016b54
- (float)defaultLeftThumbstickNoiseBuffer;	// IMP=0x0000000000016b2a
- (void)applyDeadzone:(float)arg1 axisSnapRadius:(float)arg2 input:(MISSING_TYPE **)arg3;	// IMP=0x0000000000016b24
- (void)homeButtonPressed:(_Bool)arg1;	// IMP=0x0000000000016814
- (void)homeButtonLongPressGestureEnded:(id)arg1;	// IMP=0x0000000000016760
- (void)homeButtonLongPressGestureBegan:(id)arg1;	// IMP=0x000000000001664a
- (void)connectToNintendoJoyConFusionGestureServiceWithClient:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016594
- (CDStruct_a46637cf)currentRumbleData;	// IMP=0x000000000001618e
- (id)defaultHapticMotors;	// IMP=0x0000000000015fed
- (float)defaultHapticDispatchFrequency;	// IMP=0x0000000000015fdf
- (void)dispatchHapticEvent;	// IMP=0x0000000000015fcd
- (void)readSensorsActiveWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015fb4
- (void)updateSensorsActive:(_Bool)arg1;	// IMP=0x0000000000015f1d
- (void)connectToMotionServiceWithClient:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000015e6a
- (void)enqueueProprietaryCommand:(unsigned char)arg1 expectsResponse:(_Bool)arg2 data:(const void *)arg3 length:(unsigned long long)arg4 replyHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000135a3
- (void)dispatchCurrentRumbleData;	// IMP=0x00000000000128ba
- (void)handleStandardFullPayload:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x0000000000010978
- (void)handleHIDControllerPayload:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x000000000000fae1
- (void)setupRawReportHandling;	// IMP=0x000000000000efd0
- (void)setupUSBWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000000e5d3
- (void)refreshCalibrationData;	// IMP=0x000000000000c251
- (void)refreshDeviceInfo;	// IMP=0x000000000000b217
- (void)refreshLowPowerSetting;	// IMP=0x000000000000aa6a
- (void)setVibrationEnabled:(_Bool)arg1;	// IMP=0x000000000000a745
- (void)setIMUEnabled:(_Bool)arg1;	// IMP=0x000000000000a402
- (void)setLowPower:(_Bool)arg1;	// IMP=0x000000000000a0b9
- (void)setInputMode:(unsigned char)arg1;	// IMP=0x0000000000009da4
- (void)setPlayerLights:(CDStruct_9f249b22)arg1;	// IMP=0x00000000000099a6
- (_Bool)io_playerLights:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000009440
- (_Bool)io_inputMode:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000092bc
- (_Bool)io_lowPowerSetting:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x000000000000926b
- (_Bool)io_calibrationInfo:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000083ac
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2 client:(id)arg3;	// IMP=0x0000000000008257
- (id)propertyForKey:(id)arg1 client:(id)arg2;	// IMP=0x0000000000007329
@property(readonly, copy) NSString *description;
- (_Bool)shouldDisconnectWhenIdle;	// IMP=0x000000000000730a
- (void)initGameControllerDaemonXPC;	// IMP=0x00000000000072ce
- (void)cancel;	// IMP=0x000000000000709c
- (void)ready;	// IMP=0x0000000000006e7b
- (void)activate;	// IMP=0x0000000000006c2c
- (id)initWithService:(unsigned int)arg1;	// IMP=0x000000000000695c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

