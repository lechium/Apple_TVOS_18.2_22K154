//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "NSURLSessionTask.h"

@class CFNetworkTimer, NSData, NSMutableArray, NSObject, __NSCFURLLocalStreamTaskWorkRead, __NSCFURLLocalStreamTaskWorkWrite;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface __NSCFTCPIOStreamTask : NSURLSessionTask
{
    CDUnknownBlockType _disavow;	// 8 = 0x8
    struct shared_ptr<TCPIO_EstablishBase> _establish;	// 16 = 0x10
    struct shared_ptr<TransportConnectionObjCPP> _ios;	// 32 = 0x20
    unsigned char _captureStreamsUponCompletion;	// 48 = 0x30
    unsigned char _secure;	// 49 = 0x31
    NSData *__initialDataPayload;	// 56 = 0x38
    struct shared_ptr<HTTPProtocol> _httpProtocol;	// 64 = 0x40
    NSMutableArray *_pendingWork;	// 80 = 0x50
    NSMutableArray *_completedSuspendedWork;	// 88 = 0x58
    _Bool _doingWorkOnThisQueue;	// 96 = 0x60
    int _connectionState;	// 100 = 0x64
    _Bool _goneSecure;	// 104 = 0x68
    _Bool _streamsCaptured;	// 105 = 0x69
    CDStruct_59046461 _readError;	// 112 = 0x70
    _Bool _readInProgress;	// 128 = 0x80
    _Bool _readClosed;	// 129 = 0x81
    CDStruct_59046461 _writeError;	// 136 = 0x88
    _Bool _writeEOF;	// 152 = 0x98
    _Bool _writeInProgress;	// 153 = 0x99
    _Bool _writeClosed;	// 154 = 0x9a
    _Bool _receivedServerTrustChallenge;	// 155 = 0x9b
    _Bool _receivedEof;	// 156 = 0x9c
    CFNetworkTimer *_writeTimer;	// 160 = 0xa0
    CFNetworkTimer *_readTimer;	// 168 = 0xa8
    __NSCFURLLocalStreamTaskWorkWrite *_currentWriteTask;	// 176 = 0xb0
    __NSCFURLLocalStreamTaskWorkRead *_currentReadTask;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_workQueueForStreamTask;	// 192 = 0xc0
}

- (id).cxx_construct;	// IMP=0x000000000010959b
- (void).cxx_destruct;	// IMP=0x0000000000109559
@property(copy) NSData *_initialDataPayload; // @synthesize _initialDataPayload=__initialDataPayload;
- (void)_onSessionQueue_cleanupAndBreakCycles;	// IMP=0x000000000010948d
- (void)_onSessionQueue_disavow;	// IMP=0x0000000000109451
- (void)_onqueue_adjustLoadingPoolPriority;	// IMP=0x00000000001093ab
- (void)_onqueue_adjustPoolPriority;	// IMP=0x0000000000109305
- (void)_onqueue_suspend;	// IMP=0x00000000001092b6
- (void)_onqueue_connectionEstablishedWithError:(CDStruct_59046461)arg1 callbackReferent:(id)arg2;	// IMP=0x0000000000108d71
- (void)_onqueue_cleanUpConnectionEstablishmentState;	// IMP=0x0000000000108ba2
- (void)_onqueue_tlsDisabled;	// IMP=0x0000000000108b2f
- (void)_onqueue_tlsCompletion;	// IMP=0x0000000000108abc
- (void)_onqueue_setTransportConnection:(shared_ptr_8da4e70b)arg1;	// IMP=0x0000000000108954
- (void)_onqueue_postConnectConfiguration:(id)arg1 parameters:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000108949
- (void)_onqueue_dealWithSessionClientCertAuth:(long long)arg1 credential:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000001086f0
- (void)_onqueue_needClientCert:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000010864f
- (void)_onqueue_needServerTrust:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000010859c
- (_Bool)_onqueue_sendSessionChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001084de
- (void)_onqueue_dealWithSessionTrustAuth:(long long)arg1 credential:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000010846d
- (void)_onqueue_preConnectionConfiguration:(id)arg1 parameters:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000001082f7
- (void)_task_onqueue_didFinish;	// IMP=0x00000000001082f1
- (void)cancel;	// IMP=0x0000000000108298
- (void)_onqueue_checkForCompletion;	// IMP=0x00000000001080e3
- (void)_onqueue_cancel;	// IMP=0x0000000000108038
- (void)_onqueue_resume;	// IMP=0x0000000000107afe
- (_Bool)_onqueue_usingProxy;	// IMP=0x0000000000107929
- (id)_onqueue_errorOrCancelError;	// IMP=0x00000000001078b5
- (void)_onqueue_processReadWork:(id)arg1;	// IMP=0x00000000001076f6
- (void)_onqueue_processWriteWork:(id)arg1;	// IMP=0x0000000000107550
- (void)_onqueue_callbackCompletedWork;	// IMP=0x00000000001073b6
- (void)_onqueue_timeoutOccured;	// IMP=0x00000000001072a3
- (void)_onqueue_ioTick;	// IMP=0x0000000000106ead
- (_Bool)shouldDoWorkConsideringTlsState;	// IMP=0x0000000000106e88
- (void)_onqueue_addBlockOp:(CDUnknownBlockType)arg1 description:(const char *)arg2 shouldWaitForTls:(_Bool)arg3;	// IMP=0x0000000000106e3a
- (void)_onqueue_addBlockOp:(CDUnknownBlockType)arg1 description:(const char *)arg2;	// IMP=0x0000000000106dfe
- (void)_onqueue_captureStreams;	// IMP=0x0000000000106d62
- (void)_onqueue_closeWrite;	// IMP=0x0000000000106cd0
- (void)_onqueue_closeRead;	// IMP=0x0000000000106c3e
- (void)_onqueue_startSecureConnection;	// IMP=0x0000000000106bc6
- (void)_onqueue_stopSecureConnection;	// IMP=0x0000000000106b4e
- (void)stopSecureConnection;	// IMP=0x0000000000106a74
- (void)startSecureConnection;	// IMP=0x0000000000106942
- (void)copyStreamProperty:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001068d3
- (void)closeRead;	// IMP=0x00000000001067f9
- (void)closeWrite;	// IMP=0x000000000010671f
- (void)captureStreams;	// IMP=0x0000000000106600
- (void)writeData:(id)arg1 timeout:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000106582
- (void)readDataOfMinLength:(unsigned long long)arg1 maxLength:(unsigned long long)arg2 timeout:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001064f9
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001064ee
- (void)dealloc;	// IMP=0x00000000001063cf
- (id)initWithTask:(id)arg1 connection:(shared_ptr_8da4e70b)arg2 extraBytes:(id)arg3 disavow:(CDUnknownBlockType)arg4;	// IMP=0x000000000010603b
- (id)workQueue;	// IMP=0x0000000000105ffc
- (id)initWithHost:(id)arg1 port:(long long)arg2 taskGroup:(id)arg3 disavow:(CDUnknownBlockType)arg4;	// IMP=0x0000000000105b59
- (_Bool)isKindOfClass:(Class)arg1;	// IMP=0x0000000000105afe

@end

