//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVAssetTrack, AVCoordinatedPlaybackSuspension, AVDelegateManager, AVInterstitialController, AVMediaSelectionOption, AVNavigationMarkersGroup, AVObservationController, AVPlayer, AVPlayerItem, AVPlayerItemPhotosensitivityMetadataHandler, AVPlayerLayer, AVQueuePlayer, AVTimeRange, AVValueTiming, BSSimpleAssertion, NSArray, NSDate, NSDictionary, NSError, NSNumber, NSString, NSTimer;
@protocol AVPlayerControllerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface AVPlayerController : NSObject
{
    NSArray *_audioMediaSelectionOptions;	// 8 = 0x8
    NSArray *_visualMediaSelectionOptions;	// 16 = 0x10
    NSArray *_legibleMediaSelectionOptions;	// 24 = 0x18
    AVMediaSelectionOption *_cachedSelectedAudioMediaSelectionOption;	// 32 = 0x20
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOption;	// 40 = 0x28
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation;	// 48 = 0x30
    NSString *_lastKnownPersistedExtendedLanguageTag;	// 56 = 0x38
    NSString *_recentLegibleLanguageForLastSort;	// 64 = 0x40
    void *_observationInfo;	// 72 = 0x48
    _Bool _inspectionSuspended;	// 80 = 0x50
    id _updateAtMinMaxTimePeriodicObserverToken;	// 88 = 0x58
    id _timecodePeriodicObserverToken;	// 96 = 0x60
    _Bool _pictureInPictureInterrupted;	// 104 = 0x68
    _Bool _handlesAudioSessionInterruptions;	// 105 = 0x69
    _Bool _isDeallocating;	// 106 = 0x6a
    _Bool _hasSetUpSeekableLiveStreamState;	// 107 = 0x6b
    NSNumber *_rateToRestoreAfterAudioSessionInterruptionEnds;	// 112 = 0x70
    CDUnknownBlockType _retryPlayingImmediatelyBlock;	// 120 = 0x78
    _Bool _shouldPlayImmediately;	// 128 = 0x80
    _Bool _looping;	// 129 = 0x81
    long long _actionAtItemEnd;	// 136 = 0x88
    long long _playbackSuspensionCount;	// 144 = 0x90
    long long _scrubbingCount;	// 152 = 0x98
    NSObject<OS_dispatch_queue> *_seekQueue;	// 160 = 0xa0
    _Bool _pendingSeek;	// 168 = 0xa8
    CDStruct_1b6d18a9 _toleranceBefore;	// 172 = 0xac
    CDStruct_1b6d18a9 _toleranceAfter;	// 196 = 0xc4
    _Bool _isScanningForward;	// 220 = 0xdc
    _Bool _isScanningBackward;	// 221 = 0xdd
    unsigned long long _scanningCount;	// 224 = 0xe0
    double _preScanningRate;	// 232 = 0xe8
    AVValueTiming *_liveStreamMinTiming;	// 240 = 0xf0
    AVValueTiming *_liveStreamMaxTiming;	// 248 = 0xf8
    _Bool _liveStreamEventModePossible;	// 256 = 0x100
    long long _canUseNetworkResourcesForLiveStreamingWhilePausedCount;	// 264 = 0x108
    _Bool _previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused;	// 272 = 0x110
    _Bool _shouldPlayWhenLikelyToKeepUp;	// 273 = 0x111
    _Bool _playingOnSecondScreen;	// 274 = 0x112
    BSSimpleAssertion *_reduceResourceUsageAssertion;	// 280 = 0x118
    double _defaultPlaybackRate;	// 288 = 0x120
    _Bool _touchBarRequiresLinearPlayback;	// 296 = 0x128
    id <AVPlayerControllerDelegate> _internalDelegate;	// 304 = 0x130
    NSObject<OS_dispatch_queue> *_backgroundQueue;	// 312 = 0x138
    NSDate *_lastTimePlayingOnMatchPointDeviceWasUpdated;	// 320 = 0x140
    NSTimer *_updatePlayingOnMatchPointDeviceThrottleTimer;	// 328 = 0x148
    AVPlayerItemPhotosensitivityMetadataHandler *_photosensitivityMetadataHandler;	// 336 = 0x150
    _Bool _muted;	// 344 = 0x158
    _Bool _avkitSettingMuted;	// 345 = 0x159
    _Bool _allowsAudioPlayback;	// 346 = 0x15a
    _Bool _hasPendingAtLiveEdgeStateUpdate;	// 347 = 0x15b
    NSTimer *_liveEdgeTimer;	// 352 = 0x160
    _Bool _isPlayingHDRContent;	// 360 = 0x168
    _Bool _atLiveEdge;	// 361 = 0x169
    _Bool _atMaxTime;	// 362 = 0x16a
    _Bool _atMinTime;	// 363 = 0x16b
    _Bool _scrubbing;	// 364 = 0x16c
    _Bool _pictureInPictureSupported;	// 365 = 0x16d
    _Bool _seekingInternal;	// 366 = 0x16e
    _Bool _seeking;	// 367 = 0x16f
    _Bool _composable;	// 368 = 0x170
    _Bool _hasProtectedContent;	// 369 = 0x171
    _Bool _compatibleWithAirPlayVideo;	// 370 = 0x172
    _Bool _preventingIdleSystemSleep;	// 371 = 0x173
    _Bool _preventingIdleDisplaySleep;	// 372 = 0x174
    _Bool _disablingAutomaticTermination;	// 373 = 0x175
    _Bool _allowsPictureInPicturePlayback;	// 374 = 0x176
    _Bool _pictureInPictureActive;	// 375 = 0x177
    _Bool _canTogglePictureInPicture;	// 376 = 0x178
    _Bool _hasBegunInspection;	// 377 = 0x179
    _Bool _playingOnMatchPointDevice;	// 378 = 0x17a
    _Bool _scanningTV;	// 379 = 0x17b
    _Bool _shouldLoadVisualMediaSelectionOptions;	// 380 = 0x17c
    _Bool _playbackSuspended;	// 381 = 0x17d
    _Bool _coordinatedPlaybackActive;	// 382 = 0x17e
    AVPlayer *_player;	// 384 = 0x180
    AVPlayer *_activePlayer;	// 392 = 0x188
    double _activeRate;	// 400 = 0x190
    AVObservationController *_observationController;	// 408 = 0x198
    AVAsset *_currentAssetIfReady;	// 416 = 0x1a0
    NSObject<OS_dispatch_queue> *_assetInspectionQueue;	// 424 = 0x1a8
    AVAsset *_assetBeingPrepared;	// 432 = 0x1b0
    NSString *_externalPlaybackAirPlayDeviceLocalizedName;	// 440 = 0x1b8
    AVValueTiming *_timing;	// 448 = 0x1c0
    AVValueTiming *_minTiming;	// 456 = 0x1c8
    AVValueTiming *_maxTiming;	// 464 = 0x1d0
    AVAssetTrack *_currentAudioTrack;	// 472 = 0x1d8
    AVAssetTrack *_currentVideoTrack;	// 480 = 0x1e0
    double _seekToTime;	// 488 = 0x1e8
    double _initialScrubbingTime;	// 496 = 0x1f0
    NSDictionary *_metadata;	// 504 = 0x1f8
    NSArray *_availableMetadataFormats;	// 512 = 0x200
    double _rateBeforeScrubBegan;	// 520 = 0x208
    AVCoordinatedPlaybackSuspension *_scrubCoordinatorSuspension;	// 528 = 0x210
    NSString *_pipActivitySessionIdentifier;	// 536 = 0x218
    AVPlayerLayer *_playerLayerForReducingResources;	// 544 = 0x220
    NSArray *_photosensitivityRegions;	// 552 = 0x228
    NSObject<OS_dispatch_source> *_seekTimer;	// 560 = 0x230
    long long _bestAvailableVideoResolution;	// 568 = 0x238
    long long _bestAvailableVideoRange;	// 576 = 0x240
    long long _bestAvailableAudioFormat;	// 584 = 0x248
    long long _captionAppearanceDisplayType;	// 592 = 0x250
    double _suspendedRate;	// 600 = 0x258
    struct CGSize _presentationSize;	// 608 = 0x260
    CDStruct_1b6d18a9 _seekToTimeInternal;	// 624 = 0x270
}

+ (id)keyPathsForValuesAffectingPictureInPicturePossible;	// IMP=0x00600000000edf6c
+ (id)keyPathsForValuesAffectingExternalPlaybackType;	// IMP=0x00600000000edf40
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;	// IMP=0x00600000000edf20
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;	// IMP=0x00600000000edef4
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;	// IMP=0x00600000000eded4
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;	// IMP=0x00600000000edea8
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;	// IMP=0x00600000000ede7c
+ (id)keyPathsForValuesAffectingCanSeekToEnd;	// IMP=0x00600000000ede5c
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;	// IMP=0x00600000000ede3c
+ (id)keyPathsForValuesAffectingCanScanBackward;	// IMP=0x00600000000ede05
+ (id)keyPathsForValuesAffectingCanScanForward;	// IMP=0x00600000000eddce
+ (id)keyPathsForValuesAffectingCanSeek;	// IMP=0x00600000000edd7a
+ (id)keyPathsForValuesAffectingTimeControlStatus;	// IMP=0x00600000000edd5a
+ (id)keyPathsForValuesAffectingHasShareableContent;	// IMP=0x00600000000edd23
+ (id)keyPathsForValuesAffectingHasTrimmableContent;	// IMP=0x00600000000edcf7
+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;	// IMP=0x00600000000edc28
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;	// IMP=0x00600000000edb64
+ (id)keyPathsForValuesAffectingPlayableOffline;	// IMP=0x00600000000edb44
+ (id)keyPathsForValuesAffectingStreaming;	// IMP=0x00600000000edb24
+ (id)keyPathsForValuesAffectingHasEnabledVideo;	// IMP=0x00600000000edb04
+ (id)keyPathsForValuesAffectingHasVideo;	// IMP=0x00600000000edae4
+ (id)keyPathsForValuesAffectingHasEnabledAudio;	// IMP=0x00600000000edac4
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;	// IMP=0x00600000000eda8d
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;	// IMP=0x00600000000eda6d
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;	// IMP=0x00600000000eda41
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;	// IMP=0x00600000000eda15
+ (id)keyPathsForValuesAffectingForwardPlaybackEndTime;	// IMP=0x00600000000ed9f5
+ (id)keyPathsForValuesAffectingMaxTime;	// IMP=0x00600000000ed9ad
+ (id)keyPathsForValuesAffectingReversePlaybackEndTime;	// IMP=0x00600000000ed98d
+ (id)keyPathsForValuesAffectingMinTime;	// IMP=0x00600000000ed956
+ (id)keyPathsForValuesAffectingCurrentTime;	// IMP=0x00600000000ed936
+ (id)keyPathsForValuesAffectingContentDimensions;	// IMP=0x00600000000ed888
+ (id)keyPathsForValuesAffectingContentDuration;	// IMP=0x00600000000ed868
+ (id)keyPathsForValuesAffectingHasContent;	// IMP=0x00600000000ed848
+ (id)keyPathsForValuesAffectingVolume;	// IMP=0x00600000000ed828
+ (id)keyPathsForValuesAffectingCanTogglePlayback;	// IMP=0x00600000000ed7fc
+ (id)keyPathsForValuesAffectingCanPause;	// IMP=0x00600000000ed7dc
+ (id)keyPathsForValuesAffectingPlaying;	// IMP=0x00600000000ed7bc
+ (id)keyPathsForValuesAffectingCanPlay;	// IMP=0x00600000000ed790
+ (id)keyPathsForValuesAffectingDefaultPlaybackRate;	// IMP=0x00600000000ed76c
+ (id)keyPathsForValuesAffectingRate;	// IMP=0x00600000000ed74c
+ (id)keyPathsForValuesAffectingActiveRate;	// IMP=0x00600000000ed728
+ (id)keyPathsForValuesAffectingCompletelySeekable;	// IMP=0x00600000000ed6fc
+ (id)keyPathsForValuesAffectingError;	// IMP=0x00600000000ed6d0
+ (id)keyPathsForValuesAffectingReadyToPlay;	// IMP=0x00600000000ed6b0
+ (id)keyPathsForValuesAffectingStatus;	// IMP=0x00600000000ed679
+ (id)keyPathsForValuesAffectingpreferredTransform;	// IMP=0x00600000000ed655
+ (void)setCachedIsPictureInPictureSupported:(_Bool)arg1;	// IMP=0x00600000000ed649
+ (_Bool)cachedIsPictureInPictureSupported;	// IMP=0x00600000000ed63d
+ (void)initialize;	// IMP=0x00600000000ed602
+ (id)keyPathsForValuesAffectingMaximumVideoResolution;	// IMP=0x00600000000ee24a
+ (id)keyPathsForValuesAffectingPreferredDisplayCriteria;	// IMP=0x00600000000ee22a
+ (id)keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive;	// IMP=0x00600000000ee20a
+ (id)_sortedAudibleOption:(id)arg1;	// IMP=0x0060000000182281
+ (id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;	// IMP=0x006000000018223a
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;	// IMP=0x006000000018221a
+ (id)keyPathsForValuesAffectingCurrentVideoMediaSelectionOption;	// IMP=0x00600000001821ee
+ (id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;	// IMP=0x00600000001821c2
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;	// IMP=0x00600000001821a2
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;	// IMP=0x0060000000182176
+ (id)canonicalLanguageIdentifierFromString:(id)arg1;	// IMP=0x0060000000182001
- (void).cxx_destruct;	// IMP=0x00000000000e9de8
@property(nonatomic) _Bool coordinatedPlaybackActive; // @synthesize coordinatedPlaybackActive=_coordinatedPlaybackActive;
@property(readonly, nonatomic) double suspendedRate; // @synthesize suspendedRate=_suspendedRate;
@property(readonly, nonatomic, getter=isPlaybackSuspended) _Bool playbackSuspended; // @synthesize playbackSuspended=_playbackSuspended;
@property(nonatomic) long long captionAppearanceDisplayType; // @synthesize captionAppearanceDisplayType=_captionAppearanceDisplayType;
@property(nonatomic) _Bool shouldLoadVisualMediaSelectionOptions; // @synthesize shouldLoadVisualMediaSelectionOptions=_shouldLoadVisualMediaSelectionOptions;
@property(nonatomic) long long bestAvailableAudioFormat; // @synthesize bestAvailableAudioFormat=_bestAvailableAudioFormat;
@property(nonatomic) long long bestAvailableVideoRange; // @synthesize bestAvailableVideoRange=_bestAvailableVideoRange;
@property(nonatomic) long long bestAvailableVideoResolution; // @synthesize bestAvailableVideoResolution=_bestAvailableVideoResolution;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *seekTimer; // @synthesize seekTimer=_seekTimer;
@property(nonatomic, getter=_isScanningTV) _Bool scanningTV; // @synthesize scanningTV=_scanningTV;
@property(retain, nonatomic) NSArray *photosensitivityRegions; // @synthesize photosensitivityRegions=_photosensitivityRegions;
@property(nonatomic) __weak AVPlayerLayer *playerLayerForReducingResources; // @synthesize playerLayerForReducingResources=_playerLayerForReducingResources;
@property(nonatomic, getter=isPlayingOnMatchPointDevice) _Bool playingOnMatchPointDevice; // @synthesize playingOnMatchPointDevice=_playingOnMatchPointDevice;
@property(nonatomic) _Bool hasBegunInspection; // @synthesize hasBegunInspection=_hasBegunInspection;
@property(copy, nonatomic) NSString *pipActivitySessionIdentifier; // @synthesize pipActivitySessionIdentifier=_pipActivitySessionIdentifier;
@property(nonatomic) _Bool canTogglePictureInPicture; // @synthesize canTogglePictureInPicture=_canTogglePictureInPicture;
@property(nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(nonatomic) _Bool allowsPictureInPicturePlayback; // @synthesize allowsPictureInPicturePlayback=_allowsPictureInPicturePlayback;
@property(nonatomic, getter=isDisablingAutomaticTermination) _Bool disablingAutomaticTermination; // @synthesize disablingAutomaticTermination=_disablingAutomaticTermination;
@property(nonatomic, getter=isPreventingIdleDisplaySleep) _Bool preventingIdleDisplaySleep; // @synthesize preventingIdleDisplaySleep=_preventingIdleDisplaySleep;
@property(nonatomic, getter=isPreventingIdleSystemSleep) _Bool preventingIdleSystemSleep; // @synthesize preventingIdleSystemSleep=_preventingIdleSystemSleep;
@property(retain, nonatomic) AVCoordinatedPlaybackSuspension *scrubCoordinatorSuspension; // @synthesize scrubCoordinatorSuspension=_scrubCoordinatorSuspension;
@property(nonatomic) double rateBeforeScrubBegan; // @synthesize rateBeforeScrubBegan=_rateBeforeScrubBegan;
@property(nonatomic, getter=isCompatibleWithAirPlayVideo) _Bool compatibleWithAirPlayVideo; // @synthesize compatibleWithAirPlayVideo=_compatibleWithAirPlayVideo;
@property(retain, nonatomic) NSArray *availableMetadataFormats; // @synthesize availableMetadataFormats=_availableMetadataFormats;
@property(nonatomic) _Bool hasProtectedContent; // @synthesize hasProtectedContent=_hasProtectedContent;
@property(nonatomic, getter=isComposable) _Bool composable; // @synthesize composable=_composable;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) double initialScrubbingTime; // @synthesize initialScrubbingTime=_initialScrubbingTime;
@property(nonatomic) double seekToTime; // @synthesize seekToTime=_seekToTime;
@property CDStruct_1b6d18a9 seekToTimeInternal; // @synthesize seekToTimeInternal=_seekToTimeInternal;
@property(nonatomic, getter=isSeeking) _Bool seeking; // @synthesize seeking=_seeking;
@property(getter=isSeekingInternal) _Bool seekingInternal; // @synthesize seekingInternal=_seekingInternal;
@property(retain, nonatomic) AVAssetTrack *currentVideoTrack; // @synthesize currentVideoTrack=_currentVideoTrack;
@property(retain, nonatomic) AVAssetTrack *currentAudioTrack; // @synthesize currentAudioTrack=_currentAudioTrack;
@property(retain, nonatomic) AVValueTiming *maxTiming; // @synthesize maxTiming=_maxTiming;
@property(retain, nonatomic) AVValueTiming *minTiming; // @synthesize minTiming=_minTiming;
@property(retain, nonatomic) AVValueTiming *timing; // @synthesize timing=_timing;
@property(retain, nonatomic) NSString *externalPlaybackAirPlayDeviceLocalizedName; // @synthesize externalPlaybackAirPlayDeviceLocalizedName=_externalPlaybackAirPlayDeviceLocalizedName;
@property(nonatomic, getter=isPictureInPictureSupported) _Bool pictureInPictureSupported; // @synthesize pictureInPictureSupported=_pictureInPictureSupported;
@property(retain, nonatomic) AVAsset *assetBeingPrepared; // @synthesize assetBeingPrepared=_assetBeingPrepared;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *assetInspectionQueue; // @synthesize assetInspectionQueue=_assetInspectionQueue;
@property(retain, nonatomic) AVAsset *currentAssetIfReady; // @synthesize currentAssetIfReady=_currentAssetIfReady;
@property(nonatomic) struct CGSize presentationSize; // @synthesize presentationSize=_presentationSize;
@property(readonly, nonatomic) AVObservationController *observationController; // @synthesize observationController=_observationController;
@property(nonatomic) double activeRate; // @synthesize activeRate=_activeRate;
@property(retain, nonatomic) AVPlayer *activePlayer; // @synthesize activePlayer=_activePlayer;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic, getter=isAtMinTime) _Bool atMinTime; // @synthesize atMinTime=_atMinTime;
@property(nonatomic, getter=isAtMaxTime) _Bool atMaxTime; // @synthesize atMaxTime=_atMaxTime;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (double)_adjustedSeekTimeFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x00000000000e97ba
- (void)_updateActivePlayer;	// IMP=0x00000000000e976e
- (void)_setupInterstitialController;	// IMP=0x00000000000e9768
- (void)_prepareAssetForInspectionIfNeeded;	// IMP=0x00000000000e9237
- (id)scanningDelays;	// IMP=0x00000000000e91de
- (void)_updateRateForScrubbingAndSeeking;	// IMP=0x00000000000e9052
- (void)_updatePlayerMutedState;	// IMP=0x00000000000e8f1c
- (void)_updateMetadata;	// IMP=0x00000000000e8c7d
- (id)_outputContext;	// IMP=0x00000000000e8c2d
- (id)_timecodeTrack;	// IMP=0x00000000000e8ad3
- (void)_stopSuspendingPlayback;	// IMP=0x00000000000e8a96
- (void)_startSuspendingPlayback;	// IMP=0x00000000000e8a56
- (void)_setSuspendedRate:(double)arg1;	// IMP=0x00000000000e8a38
- (void)_setPlaybackSuspended:(_Bool)arg1;	// IMP=0x00000000000e8a24
- (void)_endPlaybackSuspension_AVFoundationStrategy;	// IMP=0x00000000000e89e6
- (id)_createMetadataDictionaryForCurrentAsset;	// IMP=0x00000000000e8596
- (void)_cancelPendingSeeksIfNeeded;	// IMP=0x00000000000e8510
- (void)_beginPlaybackSuspension_AVFoundationStrategy;	// IMP=0x00000000000e84d2
- (id)_photosensitiveDisplayTimes;	// IMP=0x00000000000e83fc
- (void)_updatePhotosensitivityRegions;	// IMP=0x00000000000e82f1
- (void)_cancelOutstandingAtLiveEdgeStateUpdates;	// IMP=0x00000000000e8294
- (void)_updateAtLiveEdgeStateIfNeeded;	// IMP=0x00000000000e81ac
- (void)_updateAtLiveEdgeStateAndScheduleTimerIfNeeded;	// IMP=0x00000000000e814a
- (void)_setNeedsAtLiveEdgeStateUpdate;	// IMP=0x00000000000e8066
- (void)_scheduleAtLiveEdgeStateUpdateWithTimeInterval:(double)arg1;	// IMP=0x00000000000e7f5e
- (void)_scheduleAtLiveEdgeStateUpdateIfNeeded;	// IMP=0x00000000000e7e65
- (void)setCanUseNetworkResourcesForLiveStreamingWhilePaused:(_Bool)arg1;	// IMP=0x00000000000e7df9
- (_Bool)canUseNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000e7d8b
- (_Bool)isReducingResourcesForPictureInPicture;	// IMP=0x00000000000e7d58
@property(retain, nonatomic) BSSimpleAssertion *reduceResourceUsageAssertion;
- (void)acquireResourceReductionAssertion;	// IMP=0x00000000000e7b3b
- (void)endReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000e7a4a
- (void)beginReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000e77a2
- (void)togglePictureInPicture:(id)arg1;	// IMP=0x00000000000e779c
- (void)setPictureInPictureInterrupted:(_Bool)arg1;	// IMP=0x00000000000e7754
- (_Bool)isPictureInPictureInterrupted;	// IMP=0x00000000000e774b
- (_Bool)isPictureInPicturePossible;	// IMP=0x00000000000e74ef
- (void)_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded;	// IMP=0x00000000000e7105
- (long long)externalPlaybackType;	// IMP=0x00000000000e7076
- (_Bool)isExternalPlaybackActive;	// IMP=0x00000000000e7032
@property(nonatomic, getter=isPlayingOnSecondScreen) _Bool playingOnSecondScreen;
- (_Bool)isPlayingOnExternalScreen;	// IMP=0x00000000000e6fed
- (void)setAllowsExternalPlayback:(_Bool)arg1;	// IMP=0x00000000000e6fa3
- (_Bool)allowsExternalPlayback;	// IMP=0x00000000000e6f5f
- (void)_updateMinMaxTimingIfNeeded;	// IMP=0x00000000000e6f1e
- (void)updateMinMaxTiming;	// IMP=0x00000000000e666e
- (void)updateTiming;	// IMP=0x00000000000e6434
- (void)endScrubbing:(id)arg1;	// IMP=0x00000000000e6305
- (void)beginScrubbing:(id)arg1;	// IMP=0x00000000000e6234
- (void)skipBackwardThirtySeconds:(id)arg1;	// IMP=0x00000000000e610c
- (void)seekOrStepByFrameCount:(long long)arg1;	// IMP=0x00000000000e59d1
- (void)seekFrameBackward:(id)arg1;	// IMP=0x00000000000e5993
- (_Bool)canSeekFrameBackward;	// IMP=0x00000000000e595a
- (void)seekFrameForward:(id)arg1;	// IMP=0x00000000000e591e
- (_Bool)canSeekFrameForward;	// IMP=0x00000000000e58e5
- (void)seekToEnd:(id)arg1;	// IMP=0x00000000000e58c5
- (_Bool)canSeekToEnd;	// IMP=0x00000000000e58b3
- (void)seekToBeginning:(id)arg1;	// IMP=0x00000000000e5893
- (_Bool)canSeekToBeginning;	// IMP=0x00000000000e5881
- (void)endScanningBackward:(id)arg1;	// IMP=0x00000000000e570a
- (void)_updateScanningBackwardRate;	// IMP=0x00000000000e552b
- (void)beginScanningBackward:(id)arg1;	// IMP=0x00000000000e537d
- (void)scanBackward:(id)arg1;	// IMP=0x00000000000e52a5
- (_Bool)canScanBackward;	// IMP=0x00000000000e5203
- (void)endScanningForward:(id)arg1;	// IMP=0x00000000000e508c
- (void)_updateScanningForwardRate;	// IMP=0x00000000000e4ebb
- (void)beginScanningForward:(id)arg1;	// IMP=0x00000000000e4d0d
- (void)scanForward:(id)arg1;	// IMP=0x00000000000e4c3a
- (_Bool)canScanForward;	// IMP=0x00000000000e4b98
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000e4a08
- (void)seekByTimeInterval:(double)arg1;	// IMP=0x00000000000e49f0
- (void)actuallySeekToTime;	// IMP=0x00000000000e46b9
- (void)throttledSeekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000e42b1
- (void)seekToCMTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000e429f
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000e41fb
- (void)resumePlaybackCoordinatorIfSuspended;	// IMP=0x00000000000e406a
- (void)suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary;	// IMP=0x00000000000e3f20
- (void)endScrubbing;	// IMP=0x00000000000e3d1f
- (void)beginScrubbing;	// IMP=0x00000000000e3c21
- (void)seekToTime:(double)arg1;	// IMP=0x00000000000e3c09
- (_Bool)canSeek;	// IMP=0x00000000000e3a2f
- (long long)timeControlStatus;	// IMP=0x00000000000e39eb
- (id)currentEnabledAssetTrackForMediaType:(id)arg1;	// IMP=0x00000000000e34cd
- (void)_updateCurrentVideoTrackIfNeeded;	// IMP=0x00000000000e3453
- (void)_updateCurrentAudioTrackIfNeeded;	// IMP=0x00000000000e33d9
- (void)_updateCoordinatedPlaybackActive;	// IMP=0x00000000000e3337
- (_Bool)_assetContainsProResRaw:(id)arg1;	// IMP=0x00000000000e30a8
- (_Bool)_assetIsMarkedNotSerializable:(id)arg1;	// IMP=0x00000000000e2e4f
- (id)audioWaveform;	// IMP=0x00000000000e2e47
- (_Bool)_assetIsRestrictedFromSaving:(id)arg1;	// IMP=0x00000000000e2d64
- (_Bool)hasShareableContent;	// IMP=0x00000000000e2c50
- (_Bool)hasTrimmableContent;	// IMP=0x00000000000e2b79
- (_Bool)hasSeekableLiveStreamingContent;	// IMP=0x00000000000e28d0
- (_Bool)hasLiveStreamingContent;	// IMP=0x00000000000e2763
- (_Bool)isPlayableOffline;	// IMP=0x00000000000e26d2
- (_Bool)isStreaming;	// IMP=0x00000000000e265d
- (_Bool)hasContentChapters;	// IMP=0x00000000000e2655
- (_Bool)hasEnabledVideo;	// IMP=0x00000000000e25e7
- (_Bool)hasVideo;	// IMP=0x00000000000e2579
- (_Bool)hasEnabledAudio;	// IMP=0x00000000000e250b
- (id)loadedTimeRanges;	// IMP=0x00000000000e2160
- (id)seekableTimeRanges;	// IMP=0x00000000000e20e6
- (double)currentTimeWithinEndTimes;	// IMP=0x00000000000e209f
@property(readonly, nonatomic) NSDate *currentOrEstimatedDate;
@property(readonly, nonatomic) NSDate *currentDate;
- (double)contentDurationWithinEndTimes;	// IMP=0x00000000000e1ede
- (void)_setMinTiming:(id)arg1 maxTiming:(id)arg2;	// IMP=0x00000000000e1e7d
- (void)setForwardPlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000e1dff
- (CDStruct_1b6d18a9)forwardPlaybackEndTime;	// IMP=0x00000000000e1d71
- (void)setMaxTime:(double)arg1;	// IMP=0x00000000000e1bbe
- (double)maxTime;	// IMP=0x00000000000e1a8d
- (void)setReversePlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000e1a0f
- (CDStruct_1b6d18a9)reversePlaybackEndTime;	// IMP=0x00000000000e1981
- (void)setMinTime:(double)arg1;	// IMP=0x00000000000e189b
- (double)minTime;	// IMP=0x00000000000e179c
- (double)currentTime;	// IMP=0x00000000000e16b2
- (struct CGSize)contentDimensions;	// IMP=0x00000000000e1674
- (float)nominalFrameRate;	// IMP=0x00000000000e13c7
- (double)contentDuration;	// IMP=0x00000000000e131f
- (_Bool)hasContent;	// IMP=0x00000000000e12bc
- (void)setInspectionSuspended:(_Bool)arg1;	// IMP=0x00000000000e126a
- (_Bool)isInspectionSuspended;	// IMP=0x00000000000e1261
- (void)toggleMuted:(id)arg1;	// IMP=0x00000000000e1179
- (void)setAllowsAudioPlayback:(_Bool)arg1;	// IMP=0x00000000000e10ae
- (_Bool)allowsAudioPlayback;	// IMP=0x00000000000e10a2
- (void)setMuted:(_Bool)arg1;	// IMP=0x00000000000e1080
- (_Bool)isMuted;	// IMP=0x00000000000e1074
- (void)changeVolumeToMaximum:(id)arg1;	// IMP=0x00000000000e105a
- (void)changeVolumeToMinimum:(id)arg1;	// IMP=0x00000000000e1045
- (void)decreaseVolume:(id)arg1;	// IMP=0x00000000000e1007
- (void)increaseVolume:(id)arg1;	// IMP=0x00000000000e0fc9
- (void)setVolume:(double)arg1;	// IMP=0x00000000000e0edb
- (double)volume;	// IMP=0x00000000000e0e87
- (void)endPlaybackSuspension;	// IMP=0x00000000000e0d58
- (void)beginPlaybackSuspension;	// IMP=0x00000000000e0c87
- (void)updateAtMinMaxTime;	// IMP=0x00000000000e0c0b
- (void)setLooping:(_Bool)arg1;	// IMP=0x00000000000e0b3d
- (_Bool)isLooping;	// IMP=0x00000000000e0b31
@property(readonly, nonatomic) _Bool isPlayingHDRContent;
@property(nonatomic) _Bool touchBarRequiresLinearPlayback;
- (void)togglePlayback:(id)arg1;	// IMP=0x00000000000e0a02
- (_Bool)canTogglePlayback;	// IMP=0x00000000000e09cb
- (void)pauseForAllCoordinatedPlaybackParticipants:(_Bool)arg1;	// IMP=0x00000000000e08ac
- (void)pause:(id)arg1;	// IMP=0x00000000000e0895
- (_Bool)canPause;	// IMP=0x00000000000e0883
- (void)autoplay:(id)arg1;	// IMP=0x00000000000e06dd
- (void)play:(id)arg1;	// IMP=0x00000000000e0633
- (void)setPlaying:(_Bool)arg1;	// IMP=0x00000000000e04eb
- (_Bool)isPlaying;	// IMP=0x00000000000e04c7
- (_Bool)canPlay;	// IMP=0x00000000000e0490
- (_Bool)canPlayImmediately;	// IMP=0x00000000000e00e4
- (void)_retryPlayImmediatelyIfNeeded;	// IMP=0x00000000000e004b
- (void)setDefaultPlaybackRate:(double)arg1;	// IMP=0x00000000000dff82
- (double)defaultPlaybackRate;	// IMP=0x00000000000dff2e
- (void)setRate:(double)arg1;	// IMP=0x00000000000dfee2
- (void)_setRate_AVFoundationStrategy:(double)arg1;	// IMP=0x00000000000dfe94
- (void)_playAtRate:(double)arg1;	// IMP=0x00000000000dfb8b
- (double)rate;	// IMP=0x00000000000dfb37
- (void)stopUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000dfa3a
- (void)startUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000df946
@property(nonatomic, getter=isAtLiveEdge) _Bool atLiveEdge; // @synthesize atLiveEdge=_atLiveEdge;
- (void)_observeValueForKeyPath:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;	// IMP=0x00000000000ddb4a
- (_Bool)isCompletelySeekable;	// IMP=0x00000000000dd90a
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isReadyToPlay) _Bool readyToPlay;
@property(readonly, nonatomic) long long status;
- (id)_queuePlayer;	// IMP=0x00000000000dd57c
- (void)setObservationInfo:(void *)arg1;	// IMP=0x00000000000dd572
- (void *)observationInfo;	// IMP=0x00000000000dd568
- (struct CGAffineTransform)preferredTransform;	// IMP=0x00000000000dd52a
- (void)startKVO;	// IMP=0x00000000000dce26
- (void)dealloc;	// IMP=0x00000000000dcc2b
- (void)startInspectionIfNeeded;	// IMP=0x00000000000dc889
- (void)_commonInit;	// IMP=0x00000000000dc73f
- (id)initWithPlayer:(id)arg1;	// IMP=0x00000000000dc512
- (id)init;	// IMP=0x00000000000dc427
- (void)_nukeTVExtras;	// IMP=0x000000000004dd28
- (void)_makeTVExtras;	// IMP=0x000000000004dcc0
- (id)tvExtras;	// IMP=0x000000000004dcaf
- (void)_updateNavigationMarkers;	// IMP=0x000000000004db85
- (void)_updatePrimaryNavigationMarkersGroup;	// IMP=0x000000000004da73
- (void)_setPrimaryNavigationMarkersGroup:(id)arg1;	// IMP=0x000000000004da0a
@property(readonly, nonatomic) AVNavigationMarkersGroup *primaryNavigationMarkersGroup;
- (_Bool)isFirstFilteredNavigationGroupChapters;	// IMP=0x000000000004d909
- (_Bool)isFirstUnfilteredNavigationGroupChapters;	// IMP=0x000000000004d89d
- (id)externalChapterNavigationMarkersGroup;	// IMP=0x000000000004d7f7
@property(readonly, nonatomic) NSArray *externalNavigationMarkerGroups;
@property(readonly, nonatomic) AVNavigationMarkersGroup *embeddedChapterNavigationMarkersGroup;
@property(readonly, nonatomic) _Bool isLoadingEmbeddedChapterMarkers;
- (void)_loadEmbeddedChapterNavigationMarkersGroupAsynchronously:(CDUnknownBlockType)arg1;	// IMP=0x000000000004d2a1
- (void)endPlaybackSuspensionTV;	// IMP=0x000000000004d252
- (void)beginPlaybackSuspensionTV;	// IMP=0x000000000004d217
- (_Bool)isCoordinatorSuspended;	// IMP=0x000000000004d1b4
- (void)_resumePlaybackCoordinator;	// IMP=0x000000000004d035
- (void)_suspendPlaybackCoordinatorForReason:(id)arg1;	// IMP=0x000000000004ce99
- (void)setLimitReadAheadIfAllowed:(_Bool)arg1;	// IMP=0x000000000004cdda
- (void)togglePlaybackEvenWhenInBackground:(id)arg1;	// IMP=0x000000000004cc53
- (void)requestNavigateToDate:(id)arg1 fromDate:(id)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000004caac
- (void)requestSeekToDate:(id)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x000000000004c808
- (void)requestNavigateToTime:(double)arg1 fromTime:(double)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 seekCompletion:(CDUnknownBlockType)arg6;	// IMP=0x000000000004bf42
- (void)requestSeekToTime:(double)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x000000000004bbda
- (void)requestPauseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000004bbc0
- (void)requestPauseWithoutAffectingCoordinatedPlaybackWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000004bba9
- (void)requestPauseForAllCoordinatedPlaybackParticipants:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000004b9d4
- (void)requestPlayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000004b739
- (void)requestSeekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004b4bc
- (void)requestSeekToTime:(double)arg1 seekReason:(long long)arg2 permissionHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000004b206
- (CDStruct_1b6d18a9)timeToSeekAfterUserNavigatedFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x000000000004b074
- (void)seekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004aeb7
- (void)gotoEndOfSeekableRanges:(id)arg1;	// IMP=0x000000000004ad63
- (void)seekToTime:(double)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004ab2f
- (void)_setLoadingChapterInfo:(_Bool)arg1;	// IMP=0x000000000004aaaf
- (void)_didRequestSeek;	// IMP=0x000000000004aa3e
- (void)_willRequestSeek;	// IMP=0x000000000004a9cd
- (void)_didEndSeek;	// IMP=0x000000000004a95c
- (void)_willBeginSeek;	// IMP=0x000000000004a8eb
- (_Bool)playerItem:(id)arg1 shouldSeekToTime:(CDStruct_1b6d18a9 *)arg2 toleranceBefore:(CDStruct_1b6d18a9 *)arg3 toleranceAfter:(CDStruct_1b6d18a9 *)arg4;	// IMP=0x000000000004a7ff
@property(readonly, nonatomic) _Bool isSeekingTV;
@property(readonly, nonatomic) long long currentSeekReason;
- (double)displayTimeFromTime:(double)arg1;	// IMP=0x000000000004a6d5
- (double)timeFromDisplayTime:(double)arg1;	// IMP=0x000000000004a67b
@property(readonly, nonatomic) _Bool shouldContinuePlaybackInBackground;
@property(readonly, nonatomic) long long avkitMediaType;
- (void)loadAspectRatio:(CDUnknownBlockType)arg1;	// IMP=0x000000000004a3a1
- (double)bounceBackReturningDisplayTime;	// IMP=0x000000000004a320
@property(readonly, nonatomic) _Bool shouldBounceBackAfterScanForwardPastEndTime;
- (void)updateStartAndEndDates;	// IMP=0x0000000000049985
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) NSDate *exactEndDate;
@property(readonly, nonatomic) NSDate *exactStartDate;
@property(readonly, nonatomic) _Bool canNavigateToBeginning;
@property(readonly, nonatomic) _Bool hasStartAndEndDates;
@property(retain, nonatomic) NSDate *programEndDate;
@property(retain, nonatomic) NSDate *programStartDate;
- (void)setEffectiveRateNonZero:(_Bool)arg1;	// IMP=0x0000000000049482
@property(readonly, nonatomic, getter=isEffectiveRateNonZero) _Bool effectiveRateNonZero;
@property(readonly, nonatomic) double currentDisplayTime;
- (double)playbackEndTime;	// IMP=0x00000000000493c0
@property(readonly, nonatomic) double displayedDuration;
@property(readonly, nonatomic) double longestSeekableDurationSeenForCurrentItem;
@property(readonly, nonatomic, getter=isLiveStreamEventModePossible) _Bool liveStreamEventModePossible;
@property(readonly, nonatomic) _Bool isContentDurationIndefinite;
@property(readonly, nonatomic) double contentDurationCached;
@property(readonly, nonatomic) AVTimeRange *displayTimeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNonLivePlayback;
@property(readonly, nonatomic) AVTimeRange *timeRangeSeekable;
@property(readonly, nonatomic) AVPlayerItem *currentItem;
@property(readonly, nonatomic) _Bool hasMoreEnqueuedContent;
- (void)setActivePlaying:(_Bool)arg1;	// IMP=0x00000000000487ee
- (_Bool)isActivePlaying;	// IMP=0x00000000000487a9
- (float)_activeRate;	// IMP=0x00000000000485db
- (_Bool)isPrimaryPlayerWaitingForInterstitial;	// IMP=0x00000000000484b6
@property(readonly, nonatomic) AVQueuePlayer *queuePlayer;
- (_Bool)linearPlaybackRequiredByInterstitial:(id)arg1;	// IMP=0x00000000000483ab
@property(readonly, nonatomic) AVInterstitialController *interstitialController;
@property(retain, nonatomic) AVDelegateManager *delegateManager;
- (id)kvoPlayerItem;	// IMP=0x000000000004821b
- (id)kvoPlayer;	// IMP=0x00000000000481cb
- (void)_durationDidChange;	// IMP=0x000000000004806e
- (void)updateTimeRanges;	// IMP=0x0000000000047d2b
- (void)invalidateTV;	// IMP=0x0000000000047b2e
- (id)initWithTVPlayer:(id)arg1;	// IMP=0x0000000000047719
- (void)setClientSpecifiedDate:(id)arg1;	// IMP=0x00000000000476b0
- (id)clientSpecifiedDate;	// IMP=0x0000000000047660
- (void)updateAudioFormats;	// IMP=0x00000000000877d3
- (void)updateVideoResolutionAndRange;	// IMP=0x0000000000087665
- (void)_updateVideoResolutionAndRange;	// IMP=0x0000000000087081
- (id)_audioAssetTracks;	// IMP=0x0000000000086de9
- (id)_videoAssetTracks;	// IMP=0x0000000000086b51
@property(readonly, nonatomic) struct CGSize maximumVideoResolution;
- (id)preferredDisplayCriteria;	// IMP=0x00000000000ee111
@property(readonly, nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;
@property(nonatomic) _Bool handlesAudioSessionInterruptions;
- (_Bool)avkit_isAVPlayerControllerOrSubclass;	// IMP=0x00000000000ee202
- (id)_playableLegibleMediaSelectionOptions;	// IMP=0x00000000001803f0
- (id)_languageCodesFromLanguageIdentifiers:(id)arg1;	// IMP=0x00000000001801c6
- (id)_preferredLanguageCodes;	// IMP=0x00000000001800ab
- (_Bool)_willAutomaticallySelectLegibleFallbackForLanguageMismatch;	// IMP=0x000000000017fd9c
- (void)_setMostRecentChosenOption:(id)arg1;	// IMP=0x000000000017fc7b
- (_Bool)_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup;	// IMP=0x000000000017fb86
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1;	// IMP=0x000000000017fa7e
- (void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2;	// IMP=0x000000000017f70d
- (void)setMediaOptionCriteriaAlwaysOn:(_Bool)arg1;	// IMP=0x000000000017f19d
- (void)setCurrentAssetMediaOption:(id)arg1;	// IMP=0x000000000017f0c3
- (_Bool)subtitlesActive;	// IMP=0x000000000017ef72
- (_Bool)setLegibleMediaOptionVisibility:(_Bool)arg1 prefersLastKnownCaptionType:(_Bool)arg2 prefersSystemLanguage:(_Bool)arg3;	// IMP=0x000000000017e43e
- (void)_enableAutoMediaSelection:(id)arg1;	// IMP=0x000000000017e303
- (void)_disableLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x000000000017e24d
- (void)_performAutomaticMediaSelectionForUserCaptionDisplayType:(long long)arg1;	// IMP=0x000000000017e182
- (void)_ensureUserCaptionDisplayType:(long long)arg1;	// IMP=0x000000000017e09a
- (_Bool)isDisplayingNonForcedOnlyLegibleOption;	// IMP=0x000000000017e035
- (id)legibleOptions;	// IMP=0x000000000017d431
- (id)audioOptions;	// IMP=0x000000000017d092
- (id)visualOptions;	// IMP=0x000000000017ce36
- (void)reloadVisualOptions;	// IMP=0x000000000017cdea
- (void)reloadLegibleOptions;	// IMP=0x000000000017cd2f
- (void)reloadAudioOptions;	// IMP=0x000000000017cc9d
- (void)reloadOptionsAssumingMediaOptionsMayHaveChanged:(_Bool)arg1;	// IMP=0x000000000017cad5
- (void)reloadOptionsAndCurrentSelections;	// IMP=0x000000000017cabe
- (void)reloadOptions;	// IMP=0x000000000017caaa
- (void)selectedMediaOptionMayHaveChanged:(_Bool)arg1;	// IMP=0x000000000017c434
- (void)selectedMediaOptionMayHaveChanged;	// IMP=0x000000000017c420
- (id)_optionsForGroup:(id)arg1;	// IMP=0x000000000017c40b
- (id)mediaSelectionGroupForMediaCharacteristic:(id)arg1;	// IMP=0x000000000017c391
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;	// IMP=0x000000000017c255
- (id)currentLegibleMediaSelectionOption;	// IMP=0x000000000017bef6
- (void)setLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x000000000017be21
- (id)legibleMediaSelectionOptions;	// IMP=0x000000000017be13
- (_Bool)hasLegibleMediaSelectionOptions;	// IMP=0x000000000017bdcb
@property(retain, nonatomic) AVMediaSelectionOption *currentVideoMediaSelectionOption; // @dynamic currentVideoMediaSelectionOption;
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;	// IMP=0x000000000017bc2c
- (id)currentAudioMediaSelectionOption;	// IMP=0x000000000017bba1
- (void)setVisualMediaSelectionOptions:(id)arg1;	// IMP=0x000000000017bacc
- (void)setAudioMediaSelectionOptions:(id)arg1;	// IMP=0x000000000017b9f7
@property(readonly, nonatomic) NSArray *visualMediaSelectionOptions; // @dynamic visualMediaSelectionOptions;
- (id)audioMediaSelectionOptions;	// IMP=0x000000000017b9db
- (void)setLegibleMediaSelectionOptions:(id)arg1 audioMediaSelectionOptions:(id)arg2 assumeMediaOptionMayHaveChanged:(_Bool)arg3;	// IMP=0x000000000017b900
- (_Bool)hasAudioMediaSelectionOptions;	// IMP=0x000000000017b8b7
- (_Bool)hasMediaSelectionOptions;	// IMP=0x000000000017b87e
- (_Bool)closedCaptionsEnabled;	// IMP=0x000000000017b86e

@end

