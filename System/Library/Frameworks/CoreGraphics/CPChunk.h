//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface CPChunk
{
    struct CGRect bounds;	// 48 = 0x30
    _Bool shrinksWithChildren;	// 80 = 0x50
    _Bool dirtyBounds;	// 81 = 0x51
    unsigned int position;	// 84 = 0x54
    long long insertionOrder;	// 88 = 0x58
}

+ (float)chooseReferenceFontSizeFrom:(float)arg1 and:(float)arg2;	// IMP=0x00600000003e6ca2
- (double)rotationAngle;	// IMP=0x00000000003e6c57
- (void)setChunkPosition:(unsigned int)arg1;	// IMP=0x00000000003e6c47
- (unsigned int)chunkPosition;	// IMP=0x00000000003e6c37
- (void)translateObjectYBy:(double)arg1;	// IMP=0x00000000003e6c1e
- (_Bool)intersectsChild:(struct CGRect)arg1;	// IMP=0x00000000003e6b63
- (void)setShrinksWithChildren:(_Bool)arg1;	// IMP=0x00000000003e6b53
- (_Bool)shrinksWithChildren;	// IMP=0x00000000003e6b43
- (_Bool)boundsEqualsRect:(struct CGRect)arg1 accuracy:(double)arg2;	// IMP=0x00000000003e6aa6
- (_Bool)geometricallyContains:(id)arg1;	// IMP=0x00000000003e6924
- (_Bool)overlapsVerticallyWith:(id)arg1;	// IMP=0x00000000003e6754
- (_Bool)overlapsHorizontallyWith:(id)arg1;	// IMP=0x00000000003e66ca
- (void)orderedInsert:(id)arg1 usingSelector:(SEL)arg2;	// IMP=0x00000000003e662d
- (int)clusterLevelHint;	// IMP=0x00000000003e6625
- (struct CGSize)advance;	// IMP=0x00000000003e660c
- (float)fontSize;	// IMP=0x00000000003e6603
- (double)bottom;	// IMP=0x00000000003e656d
- (double)top;	// IMP=0x00000000003e64b9
- (double)center;	// IMP=0x00000000003e6479
- (double)right;	// IMP=0x00000000003e63ca
- (double)left;	// IMP=0x00000000003e6335
- (long long)compareChunkPosition:(id)arg1;	// IMP=0x00000000003e62eb
- (long long)compareYDescendingX:(id)arg1;	// IMP=0x00000000003e6255
- (long long)compareYDescending:(id)arg1;	// IMP=0x00000000003e61fd
- (long long)compareTopDescending:(id)arg1;	// IMP=0x00000000003e61a5
- (long long)compareYBounds:(id)arg1;	// IMP=0x00000000003e60f8
- (long long)compareY:(id)arg1;	// IMP=0x00000000003e6089
- (long long)compareLinearBounds:(id)arg1;	// IMP=0x00000000003e5fab
- (long long)compareXBounds:(id)arg1;	// IMP=0x00000000003e5f3d
- (long long)compareZDescending:(id)arg1;	// IMP=0x00000000003e5eef
- (long long)compareZ:(id)arg1;	// IMP=0x00000000003e5ea5
- (long long)compareInsertionOrder:(id)arg1;	// IMP=0x00000000003e5e5b
- (long long)compareX:(id)arg1;	// IMP=0x00000000003e5e49
- (long long)compareAnchorYDescending:(id)arg1;	// IMP=0x00000000003e5df1
- (long long)compareAnchorX:(id)arg1;	// IMP=0x00000000003e5ddf
- (long long)compareCommonAnchorX:(id)arg1;	// IMP=0x00000000003e5d80
- (long long)compareAnchorY:(id)arg1;	// IMP=0x00000000003e5d21
- (void)sortUsingSelector:(SEL)arg1;	// IMP=0x00000000003e5d0b
- (long long)insertionOrder;	// IMP=0x00000000003e5cfa
- (void)setInsertionOrder:(long long)arg1;	// IMP=0x00000000003e5cdf
- (void)resizeWith:(id)arg1;	// IMP=0x00000000003e5aed
- (void)fitBoundsToChildren;	// IMP=0x00000000003e588c
- (float)referenceAdvanceWidth;	// IMP=0x00000000003e5858
- (float)absoluteGapTo:(id)arg1;	// IMP=0x00000000003e57b5
- (float)advanceDeltaAfterSpace;	// IMP=0x00000000003e57ac
- (float)clusterGapTo:(id)arg1;	// IMP=0x00000000003e5735
- (struct CGPoint)anchor;	// IMP=0x00000000003e571d
- (void)setAnchor:(struct CGPoint)arg1;	// IMP=0x00000000003e5717
- (id)describeBounds;	// IMP=0x00000000003e56d4
- (struct CGRect)renderedBounds;	// IMP=0x00000000003e5472
- (struct CGRect)adjustToPointBoundary:(struct CGRect)arg1;	// IMP=0x00000000003e5350
- (struct CGRect)bounds;	// IMP=0x00000000003e5305
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000003e52dc
- (void)setChildren:(id)arg1;	// IMP=0x00000000003e5239
- (id)newTakeChildrenAmong:(id)arg1;	// IMP=0x00000000003e51d1
- (id)newTakeChildren;	// IMP=0x00000000003e5172
- (void)removeAll;	// IMP=0x00000000003e5113
- (void)remove:(id)arg1;	// IMP=0x00000000003e50ca
- (void)addChildrenOf:(id)arg1;	// IMP=0x00000000003e5089
- (void)add:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x00000000003e5019
- (void)add:(id)arg1;	// IMP=0x00000000003e4fa9
- (float)opticalLeading;	// IMP=0x00000000003e4fa0
- (void)accept:(id)arg1;	// IMP=0x00000000003e4f85
- (id)copyAndSplitChildrenAtIndex:(unsigned int)arg1;	// IMP=0x00000000003e4eeb
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000003e4ebc
- (id)init;	// IMP=0x00000000003e4e5f

@end

