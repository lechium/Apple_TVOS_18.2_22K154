//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAudioSession, NSString;

__attribute__((visibility("hidden")))
@interface AVVCSessionManager : NSObject
{
    _Bool mShouldDuckOthers;	// 8 = 0x8
    _Bool mIsMiniDuckingEnabled;	// 9 = 0x9
    _Bool mShouldEnableMiniDucking;	// 10 = 0xa
    _Bool mShouldDisableMiniDucking;	// 11 = 0xb
    _Bool mSessionNeedsVolumeControl;	// 12 = 0xc
    _Bool mSessionNeedsRoutingControl;	// 13 = 0xd
    _Bool mSessionOutputIsWirelessSplitter;	// 14 = 0xe
    _Bool mIsOtherAudioPlaying;	// 15 = 0xf
    _Bool mRouteHasDoAPSupport;	// 16 = 0x10
    _Bool mOutputSupportsSWVolume;	// 17 = 0x11
    _Bool mDeviceIsIOSAccessory;	// 18 = 0x12
    _Bool mDeviceIsOlderWatch;	// 19 = 0x13
    unsigned int mSessionActivationOptions;	// 20 = 0x14
    struct recursive_mutex mSessionManagerLock;	// 24 = 0x18
    unsigned long long mPreviousHardwareControlFlags;	// 88 = 0x58
    long long mPreviousActivationMode;	// 96 = 0x60
    NSString *mPreviousActivationDeviceUID;	// 104 = 0x68
    NSString *mPreviousSessionCategory;	// 112 = 0x70
    NSString *mPreviousSessionMode;	// 120 = 0x78
    unsigned long long mPreviousSessionCategoryOptions;	// 128 = 0x80
    int mPreviousIOBufferFrameSize;	// 136 = 0x88
    _Bool _isPrimary;	// 140 = 0x8c
    _Bool _clientRequestsRecording;	// 141 = 0x8d
    _Bool _forceGetSessionProperties;	// 142 = 0x8e
    int _sessionState;	// 144 = 0x90
    float _deviceGain;	// 148 = 0x94
    long long _reporterID;	// 152 = 0x98
    double _inputLatency;	// 160 = 0xa0
    double _outputLatency;	// 168 = 0xa8
    double _inputSafetyOffset;	// 176 = 0xb0
    double _outputSafetyOffset;	// 184 = 0xb8
    double _outputVolume;	// 192 = 0xc0
    AVAudioSession *_audioSession;	// 200 = 0xc8
    NSString *_playbackRoute;	// 208 = 0xd0
}

- (id).cxx_construct;	// IMP=0x00000000000d731e
- (void).cxx_destruct;	// IMP=0x00000000000d72c6
@property(nonatomic) _Bool forceGetSessionProperties; // @synthesize forceGetSessionProperties=_forceGetSessionProperties;
@property(retain, nonatomic) NSString *playbackRoute; // @synthesize playbackRoute=_playbackRoute;
@property(nonatomic) float deviceGain; // @synthesize deviceGain=_deviceGain;
@property(nonatomic) _Bool clientRequestsRecording; // @synthesize clientRequestsRecording=_clientRequestsRecording;
@property(readonly, nonatomic) _Bool isPrimary; // @synthesize isPrimary=_isPrimary;
@property(retain, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
- (_Bool)isCurrentInputBuiltInMic;	// IMP=0x00000000000d7049
- (_Bool)setPrefersBeingInterruptedByNextActiveRecordingClient:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d6e87
- (_Bool)setMicrophoneAttribution:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d6ab9
- (_Bool)isInputAvailable;	// IMP=0x00000000000d681d
- (_Bool)isSWVolumeSupportedOnPickedRoute;	// IMP=0x00000000000d666f
- (_Bool)setDuckToLevelScalar:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000d64f6
- (_Bool)setDuckToLevelDB:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000d637d
- (long long)inputNumberOfChannels;	// IMP=0x00000000000d61cd
- (_Bool)setRecordingFromRemoteInput:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d5df1
- (void)removeSessionNotifications:(id)arg1;	// IMP=0x00000000000d5c5a
- (void)setupSessionNotifications:(id)arg1;	// IMP=0x00000000000d5aa5
- (id)getActiveSessionDisplayIDsAsString;	// IMP=0x00000000000d597b
- (unsigned int)getOpaqueSessionID;	// IMP=0x00000000000d57d0
- (_Bool)setActive:(_Bool)arg1 withOptions:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000d55e8
- (_Bool)setActivationContext:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000d5406
- (_Bool)getSiriInputSource:(unsigned long long *)arg1 withIdentifier:(id *)arg2 withIsMicrophoneCheck:(_Bool *)arg3 forActivationMode:(long long)arg4;	// IMP=0x00000000000d5292
- (id)siriRemoteInputIdentifier;	// IMP=0x00000000000d5173
- (unsigned long long)siriInputSource;	// IMP=0x00000000000d4f8c
- (id)sessionCurrentInputRoutes;	// IMP=0x00000000000d4e6d
- (id)sessionCurrentOutputRoutes;	// IMP=0x00000000000d4d4e
- (id)pickedRoute;	// IMP=0x00000000000d4c16
- (id)currentRoute;	// IMP=0x00000000000d4b4a
- (_Bool)setPreferredSampleRate:(double)arg1 error:(id *)arg2;	// IMP=0x00000000000d4977
- (_Bool)setIAmTheAssistant:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d47b7
@property(readonly) long long reporterID; // @synthesize reporterID=_reporterID;
- (_Bool)setAudioHardwareControlFlags:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000d4431
- (_Bool)isSessionInSiriCategory;	// IMP=0x00000000000d427f
- (_Bool)isSessionInSiriCategoryModeAndOptions:(unsigned int)arg1;	// IMP=0x00000000000d3f85
- (_Bool)clearInputPreferences:(id *)arg1;	// IMP=0x00000000000d3dd0
- (_Bool)setCategory:(id)arg1 mode:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4 error:(id *)arg5;	// IMP=0x00000000000d3ba8
- (_Bool)setCategory:(id)arg1 mode:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00000000000d3988
- (double)speechDetectionDeviceSampleRate;	// IMP=0x00000000000d37d1
@property(readonly, nonatomic) double outputVolume; // @synthesize outputVolume=_outputVolume;
@property(readonly, nonatomic) double inputSafetyOffset; // @synthesize inputSafetyOffset=_inputSafetyOffset;
@property(readonly, nonatomic) double outputSafetyOffset; // @synthesize outputSafetyOffset=_outputSafetyOffset;
@property(readonly, nonatomic) double outputLatency; // @synthesize outputLatency=_outputLatency;
@property(readonly, nonatomic) double inputLatency; // @synthesize inputLatency=_inputLatency;
- (_Bool)setEnableBTTriangleMode:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d2d6b
- (_Bool)getForceGetSessionProperties;	// IMP=0x00000000000d2d10
- (id)getPlaybackRoute;	// IMP=0x00000000000d2c2e
- (float)getDeviceGain;	// IMP=0x00000000000d2b1a
- (_Bool)getClientRequestsRecording;	// IMP=0x00000000000d2a40
- (_Bool)isSessionActive;	// IMP=0x00000000000d2973
@property(nonatomic) int sessionState; // @synthesize sessionState=_sessionState;
- (void)setSessionStateWithoutLock:(int)arg1;	// IMP=0x00000000000d2798
- (_Bool)deactivateAudioSessionWithOptions:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x00000000000d20bf
- (_Bool)activateAudioSessionWithPrewarm:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d199e
- (_Bool)isAirplayOneOfTheOutputRoutes:(id)arg1;	// IMP=0x00000000000d1694
- (int)enableSmartRoutingConsideration:(_Bool)arg1;	// IMP=0x00000000000d152e
- (void)setSessionActivationOptions:(unsigned int)arg1;	// IMP=0x00000000000d14c6
- (unsigned int)getSessionActivationOptions;	// IMP=0x00000000000d1471
- (_Bool)isSessionOutputInWirelessSplitterMode;	// IMP=0x00000000000d141a
- (_Bool)setDuckingFadeOutDuration:(id)arg1 fadeInDuration:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000d107c
- (_Bool)setDuckOthers:(id)arg1 mixWithOthers:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000d0af8
- (void)changeDuckOthersOption:(_Bool)arg1;	// IMP=0x00000000000d0a90
- (int)setSessionBufferSize:(int)arg1;	// IMP=0x00000000000d05d7
- (int)setSessionSampleRateForActivationMode:(long long)arg1;	// IMP=0x00000000000cfe9f
- (int)setSessionAudioHWControlFlagsForActivationMode:(long long)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x00000000000cea63
- (int)setSessionCategoryModeOptionsForActivationMode:(long long)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x00000000000cd7dc
- (void)getHypotheticalRouteAndUpdateStates;	// IMP=0x00000000000cd7b8
- (_Bool)isMiniDuckingEnabled;	// IMP=0x00000000000cd763
- (void)shouldEnableMiniDucking:(_Bool)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x00000000000cd65e
- (int)setSessionActivationContext:(id)arg1;	// IMP=0x00000000000cceef
- (int)setupOneTimeSessionSettingsForClient:(long long)arg1;	// IMP=0x00000000000cc505
- (void)dealloc;	// IMP=0x00000000000cc4a0
- (id)initWithSession:(id)arg1;	// IMP=0x00000000000cc2b9

@end

