//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSDictionary, NSString, NSUndoManager, UIGestureRecognizer, UITapGestureRecognizer, UITextInputAssistantItem, UITextInputPasswordRules, UITextInputTraits, UITextPosition, UITextRange, UIView, UIWKTextInteractionAssistant, WKBrowsingContextController, WKDateTimeInputControl, WKFormAccessoryView, WKFormSelectControl, WKTouchEventsGestureRecognizer;
@protocol UITextInputDelegate, UITextInputTokenizer, WKFormControl;

__attribute__((visibility("hidden")))
@interface WKContentView
{
    struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> _page;	// 8 = 0x8
    struct WeakObjCPtr<WKWebView> _webView;	// 16 = 0x10
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForImmediatelyResettableGestures;	// 24 = 0x18
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForDelayedResettableGestures;	// 32 = 0x20
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForSyntheticTapGestures;	// 40 = 0x28
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForImmediatelyResettableGestures;	// 48 = 0x30
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForDelayedResettableGestures;	// 56 = 0x38
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForSyntheticTapGestures;	// 64 = 0x40
    struct RetainPtr<WKDeferringGestureRecognizer> _touchMoveDeferringGestureRecognizer;	// 72 = 0x48
    struct optional<WTF::HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>>> _failedTouchStartDeferringGestures;	// 80 = 0x50
    struct unique_ptr<WebKit::GestureRecognizerConsistencyEnforcer, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> _gestureRecognizerConsistencyEnforcer;	// 96 = 0x60
    struct RetainPtr<WKTouchEventsGestureRecognizer> _touchEventGestureRecognizer;	// 104 = 0x68
    _Bool _touchEventsCanPreventNativeGestures;	// 112 = 0x70
    _Bool _preventsPanningInXAxis;	// 113 = 0x71
    _Bool _preventsPanningInYAxis;	// 114 = 0x72
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _singleTapGestureRecognizer;	// 120 = 0x78
    struct RetainPtr<WKHighlightLongPressGestureRecognizer> _highlightLongPressGestureRecognizer;	// 128 = 0x80
    struct RetainPtr<UILongPressGestureRecognizer> _longPressGestureRecognizer;	// 136 = 0x88
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _doubleTapGestureRecognizer;	// 144 = 0x90
    struct RetainPtr<UITapGestureRecognizer> _nonBlockingDoubleTapGestureRecognizer;	// 152 = 0x98
    struct RetainPtr<UITapGestureRecognizer> _doubleTapGestureRecognizerForDoubleClick;	// 160 = 0xa0
    struct RetainPtr<UITapGestureRecognizer> _twoFingerDoubleTapGestureRecognizer;	// 168 = 0xa8
    struct RetainPtr<UITapGestureRecognizer> _twoFingerSingleTapGestureRecognizer;	// 176 = 0xb0
    struct RetainPtr<WKScrollViewTrackingTapGestureRecognizer> _keyboardDismissalGestureRecognizer;	// 184 = 0xb8
    struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> _inspectorNodeSearchGestureRecognizer;	// 192 = 0xc0
    struct RetainPtr<WKTouchActionGestureRecognizer> _touchActionGestureRecognizer;	// 200 = 0xc8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionLeftSwipeGestureRecognizer;	// 208 = 0xd0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionRightSwipeGestureRecognizer;	// 216 = 0xd8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionUpSwipeGestureRecognizer;	// 224 = 0xe0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionDownSwipeGestureRecognizer;	// 232 = 0xe8
    struct RetainPtr<WKTextInteractionWrapper> _textInteractionWrapper;	// 240 = 0xf0
    struct OptionSet<WebKit::SuppressSelectionAssistantReason> _suppressSelectionAssistantReasons;	// 248 = 0xf8
    struct RetainPtr<UITextInputTraits> _legacyTextInputTraits;	// 256 = 0x100
    struct RetainPtr<WKExtendedTextInputTraits> _extendedTextInputTraits;	// 264 = 0x108
    struct RetainPtr<WKFormAccessoryView> _formAccessoryView;	// 272 = 0x110
    struct RetainPtr<WKTapHighlightView> _tapHighlightView;	// 280 = 0x118
    struct RetainPtr<UIView> _interactionViewsContainerView;	// 288 = 0x120
    RetainPtr_f11d553d _contextMenuHintContainerView;	// 296 = 0x128
    struct WeakObjCPtr<UIScrollView> _scrollViewForTargetedPreview;	// 304 = 0x130
    struct CGPoint _scrollViewForTargetedPreviewInitialOffset;	// 312 = 0x138
    RetainPtr_f11d553d _dragPreviewContainerView;	// 328 = 0x148
    RetainPtr_f11d553d _dropPreviewContainerView;	// 336 = 0x150
    struct RetainPtr<NSString> _markedText;	// 344 = 0x158
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;	// 352 = 0x160
    struct RetainPtr<WKFormInputSession> _formInputSession;	// 360 = 0x168
    struct RetainPtr<WKFileUploadPanel> _fileUploadPanel;	// 368 = 0x170
    struct FrameInfoData _frameInfoForFileUploadPanel;	// 376 = 0x178
    struct RetainPtr<UIGestureRecognizer> _previewGestureRecognizer;	// 672 = 0x2a0
    struct RetainPtr<UIGestureRecognizer> _previewSecondaryGestureRecognizer;	// 680 = 0x2a8
    struct Vector<bool, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _focusStateStack;	// 688 = 0x2b0
    UIGestureRecognizer *_cachedTextInteractionLoupeGestureRecognizer;	// 704 = 0x2c0
    UIGestureRecognizer *_cachedTextInteractionTapGestureRecognizer;	// 712 = 0x2c8
    struct RefPtr<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>, WTF::DefaultRefDerefTraits<WebCore::TextIndicator>> _textIndicator;	// 720 = 0x2d0
    struct RetainPtr<WebTextIndicatorLayer> _textIndicatorLayer;	// 728 = 0x2d8
    _Bool _isDisplayingContextMenuWithAnimation;	// 736 = 0x2e0
    struct RetainPtr<UITargetedPreview> _contextMenuInteractionTargetedPreview;	// 744 = 0x2e8
    struct unique_ptr<WebKit::SmartMagnificationController, std::default_delete<WebKit::SmartMagnificationController>> _smartMagnificationController;	// 752 = 0x2f0
    struct WeakObjCPtr<id<UITextInputDelegate>> _inputDelegate;	// 760 = 0x2f8
    struct Markable<WTF::ObjectIdentifierGeneric<WebKit::TapIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebKit::TapIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits> _latestTapID;	// 768 = 0x300
    struct TapHighlightInformation _tapHighlightInformation;	// 776 = 0x308
    struct WebAutocorrectionContext _lastAutocorrectionContext;	// 840 = 0x348
    struct WKAutoCorrectionData _autocorrectionData;	// 888 = 0x378
    // Error: parsing type: '{InteractionInformationAtPosition="request"{InteractionInformationRequest="point"{IntPoint="m_x"i"m_y"i}"includeSnapshot"B"includeLinkIndicator"B"includeCaretContext"B"includeHasDoubleClickHandler"B"includeImageData"B"gatherAnimations"B"linkIndicatorShouldHaveLegacyMargins"B}"canBeValid"B"nodeAtPositionHasDoubleClickHandler"{optional<bool>=""(?="__null_state_"c"__val_"B)"__engaged_"B}"selectability"C"isSelected"B"prefersDraggingOverTextSelection"B"isNearMarkedText"B"touchCalloutEnabled"B"isLink"B"isImage"B"isAttachment"B"isAnimatedImage"B"isAnimating"B"canShowAnimationControls"B"isPausedVideo"B"isElement"B"isContentEditable"B"containerScrollingNodeID"{Markable<WebCore::ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>, WebCore::ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>::MarkableTraits>="m_value"{ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>="m_object"{ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}}}"preventTextInteraction"B"elementContainsImageOverlay"B"shouldNotUseIBeamInEditableContent"B"isImageOverlayText"B"isVerticalWritingMode"B"adjustedPointForNodeRespondingToClickEvents"{FloatPoint="m_x"f"m_y"f}"url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_hasOpaquePath"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_hasOpaquePath"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"idAttribute"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"bounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"image"{RefPtr<WebCore::ShareableBitmap, WTF::RawPtrTraits<WebCore::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebCore::ShareableBitmap>>="m_ptr"^{ShareableBitmap}}"textBefore"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"textAfter"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"caretLength"f"lineCaretExtent"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"cursor"{optional<WebCore::Cursor>=""(?="__null_state_"c"__val_"{Cursor="m_type"C"m_image"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"m_hotSpot"{IntPoint="m_x"i"m_y"i}"m_platformCursor"^v})"__engaged_"B}"linkIndicator"{TextIndicatorData="selectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textBoundingRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"contentImageWithoutSelectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textRectsInBoundingRectCoordinates"{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FloatRect}"m_capacity"I"m_size"I}"contentImageScaleFactor"f"contentImageWithHighlight"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImageWithoutSelection"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImage"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"estimatedBackgroundColor"{Color="m_colorAndFlags"Q}"presentationTransition"C"options"{OptionSet<WebCore::TextIndicatorOption>="m_storage"S}}"elementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{Markable<WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>="m_value"{ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>="m_identifier"Q}}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}}"elementIdentifier"{Markable<WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>="m_value"{ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>="m_identifier"Q}}})"__engaged_"B}"hostImageOrVideoElementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{Markable<WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>="m_value"{ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>="m_identifier"Q}}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}}"elementIdentifier"{Markable<WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>="m_value"{ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>="m_identifier"Q}}})"__engaged_"B}}', name: _positionInformation
    struct optional<WebCore::TextIndicatorData> _positionInformationLinkIndicator;	// 1552 = 0x610
    // Error: parsing type: '{FocusedElementInformation="interactionRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"elementContext"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{Markable<WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>="m_value"{ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>="m_identifier"Q}}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}}"elementIdentifier"{Markable<WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>="m_value"{ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>="m_identifier"Q}}}"lastInteractionLocation"{IntPoint="m_x"i"m_y"i}"minimumScaleFactor"d"maximumScaleFactor"d"maximumScaleFactorIgnoringAlwaysScalable"d"nodeFontSize"d"hasNextNode"B"nextNodeRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"hasPreviousNode"B"previousNodeRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"isAutocorrect"B"isRTL"B"isMultiSelect"B"isReadOnly"B"allowsUserScaling"B"allowsUserScalingIgnoringAlwaysScalable"B"insideFixedPosition"B"hasPlainText"B"autocapitalizeType"C"elementType"C"inputMode"C"enterKeyHint"C"formAction"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"selectOptions"{Vector<WebKit::OptionItem, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{OptionItem}"m_capacity"I"m_size"I}"selectedIndex"i"value"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"valueAsNumber"d"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"acceptsAutofilledLoginCredentials"B"isAutofillableUsernameField"B"representingPageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_hasOpaquePath"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"autofillFieldName"C"nonAutofillCredentialType"B"placeholder"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"label"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"ariaLabel"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"hasSuggestions"B"isFocusingWithDataListDropdown"B"colorValue"{Color="m_colorAndFlags"Q}"suggestedColors"{Vector<WebCore::Color, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{Color}"m_capacity"I"m_size"I}"hasEverBeenPasswordField"B"shouldSynthesizeKeyEventsForEditing"B"isSpellCheckingEnabled"B"isWritingSuggestionsEnabled"B"shouldAvoidResizingWhenInputViewBoundsChange"B"shouldAvoidScrollingWhenFocusedContentIsVisible"B"shouldUseLegacySelectPopoverDismissalBehaviorInDataActivation"B"isFocusingWithValidationMessage"B"preventScroll"B"identifier"{MonotonicObjectIdentifier<WebKit::FocusedElementInformationIdentifierType>="m_identifier"Q}"containerScrollingNodeID"{Markable<WebCore::ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>, WebCore::ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>::MarkableTraits>="m_value"{ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>="m_object"{ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}}}"frameID"{ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::FrameIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>="m_object"{ObjectIdentifierGeneric<WebCore::FrameIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>="m_identifier"Q}}}', name: _focusedElementInformation
    struct RetainPtr<NSObject<WKFormPeripheral>> _inputPeripheral;	// 2096 = 0x830
    struct Vector<WebKit::KeyEventAndCompletionBlock, 1UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _keyWebEventHandlers;	// 2104 = 0x838
    struct CGPoint _lastInteractionLocation;	// 2136 = 0x858
    struct MonotonicObjectIdentifier<WebKit::TransactionIDType> _layerTreeTransactionIdAtLastInteractionStart;	// 2152 = 0x868
    struct WKSelectionDrawingInfo _lastSelectionDrawingInfo;	// 2160 = 0x870
    struct RetainPtr<WKTextRange> _cachedSelectedTextRange;	// 2224 = 0x8b0
    struct optional<WebKit::InteractionInformationRequest> _lastOutstandingPositionInformationRequest;	// 2232 = 0x8b8
    unsigned long long _positionInformationCallbackDepth;	// 2256 = 0x8d0
    struct Vector<std::optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)>>>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _pendingPositionInformationHandlers;	// 2264 = 0x8d8
    OptionSet_6e890478 _inputViewUpdateDeferralSources;	// 2280 = 0x8e8
    struct RetainPtr<WKKeyboardScrollViewAnimator> _keyboardScrollingAnimator;	// 2288 = 0x8f0
    struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterEditorStateUpdate;	// 2296 = 0x8f8
    struct RetainPtr<UIView<WKFormControl>> _dataListTextSuggestionsInputView;	// 2312 = 0x908
    struct RetainPtr<NSArray<UITextSuggestion *>> _dataListTextSuggestions;	// 2320 = 0x910
    struct WeakObjCPtr<WKDataListSuggestionsControl> _dataListSuggestionsControl;	// 2328 = 0x918
    struct RefPtr<WebKit::RevealFocusedElementDeferrer, WTF::RawPtrTraits<WebKit::RevealFocusedElementDeferrer>, WTF::DefaultRefDerefTraits<WebKit::RevealFocusedElementDeferrer>> _revealFocusedElementDeferrer;	// 2336 = 0x920
    _Bool _isEditable;	// 2344 = 0x928
    _Bool _hasValidPositionInformation;	// 2345 = 0x929
    _Bool _isTapHighlightIDValid;	// 2346 = 0x92a
    _Bool _isTapHighlightFading;	// 2347 = 0x92b
    _Bool _potentialTapInProgress;	// 2348 = 0x92c
    _Bool _isDoubleTapPending;	// 2349 = 0x92d
    _Bool _longPressCanClick;	// 2350 = 0x92e
    _Bool _hasTapHighlightForPotentialTap;	// 2351 = 0x92f
    _Bool _selectionNeedsUpdate;	// 2352 = 0x930
    _Bool _shouldRestoreSelection;	// 2353 = 0x931
    _Bool _usingGestureForSelection;	// 2354 = 0x932
    _Bool _usingMouseDragForSelection;	// 2355 = 0x933
    _Bool _inspectorNodeSearchEnabled;	// 2356 = 0x934
    _Bool _isChangingFocusUsingAccessoryTab;	// 2357 = 0x935
    _Bool _didAccessoryTabInitiateFocus;	// 2358 = 0x936
    _Bool _isExpectingFastSingleTapCommit;	// 2359 = 0x937
    _Bool _showDebugTapHighlightsForFastClicking;	// 2360 = 0x938
    _Bool _textInteractionDidChangeFocusedElement;	// 2361 = 0x939
    _Bool _treatAsContentEditableUntilNextEditorStateUpdate;	// 2362 = 0x93a
    _Bool _isWaitingOnPositionInformation;	// 2363 = 0x93b
    _Bool _autocorrectionContextNeedsUpdate;	// 2364 = 0x93c
    unsigned int _commitPotentialTapPointerId;	// 2368 = 0x940
    _Bool _keyboardDidRequestDismissal;	// 2372 = 0x944
    _Bool _isKeyboardScrollingAnimationRunning;	// 2373 = 0x945
    _Bool _candidateViewNeedsUpdate;	// 2374 = 0x946
    _Bool _seenHardwareKeyDownInNonEditableElement;	// 2375 = 0x947
    _Bool _becomingFirstResponder;	// 2376 = 0x948
    _Bool _resigningFirstResponder;	// 2377 = 0x949
    _Bool _needsDeferredEndScrollingSelectionUpdate;	// 2378 = 0x94a
    _Bool _isChangingFocus;	// 2379 = 0x94b
    _Bool _isFocusingElementWithKeyboard;	// 2380 = 0x94c
    _Bool _isBlurringFocusedElement;	// 2381 = 0x94d
    _Bool _isRelinquishingFirstResponderToFocusedElement;	// 2382 = 0x94e
    _Bool _unsuppressSoftwareKeyboardAfterNextAutocorrectionContextUpdate;	// 2383 = 0x94f
    _Bool _isUnsuppressingSoftwareKeyboardUsingLastAutocorrectionContext;	// 2384 = 0x950
    _Bool _waitingForKeyboardAppearanceAnimationToStart;	// 2385 = 0x951
    _Bool _isHidingKeyboard;	// 2386 = 0x952
    _Bool _isInterpretingKeyEvent;	// 2387 = 0x953
    _Bool _isPresentingEditMenu;	// 2388 = 0x954
    _Bool _isHandlingActiveKeyEvent;	// 2389 = 0x955
    _Bool _isHandlingActivePressesEvent;	// 2390 = 0x956
    _Bool _isDeferringKeyEventsToInputMethod;	// 2391 = 0x957
    _Bool _isUpdatingAccessoryView;	// 2392 = 0x958
    _Bool _focusRequiresStrongPasswordAssistance;	// 2393 = 0x959
    _Bool _waitingForEditDragSnapshot;	// 2394 = 0x95a
    struct optional<bool> _cachedRequiresLegacyTextInputTraits;	// 2395 = 0x95b
    long long _dropAnimationCount;	// 2400 = 0x960
    _Bool _hasSetUpInteractions;	// 2408 = 0x968
    struct optional<bool> _cachedHasCustomTintColor;	// 2409 = 0x969
    unsigned long long _ignoreSelectionCommandFadeCount;	// 2416 = 0x970
    unsigned long long _activeTextInteractionCount;	// 2424 = 0x978
    long long _suppressNonEditableSingleTapTextInteractionCount;	// 2432 = 0x980
    struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> _domPasteRequestHandler;	// 2440 = 0x988
    struct optional<WebCore::DOMPasteAccessCategory> _domPasteRequestCategory;	// 2448 = 0x990
    struct CompletionHandler<void (WebKit::RequestAutocorrectionContextResult)> _pendingAutocorrectionContextHandler;	// 2456 = 0x998
    struct CompletionHandler<void ()> _pendingRunModalJavaScriptDialogCallback;	// 2464 = 0x9a0
    struct RetainPtr<NSDictionary> _additionalContextForStrongPasswordAssistance;	// 2472 = 0x9a8
    struct optional<char32_t> _lastInsertedCharacterToOverrideCharacterBeforeSelection;	// 2480 = 0x9b0
    unsigned int _selectionChangeNestingLevel;	// 2488 = 0x9b8
    struct RetainPtr<NSMutableDictionary<NSUUID *, NSUUID *>> _sourceAnimationIDtoDestinationAnimationID;	// 2496 = 0x9c0
    unsigned int _fullscreenVideoImageAnalysisRequestIdentifier;	// 2504 = 0x9c8
    struct unique_ptr<WebKit::PageClientImpl, std::default_delete<WebKit::PageClientImpl>> _pageClient;	// 2512 = 0x9d0
    struct RetainPtr<WKBrowsingContextController> _browsingContextController;	// 2520 = 0x9d8
    struct RetainPtr<UIView> _rootContentView;	// 2528 = 0x9e0
    struct RetainPtr<UIView> _fixedClippingView;	// 2536 = 0x9e8
    struct RetainPtr<WKInspectorIndicationView> _inspectorIndicationView;	// 2544 = 0x9f0
    struct RetainPtr<WKInspectorHighlightView> _inspectorHighlightView;	// 2552 = 0x9f8
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForWebProcess;	// 2560 = 0xa00
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForGPUProcess;	// 2568 = 0xa08
    struct HistoricalVelocityData _historicalKinematicData;	// 2576 = 0xa10
    struct RetainPtr<WKNSUndoManager> _undoManager;	// 2664 = 0xa68
    struct RetainPtr<WKNSKeyEventSimulatorUndoManager> _undoManagerForSimulatingKeyEvents;	// 2672 = 0xa70
    struct Lock _pendingBackgroundPrintFormattersLock;	// 2680 = 0xa78
    struct RetainPtr<NSMutableSet> _pendingBackgroundPrintFormatters;	// 2688 = 0xa80
    struct ObjectIdentifierGeneric<IPC::AsyncReplyIDType, WTF::ObjectIdentifierThreadSafeAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes> _printRenderingCallbackID;	// 2696 = 0xa88
    long long _printRenderingCallbackType;	// 2704 = 0xa90
    struct Vector<WTF::RetainPtr<NSURL>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _temporaryURLsToDeleteWhenDeallocated;	// 2712 = 0xa98
    _Bool _sizeChangedSinceLastVisibleContentRectUpdate;	// 2728 = 0xaa8
}

- (id).cxx_construct;	// IMP=0x0000000000939acc
- (void).cxx_destruct;	// IMP=0x0000000000939005
@property(nonatomic) _Bool sizeChangedSinceLastVisibleContentRectUpdate; // @synthesize sizeChangedSinceLastVisibleContentRectUpdate=_sizeChangedSinceLastVisibleContentRectUpdate;
@property(readonly, nonatomic, getter=isResigningFirstResponder) _Bool resigningFirstResponder; // @synthesize resigningFirstResponder=_resigningFirstResponder;
- (void)_screenCapturedDidChange:(id)arg1;	// IMP=0x0000000000938fa6
- (void)_applicationWillEnterForeground:(id)arg1;	// IMP=0x0000000000938f6e
- (void)_applicationDidEnterBackground:(id)arg1;	// IMP=0x0000000000938f36
- (void)_applicationDidBecomeActive:(id)arg1;	// IMP=0x0000000000938f21
- (void)_applicationWillResignActive:(id)arg1;	// IMP=0x0000000000938ee8
- (double)_targetContentZoomScaleForRect:(const struct FloatRect *)arg1 currentScale:(double)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5;	// IMP=0x0000000000938e8d
- (double)_contentZoomScale;	// IMP=0x0000000000938e6c
- (double)_initialScaleFactor;	// IMP=0x0000000000938e4b
- (void)_zoomToInitialScaleWithOrigin:(struct CGPoint)arg1;	// IMP=0x0000000000938dee
- (void)_zoomOutWithOrigin:(struct CGPoint)arg1;	// IMP=0x0000000000938d91
- (_Bool)_zoomToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6;	// IMP=0x0000000000938cef
- (void)_zoomToFocusRect:(struct CGRect)arg1 selectionRect:(struct CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(_Bool)arg6 forceScroll:(_Bool)arg7;	// IMP=0x0000000000938c61
- (_Bool)_scrollToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 minimumScrollDistance:(double)arg3;	// IMP=0x0000000000938bdf
- (void)_setAcceleratedCompositingRootView:(id)arg1;	// IMP=0x0000000000938a91
- (void)_layerTreeCommitComplete;	// IMP=0x0000000000938a70
- (void)_didCommitLayerTree:(const void *)arg1;	// IMP=0x000000000093875b
- (void)_gpuProcessDidCreateContextForVisibilityPropagation;	// IMP=0x0000000000938749
- (void)_webProcessDidCreateContextForVisibilityPropagation;	// IMP=0x0000000000938737
- (void)_didRelaunchProcess;	// IMP=0x00000000009386ef
- (void)_processWillSwap;	// IMP=0x00000000009386dd
- (void)_gpuProcessDidExit;	// IMP=0x00000000009386cb
- (void)_processDidExit;	// IMP=0x0000000000938665
- (unique_ptr_7306e13f)_createDrawingAreaProxy:(void *)arg1;	// IMP=0x00000000009385e2
- (void)_resetPrintingState;	// IMP=0x0000000000938424
- (void)_webViewDestroyed;	// IMP=0x0000000000938411
- (void)_accessibilityRegisterUIProcessTokens;	// IMP=0x00000000009382ae
- (void)_updateRemoteAccessibilityRegistration:(_Bool)arg1;	// IMP=0x00000000009382a8
- (void)_setAccessibilityWebProcessToken:(id)arg1;	// IMP=0x0000000000938296
- (void)_updateForScreen:(id)arg1;	// IMP=0x000000000093823a
- (void)_windowDidMoveToScreenNotification:(id)arg1;	// IMP=0x00000000009381ef
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x000000000093816f
- (_Bool)canBecomeFocused;	// IMP=0x00000000009380dc
@property(readonly, nonatomic) long long interfaceOrientation;
@property(readonly, nonatomic) NSUndoManager *undoManagerForWebView;
- (_Bool)screenIsBeingCaptured;	// IMP=0x0000000000937fd4
- (void)didZoomToScale:(double)arg1;	// IMP=0x0000000000937fc2
- (void)willStartZoomOrScroll;	// IMP=0x0000000000937fb0
- (void)didInterruptScrolling;	// IMP=0x0000000000937f9c
- (void)didFinishScrolling;	// IMP=0x0000000000937f8a
- (void)didUpdateVisibleRect:(struct CGRect)arg1 unobscuredRect:(struct CGRect)arg2 contentInsets:(struct UIEdgeInsets)arg3 unobscuredRectInScrollViewCoordinates:(struct CGRect)arg4 obscuredInsets:(struct UIEdgeInsets)arg5 unobscuredSafeAreaInsets:(struct UIEdgeInsets)arg6 inputViewBounds:(struct CGRect)arg7 scale:(double)arg8 minimumScale:(double)arg9 viewStability:(OptionSet_5ff1ced1)arg10 enclosedInScrollableAncestorView:(_Bool)arg11 sendEvenIfUnchanged:(_Bool)arg12;	// IMP=0x0000000000937afd
- (struct CGRect)_computeUnobscuredContentRectRespectingInputViewBounds:(struct CGRect)arg1 inputViewBounds:(struct CGRect)arg2;	// IMP=0x00000000009379e7
- (void)_didExitStableState;	// IMP=0x000000000093799e
- (void)updateFixedClippingView:(struct FloatRect)arg1;	// IMP=0x00000000009378c0
@property(nonatomic, getter=isShowingInspectorIndication) _Bool showingInspectorIndication;
- (void)_hideInspectorHighlight;	// IMP=0x0000000000937762
- (void)_showInspectorHighlight:(const void *)arg1;	// IMP=0x000000000093768c
@property(readonly, nonatomic) _Bool isFocusingElement;
- (struct OpaqueWKPage *)_pageRef;	// IMP=0x000000000093765c
@property(readonly, nonatomic) WKBrowsingContextController *browsingContextController;
- (void)didMoveToWindow;	// IMP=0x0000000000937549
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000937450
- (id)rootContentView;	// IMP=0x000000000093743f
- (id)webView;	// IMP=0x000000000093742e
@property(readonly, nonatomic) void *page;
- (void)_removeTemporaryDirectoriesWhenDeallocated:(void *)arg1;	// IMP=0x000000000093738c
- (void)_removeTemporaryFilesIfNecessary;	// IMP=0x000000000093729e
- (void)dealloc;	// IMP=0x0000000000937214
- (id)initWithFrame:(struct CGRect)arg1 processPool:(NakedRef_6f117943)arg2 configuration:(void *)arg3 webView:(id)arg4;	// IMP=0x000000000093713d
- (void)_removeVisibilityPropagationViewForGPUProcess;	// IMP=0x000000000093707f
- (void)_removeVisibilityPropagationViewForWebProcess;	// IMP=0x0000000000936fc1
- (void)_setupVisibilityPropagationForGPUProcess;	// IMP=0x0000000000936e3e
- (void)_setupVisibilityPropagationForWebProcess;	// IMP=0x0000000000936cd1
- (void)_installVisibilityPropagationViews;	// IMP=0x0000000000936ca3
- (id)_commonInitializationWithProcessPool:(void *)arg1 configuration:(void *)arg2;	// IMP=0x00000000009366e1
- (void)_wk_requestImageForPrintFormatter:(id)arg1;	// IMP=0x000000000093aece
- (void)_waitForDrawToImageCallbackForPrintFormatterIfNeeded:(id)arg1;	// IMP=0x000000000093ac65
- (void)_wk_requestDocumentForPrintFormatter:(id)arg1;	// IMP=0x000000000093ab07
- (void)_waitForDrawToPDFCallbackForPrintFormatterIfNeeded:(id)arg1;	// IMP=0x000000000093a89e
- (void)_createPDF:(id)arg1 printFormatter:(id)arg2;	// IMP=0x000000000093a78c
- (void)_createImage:(id)arg1 printFormatter:(id)arg2;	// IMP=0x000000000093a628
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1;	// IMP=0x000000000093a5a7
- (RetainPtr_9a14fc6b)_attributesForPrintFormatter:(id)arg1;	// IMP=0x000000000093a170
@property(readonly, nonatomic) _Bool _wk_printFormatterRequiresMainThread;
- (optional_170137e4)_frameIdentifierForPrintFormatter:(id)arg1;	// IMP=0x000000000093a10b
- (void)_closeCurrentTypingCommand;	// IMP=0x000000000095ceab
- (void)insertAdaptiveImageGlyph:(id)arg1 replacementRange:(id)arg2;	// IMP=0x000000000095ce58
@property(nonatomic) _Bool supportsAdaptiveImageGlyph;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,N

- (_Bool)shouldSuppressEditMenu;	// IMP=0x000000000095cdc3
- (_Bool)selectionAtDocumentStart;	// IMP=0x000000000095cd97
- (void)transposeCharactersAroundSelection;	// IMP=0x000000000095cd7e
- (struct CGRect)selectionClipRect;	// IMP=0x000000000095cd09
- (void)_internalAdjustSelectionWithOffset:(long long)arg1 lengthDelta:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000095cc55
@property(readonly, nonatomic) struct CGSize sizeForLegacyFormControlPickerViews;
@property(readonly, nonatomic) _Bool isPresentingEditMenu;
- (void)willDismissEditMenuWithAnimator:(id)arg1;	// IMP=0x000000000095ca8f
- (void)willPresentEditMenuWithAnimator:(id)arg1;	// IMP=0x000000000095c91e
- (_Bool)isImageBacked;	// IMP=0x000000000095c8f6
@property(readonly, nonatomic) _Bool _shouldAvoidSecurityHeuristicScoreUpdates;
- (void)cancelTextRecognitionForVideoInElementFullscreen;	// IMP=0x000000000095c8e8
- (void)beginTextRecognitionForVideoInElementFullscreen:(void *)arg1 bounds:(struct FloatRect)arg2;	// IMP=0x000000000095c8e2
@property(readonly, nonatomic) _Bool isTextRecognitionInFullscreenVideoEnabled;
- (void)cancelTextRecognitionForFullscreenVideo:(id)arg1;	// IMP=0x000000000095c8d4
- (void)beginTextRecognitionForFullscreenVideo:(void *)arg1 playerViewController:(id)arg2;	// IMP=0x000000000095c8ce
- (void)startFadeOut;	// IMP=0x000000000095c779
- (void)teardownTextIndicatorLayer;	// IMP=0x000000000095c738
- (void)setTextIndicatorAnimationProgress:(float)arg1;	// IMP=0x000000000095c70b
- (void)clearTextIndicator:(unsigned char)arg1;	// IMP=0x000000000095c633
- (void)setUpTextIndicator:(Ref_c1244733)arg1;	// IMP=0x000000000095c4cc
- (void)_writePromisedAttachmentToPasteboard:(void *)arg1;	// IMP=0x000000000095c4c6
- (void)_showMediaControlsContextMenu:(struct FloatRect *)arg1 items:(void *)arg2 completionHandler:(void *)arg3;	// IMP=0x000000000095c4a9
- (void)setGrammarCheckingEnabled:(_Bool)arg1;	// IMP=0x000000000095c468
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x000000000095c430
- (id)scrollToTextFragmentGenerationMenu;	// IMP=0x000000000095c2c6
- (id)menuWithInlineAction:(id)arg1 image:(id)arg2 identifier:(id)arg3 handler:(void *)arg4;	// IMP=0x000000000095c0b0
- (void)buildMenuForWebViewWithBuilder:(id)arg1;	// IMP=0x000000000095c06b
- (void)selectPositionAtPoint:(struct CGPoint)arg1 withContextRequest:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000095bc94
- (void)requestDocumentContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000095ba12
- (void)adjustSelectionWithDelta:(struct _NSRange)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000095b930
- (void)_removeContextMenuHintContainerIfPossible;	// IMP=0x000000000095b89a
- (id)_createTargetedContextMenuHintPreviewIfPossible;	// IMP=0x000000000095b420
- (_Bool)positionInformationHasImageOverlayDataDetector;	// IMP=0x000000000095b418
- (id)_createTargetedContextMenuHintPreviewForFocusedElement:(unsigned char)arg1;	// IMP=0x000000000095af72
- (id)_createTargetedPreviewFromTextIndicator:(struct TextIndicatorData)arg1 previewContainer:(id)arg2;	// IMP=0x000000000095a79a
- (id)_autofillContext;	// IMP=0x000000000095a54c
- (id)textEffectsWindow;	// IMP=0x000000000095a50a
- (void)cancelActiveTextInteractionGestures;	// IMP=0x000000000095a4df
- (_Bool)deferringGestureRecognizer:(id)arg1 shouldDeferOtherGestureRecognizer:(id)arg2;	// IMP=0x000000000095a188
- (void)deferringGestureRecognizer:(id)arg1 didEndTouchesWithEvent:(id)arg2;	// IMP=0x000000000095a09c
- (void)deferringGestureRecognizer:(id)arg1 didTransitionToState:(long long)arg2;	// IMP=0x000000000095a06a
- (_Bool)deferringGestureRecognizer:(id)arg1 willBeginTouchesWithEvent:(id)arg2;	// IMP=0x000000000095a01c
- (void)_updateTargetedPreviewScrollViewUsingContainerScrollingNodeID:(optional_278f531e)arg1;	// IMP=0x0000000000959f03
- (void)_updateFrameOfContainerForContextMenuHintPreviewsIfNeeded;	// IMP=0x0000000000959e04
- (void)_removeContainerForContextMenuHintPreviews;	// IMP=0x0000000000959d8c
- (id)containerForContextMenuHintPreviews;	// IMP=0x0000000000959c51
- (void)_removeContainerForDragPreviews;	// IMP=0x0000000000959bfe
- (id)containerForDragPreviews;	// IMP=0x0000000000959b67
- (void)_removeContainerForDropPreviews;	// IMP=0x0000000000959b14
- (id)containerForDropPreviews;	// IMP=0x0000000000959a7d
- (RetainPtr_f11d553d)_createPreviewContainerWithLayerName:(id)arg1;	// IMP=0x00000000009599a6
- (unsigned char)_dataOwnerForPasteboard:(_Bool)arg1;	// IMP=0x000000000095993f
@property(readonly, nonatomic) _Bool _shouldUseLegacySelectPopoverDismissalBehavior;
@property(readonly, nonatomic) _Bool _shouldAvoidScrollingWhenFocusedContentIsVisible;
@property(readonly, nonatomic) _Bool _shouldAvoidResizingWhenInputViewBoundsChange;
@property(readonly, nonatomic) _Bool _shouldUseContextMenusForFormControls;
@property(readonly, nonatomic) _Bool _shouldUseContextMenus;
- (void)_targetedPreviewContainerDidRemoveLastSubview:(id)arg1;	// IMP=0x000000000095986d
- (void)actionSheetAssistantDidDismissContextMenu:(id)arg1;	// IMP=0x000000000095984c
- (void)actionSheetAssistantDidShowContextMenu:(id)arg1;	// IMP=0x000000000095982b
- (void)removeContextMenuViewIfPossibleForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000959819
- (id)createTargetedContextMenuHintForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000959807
- (id)additionalMediaControlsContextMenuItemsForActionSheetAssistant:(id)arg1;	// IMP=0x00000000009597fa
- (void)actionSheetAssistant:(id)arg1 getAlternateURLForImage:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000095971a
- (id)selectedTextForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000959708
- (id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const void *)arg2;	// IMP=0x00000000009596f3
- (id)dataDetectionContextForPositionInformation:(const void *)arg1;	// IMP=0x0000000000959657
- (void)actionSheetAssistantDidStopInteraction:(id)arg1;	// IMP=0x000000000095961e
- (void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2;	// IMP=0x00000000009595cb
- (RetainPtr_f649c0c3)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr_f649c0c3)arg3;	// IMP=0x0000000000959555
- (struct CGRect)unoccludedWindowBoundsForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000959405
- (_Bool)actionSheetAssistant:(id)arg1 showCustomSheetForElement:(id)arg2;	// IMP=0x000000000095935f
- (void)actionSheetAssistant:(id)arg1 shareElementWithImage:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x0000000000958ed3
- (void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x0000000000958c82
- (void)actionSheetAssistant:(id)arg1 openElementAtLocation:(struct CGPoint)arg2;	// IMP=0x0000000000958c6e
- (void)_actionSheetAssistant:(id)arg1 performAction:(unsigned char)arg2 onElements:(void *)arg3;	// IMP=0x0000000000958c32
- (void)actionSheetAssistant:(id)arg1 performAction:(unsigned char)arg2;	// IMP=0x0000000000958c1b
- (void)updatePositionInformationForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000958b72
-     // Error parsing type: {optional<WebKit::InteractionInformationAtPosition>=(?=c{InteractionInformationAtPosition={InteractionInformationRequest={IntPoint=ii}BBBBBBB}B{optional<bool>=(?=cB)B}CBBBBBBBBBBBBB{Markable<WebCore::ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>, WebCore::ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>::MarkableTraits>={ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>>={ObjectIdentifierGeneric<WebCore::ScrollingNodeIDType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>=Q}{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>=Q}}}BBBBB{FloatPoint=ff}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{IntRect={IntPoint=ii}{IntSize=ii}}{RefPtr<WebCore::ShareableBitmap, WTF::RawPtrTraits<WebCore::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebCore::ShareableBitmap>>=^{ShareableBitmap}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}f{FloatRect={FloatPoint=ff}{FloatSize=ff}}{optional<WebCore::Cursor>=(?=c{Cursor=C{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{IntPoint=ii}^v})B}{TextIndicatorData={FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>=^{FloatRect}II}f{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{Color=Q}C{OptionSet<WebCore::TextIndicatorOption>=S}}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{Markable<WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>={ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>=Q}}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>=Q}}{Markable<WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>={ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>=Q}}})B}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{Markable<WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>={ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>=Q}}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::Yes>=Q}}{Markable<WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>, WTF::ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>::MarkableTraits>={ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long, WTF::SupportsObjectIdentifierNullState::No>=Q}}})B}})B}24@0:8@16, name: positionInformationForActionSheetAssistant:
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;	// IMP=0x0000000000958a9d
- (_Bool)gestureRecognizer:(id)arg1 isInterruptingMomentumScrollingWithEvent:(id)arg2;	// IMP=0x00000000009588e8
- (_Bool)gestureRecognizer:(id)arg1 shouldIgnoreTouchEvent:(id)arg2;	// IMP=0x00000000009588cb
- (void)_preserveFocusWithToken:(id)arg1 destructively:(_Bool)arg2;	// IMP=0x0000000000958815
- (void)stopRelinquishingFirstResponderToFocusedElement;	// IMP=0x00000000009587e1
- (void)startRelinquishingFirstResponderToFocusedElement;	// IMP=0x00000000009587ad
- (_Bool)_restoreFocusWithToken:(id)arg1;	// IMP=0x0000000000958767
- (id)inputLabelText;	// IMP=0x0000000000958704
- (void)dismissPickersIfNeededWithReason:(unsigned char)arg1;	// IMP=0x00000000009586bf
- (void)_showContactPicker:(const void *)arg1 completionHandler:(void *)arg2;	// IMP=0x0000000000958652
- (void)_showShareSheet:(const void *)arg1 inRect:(optional_1d8eff86)arg2 completionHandler:(void *)arg3;	// IMP=0x000000000095864c
- (_Bool)fileUploadPanelDestinationIsManaged:(id)arg1;	// IMP=0x00000000009584f1
- (void)fileUploadPanelDidDismiss:(id)arg1;	// IMP=0x00000000009584ae
- (void)_showRunOpenPanel:(struct OpenPanelParameters *)arg1 frameInfo:(const void *)arg2 resultListener:(struct WebOpenPanelResultListenerProxy *)arg3;	// IMP=0x000000000095835b
- (void)_showPlaybackTargetPicker:(_Bool)arg1 fromRect:(const struct IntRect *)arg2 routeSharingPolicy:(unsigned char)arg3 routingContextUID:(id)arg4;	// IMP=0x0000000000958355
- (void)_provideUITextSuggestionsToInputDelegate:(id)arg1;	// IMP=0x0000000000958324
- (void)_provideSuggestionsToInputDelegate:(id)arg1;	// IMP=0x00000000009582b9
- (void)updateTextSuggestionsForInputDelegate;	// IMP=0x000000000095822e
@property(retain, nonatomic) NSArray *dataListTextSuggestions;
@property(retain, nonatomic) UIView<WKFormControl> *dataListTextSuggestionsInputView;
- (void)_stopSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x00000000009580ad
- (void)_startSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x000000000095807b
- (_Bool)_shouldSuppressSelectionCommands;	// IMP=0x0000000000957fb7
- (_Bool)hasHiddenContentEditable;	// IMP=0x0000000000957fa3
- (_Bool)supportsTextSelectionWithCharacterGranularity;	// IMP=0x0000000000957f9b
- (_Bool)shouldAllowHidingSelectionCommands;	// IMP=0x0000000000957f86
- (void)_updateChangedSelection:(_Bool)arg1;	// IMP=0x0000000000957865
- (void)_updateChangedSelection;	// IMP=0x0000000000957851
- (void)selectWordForReplacement;	// IMP=0x0000000000957751
- (void)_selectionChanged;	// IMP=0x00000000009575fb
- (void)_updateSelectionAssistantSuppressionState;	// IMP=0x00000000009574d2
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x00000000009574a3
- (void)reloadContextViewForPresentedListViewController;	// IMP=0x000000000095749d
- (void)updateCurrentFocusedElementInformation:(void *)arg1;	// IMP=0x0000000000957326
- (void)_updateInitialWritingDirectionIfNecessary;	// IMP=0x00000000009572a1
- (void)_didUpdateEditorState;	// IMP=0x00000000009571b8
- (void)doAfterEditorStateUpdateAfterFocusingElement:(CDUnknownBlockType)arg1;	// IMP=0x00000000009570fd
- (void)_requestDOMPasteAccessForCategory:(unsigned char)arg1 requiresInteraction:(_Bool)arg2 elementRect:(const struct IntRect *)arg3 originIdentifier:(const void *)arg4 completionHandler:(void *)arg5;	// IMP=0x0000000000956ce6
- (void)_didUpdateInputMode:(unsigned char)arg1;	// IMP=0x0000000000956c8b
- (void)_hardwareKeyboardAvailabilityChanged;	// IMP=0x0000000000956c6e
@property(readonly, nonatomic) _Bool shouldIgnoreKeyboardWillHideNotification;
- (void)_updateFocusedElementInformation:(const void *)arg1;	// IMP=0x0000000000956a37
- (void)_updateInputContextAfterBlurringAndRefocusingElement;	// IMP=0x00000000009569dd
- (void)_elementDidBlur;	// IMP=0x000000000095678c
- (void)_elementDidFocus:(const void *)arg1 userIsInteracting:(_Bool)arg2 blurPreviousNode:(_Bool)arg3 activityStateChanges:(OptionSet_c7189324)arg4 userObject:(id)arg5;	// IMP=0x0000000000955cd3
- (void)stopDeferringInputViewUpdatesForAllSources;	// IMP=0x0000000000955c18
- (void)stopDeferringInputViewUpdates:(OptionSet_6e890478)arg1;	// IMP=0x0000000000955b56
- (void)startDeferringInputViewUpdates:(OptionSet_6e890478)arg1;	// IMP=0x0000000000955aa1
- (_Bool)_shouldShowKeyboardForElementIgnoringInputMode:(const void *)arg1;	// IMP=0x0000000000955a6d
- (_Bool)_shouldShowKeyboardForElement:(const void *)arg1;	// IMP=0x0000000000955a4e
- (void *)focusedSelectElementOptions;	// IMP=0x0000000000955a38
@property(readonly, nonatomic) const void *focusedElementInformation;
- (_Bool)_formControlRefreshEnabled;	// IMP=0x0000000000955a13
- (void)_hideKeyboard;	// IMP=0x0000000000955966
- (void)_showKeyboard;	// IMP=0x0000000000955901
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x000000000095581e
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x0000000000955816
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000095580e
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x0000000000955806
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x0000000000955712
- (_Bool)hasSelection;	// IMP=0x0000000000955662
- (void)selectAll;	// IMP=0x00000000009555b4
- (_Bool)_hasContent;	// IMP=0x0000000000955581
- (_Bool)hasContent;	// IMP=0x00000000009554bd
- (void)setMarkedText:(id)arg1;	// IMP=0x00000000009554b7
- (id)wordRangeContainingCaretSelection;	// IMP=0x00000000009554af
- (id)wordContainingCaretSelection;	// IMP=0x00000000009554a7
- (unsigned short)characterBeforeCaretSelection;	// IMP=0x000000000095549f
- (void)moveForward:(unsigned int)arg1;	// IMP=0x0000000000955499
- (void)moveBackward:(unsigned int)arg1;	// IMP=0x0000000000955493
- (long long)selectionGranularity;	// IMP=0x000000000095548b
- (id)automaticallySelectedOverlay;	// IMP=0x00000000009553c7
- (void)setBottomBufferHeight:(double)arg1;	// IMP=0x0000000000955319
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000095523a
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000095515b
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000095504f
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954f70
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954e91
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954db2
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954ca6
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954bc7
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954ae8
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000954a09
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000095492a
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000095484b
- (void)_transpose;	// IMP=0x0000000000954787
- (void)_deleteToEndOfParagraph;	// IMP=0x00000000009546bc
- (void)_deleteForwardAndNotify:(_Bool)arg1;	// IMP=0x00000000009545f1
- (void)_deleteToEndOfLine;	// IMP=0x0000000000954526
- (void)_deleteToStartOfLine;	// IMP=0x000000000095445b
- (void)_deleteForwardByWord;	// IMP=0x0000000000954390
- (void)_deleteByWord;	// IMP=0x00000000009542c5
- (void)_executeEditCommand:(id)arg1 notifyDelegate:(_Bool)arg2;	// IMP=0x000000000095415a
- (void)_executeEditCommand:(id)arg1;	// IMP=0x0000000000954143
@property(readonly, nonatomic, getter=isKeyboardScrollingAnimationRunning) _Bool keyboardScrollingAnimationRunning;
- (void)keyboardScrollViewAnimatorDidFinishScrolling:(id)arg1;	// IMP=0x00000000009540cd
- (void)keyboardScrollViewAnimatorWillScroll:(id)arg1;	// IMP=0x00000000009540b0
- (double)keyboardScrollViewAnimator:(id)arg1 distanceForIncrement:(unsigned char)arg2 inDirection:(unsigned char)arg3;	// IMP=0x0000000000953efe
- (_Bool)isScrollableForKeyboardScrollViewAnimator:(id)arg1;	// IMP=0x0000000000953e95
- (void)dismissFilePicker;	// IMP=0x0000000000953e73
- (id)filePickerAcceptedTypeIdentifiers;	// IMP=0x0000000000953e48
- (_Bool)_interpretKeyEvent:(id)arg1 isCharEvent:(_Bool)arg2;	// IMP=0x0000000000953bd3
- (void)_didHandleKeyEvent:(id)arg1 eventWasHandled:(_Bool)arg2;	// IMP=0x0000000000953ab9
- (void)_internalHandleKeyWebEvent:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000009537d1
- (_Bool)_deferKeyEventToInputMethodEditing:(id)arg1;	// IMP=0x0000000000953771
- (void)handleKeyWebEvent:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000953699
- (void)_internalHandleKeyWebEvent:(id)arg1;	// IMP=0x000000000095363f
- (void)handleKeyWebEvent:(id)arg1;	// IMP=0x0000000000953571
- (void)generateSyntheticEditingCommand:(unsigned char)arg1;	// IMP=0x000000000095355a
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009534f5
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;	// IMP=0x000000000095349c
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000953437
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009533d2
- (_Bool)_tryToHandlePressesEvent:(id)arg1;	// IMP=0x000000000095330f
- (_Bool)requiresKeyEvents;	// IMP=0x0000000000953307
- (_Bool)shouldSuppressUpdateCandidateView;	// IMP=0x00000000009532f7
- (void)modifierFlagsDidChangeFrom:(long long)arg1 to:(long long)arg2;	// IMP=0x0000000000953116
- (void)_didFinishTextInteractionInTextInputContext:(id)arg1;	// IMP=0x000000000095304a
- (void)_willBeginTextInteractionInTextInputContext:(id)arg1;	// IMP=0x0000000000952fc6
- (void)_requestTextInputContextsInRect:(struct CGRect)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000952e88
- (void)_focusTextInputContext:(id)arg1 placeCaretAt:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000952c4c
- (_Bool)_isTextInputContextFocused:(id)arg1;	// IMP=0x0000000000952bfc
- (struct CGRect)rectContainingCaretSelection;	// IMP=0x0000000000952bde
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x0000000000952b30
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;	// IMP=0x0000000000952b2a
- (id)selectedDOMRange;	// IMP=0x0000000000952b22
- (struct _NSRange)_markedTextNSRange;	// IMP=0x0000000000952b10
- (struct CGRect)rectForNSRange:(struct _NSRange)arg1;	// IMP=0x0000000000952af2
- (struct _NSRange)selectionRange;	// IMP=0x0000000000952a38
- (id)interactionAssistant;	// IMP=0x00000000009529d8
- (void)_updateTextInputTraits:(id)arg1;	// IMP=0x00000000009525a0
@property(readonly, nonatomic) UITextInputTraits *textInputTraitsForWebView;
- (id)textInputTraits;	// IMP=0x000000000095241f
- (_Bool)_requiresLegacyTextInputTraits;	// IMP=0x0000000000952320
- (id)contentTypeFromFieldName:(unsigned char)arg1;	// IMP=0x0000000000952143
- (void)removeEmojiAlternatives;	// IMP=0x0000000000952076
- (void)addTextAlternatives:(id)arg1;	// IMP=0x0000000000951fa0
@property(readonly, nonatomic) _Bool hasText;
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;	// IMP=0x0000000000951cba
- (void)insertText:(id)arg1;	// IMP=0x0000000000951b58
- (_Bool)_shouldSimulateKeyboardInputOnTextInsertion;	// IMP=0x0000000000951b50
- (void)deleteBackward;	// IMP=0x0000000000951a74
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000951a6c
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000951a64
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000951a5c
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x0000000000951a3e
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x00000000009519a9
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000009519a1
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000951999
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000000951991
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000951981
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000951979
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x0000000000951971
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x000000000095182c
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000951795
- (_Bool)_isAnchoredToCurrentSelection:(id)arg1;	// IMP=0x00000000009516e1
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x000000000095168a
- (void)_setMarkedText:(id)arg1 underlines:(const void *)arg2 highlights:(const void *)arg3 selectedRange:(struct _NSRange)arg4;	// IMP=0x0000000000951550
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000009514dc
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000950e63
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (id)markedText;	// IMP=0x0000000000950c79
- (_Bool)hasMarkedText;	// IMP=0x0000000000950c55
@property(copy) UITextRange *selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x0000000000950bde
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x0000000000950b8b
- (struct FloatRect)_scaledCaretRectForSelectionEnd:(struct FloatRect)arg1;	// IMP=0x00000000009507f8
- (struct FloatRect)_scaledCaretRectForSelectionStart:(struct FloatRect)arg1;	// IMP=0x0000000000950799
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000950793
- (id)textInRange:(id)arg1;	// IMP=0x000000000095048d
- (void)insertTextSuggestion:(id)arg1;	// IMP=0x000000000094ff9f
- (void)_didChangeWebViewEditability;	// IMP=0x000000000094fe98
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;	// IMP=0x000000000094fdd2
- (void)_updateInternalStateAfterSelectionChange;	// IMP=0x000000000094fdb9
- (void)_internalEndSelectionChange;	// IMP=0x000000000094fd7b
- (void)endSelectionChange;	// IMP=0x000000000094fcb7
- (void)_updateInternalStateBeforeSelectionChange;	// IMP=0x000000000094fc9c
- (void)_internalBeginSelectionChange;	// IMP=0x000000000094fc5e
- (void)beginSelectionChange;	// IMP=0x000000000094fb9a
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x000000000094faea
- (void)_updateAccessory;	// IMP=0x000000000094fa1a
- (void)accessoryOpen;	// IMP=0x000000000094f9bc
@property(readonly, nonatomic) WKFormAccessoryView *formAccessoryView;
- (void)accessoryViewAutoFill:(id)arg1;	// IMP=0x000000000094f930
- (void)accessoryView:(id)arg1 tabInDirection:(_Bool)arg2;	// IMP=0x000000000094f84a
- (void)accessoryTab:(_Bool)arg1;	// IMP=0x000000000094f824
- (void)updateFocusedElementFocusedWithDataListDropdown:(_Bool)arg1;	// IMP=0x000000000094f804
- (void)updateFocusedElementSelectedIndex:(unsigned int)arg1 allowsMultipleSelection:(_Bool)arg2;	// IMP=0x000000000094f7b6
- (void)updateFocusedElementValueAsColor:(id)arg1;	// IMP=0x000000000094f63a
- (void)updateFocusedElementValue:(id)arg1;	// IMP=0x000000000094f51d
- (void)accessoryViewDone:(id)arg1;	// IMP=0x000000000094f44c
- (void)accessoryDone;	// IMP=0x000000000094f42f
- (void)_setDoubleTapGesturesEnabled:(_Bool)arg1;	// IMP=0x000000000094f2e9
- (struct Color)_tapHighlightColorForFastClick:(_Bool)arg1;	// IMP=0x000000000094f2bf
- (void)_becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000094f1b3
- (void)_previousAccessoryTabForWebView:(id)arg1;	// IMP=0x000000000094f19f
- (void)_nextAccessoryTabForWebView:(id)arg1;	// IMP=0x000000000094f188
- (void)_didCommitLoadForMainFrame;	// IMP=0x000000000094f0b6
- (void)_didStartProvisionalLoadForMainFrame;	// IMP=0x000000000094f05e
- (void)runModalJavaScriptDialog:(void *)arg1;	// IMP=0x000000000094eff3
- (void)unsuppressSoftwareKeyboardUsingLastAutocorrectionContextIfNeeded;	// IMP=0x000000000094ef9b
- (void)updateSoftwareKeyboardSuppressionStateFromWebView;	// IMP=0x000000000094eeea
- (void)_handleAutocorrectionContext:(const void *)arg1;	// IMP=0x000000000094ee64
- (void)_internalRequestAutocorrectionContextWithCompletionHandler:(void *)arg1;	// IMP=0x000000000094ebc7
- (void)requestAutocorrectionContextWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000094e9fb
- (void)_cancelPendingAutocorrectionContextHandler;	// IMP=0x000000000094e9ab
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 shouldUnderline:(_Bool)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000094e999
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000094e981
- (void)_internalReplaceText:(id)arg1 withText:(id)arg2 isCandidate:(_Bool)arg3 completion:(void *)arg4;	// IMP=0x000000000094e83b
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 isCandidate:(_Bool)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000094e6a7
- (void)replaceDictatedText:(id)arg1 withText:(id)arg2;	// IMP=0x000000000094e57c
- (void)didInsertFinalDictationResult;	// IMP=0x000000000094e543
- (void)willInsertFinalDictationResult;	// IMP=0x000000000094e50a
- (struct CGRect)textLastRect;	// IMP=0x000000000094e46c
- (struct CGRect)textFirstRect;	// IMP=0x000000000094e3dc
- (_Bool)_selectionAtDocumentStart;	// IMP=0x000000000094e318
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;	// IMP=0x000000000094e259
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 withBoundary:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000094df0d
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000094def6
- (void)beginSelectionInDirection:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000094ddbf
- (void)selectTextWithGranularity:(long long)arg1 atPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000094dbfd
- (void)moveSelectionAtBoundary:(long long)arg1 inDirection:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000094da6f
- (void)selectPositionAtBoundary:(long long)arg1 inDirection:(long long)arg2 fromPoint:(struct CGPoint)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000094d89d
- (void)_selectPositionAtPoint:(struct CGPoint)arg1 stayingWithinFocusedElement:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000094d721
- (void)selectPositionAtPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000094d6bf
- (_Bool)_handleTapOverInteractiveControl:(struct CGPoint)arg1;	// IMP=0x000000000094d662
- (void)requestPreferredArrowDirectionForEditMenuWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000094d40b
- (void)_internalRequestTextRectsForString:(id)arg1 completion:(void *)arg2;	// IMP=0x000000000094d285
- (void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000094d0a5
@property(readonly, nonatomic) const void *autocorrectionData;
- (void)moveByOffset:(long long)arg1;	// IMP=0x000000000094cfc3
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;	// IMP=0x000000000094ce31
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3 withFlags:(long long)arg4;	// IMP=0x000000000094ccd1
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;	// IMP=0x000000000094c74a
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;	// IMP=0x000000000094c732
- (_Bool)_hasFocusedElement;	// IMP=0x000000000094c71a
- (void)_didPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x000000000094c6fb
- (void)_willPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x000000000094c6dc
- (_Bool)_handleDOMPasteRequestWithResult:(unsigned char)arg1;	// IMP=0x000000000094c4c7
- (void)_accessibilityClearSelection;	// IMP=0x000000000094c48e
- (void)_accessibilityStoreSelection;	// IMP=0x000000000094c455
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000094c2c0
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2;	// IMP=0x000000000094c2ab
- (void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)arg1 withGranularity:(long long)arg2;	// IMP=0x000000000094c1de
- (void)accessibilityRetrieveSpeakSelectionContent;	// IMP=0x000000000094c0b9
- (void)_defineForWebView:(id)arg1;	// IMP=0x000000000094bfeb
- (void)toggleUnderlineForWebView:(id)arg1;	// IMP=0x000000000094bf7a
- (void)toggleItalicsForWebView:(id)arg1;	// IMP=0x000000000094bf09
- (void)toggleBoldfaceForWebView:(id)arg1;	// IMP=0x000000000094be98
- (_Bool)shouldSynthesizeKeyEvents;	// IMP=0x000000000094be6a
- (void)selectAllForWebView:(id)arg1;	// IMP=0x000000000094bdc9
- (void)selectForWebView:(id)arg1;	// IMP=0x000000000094bcd6
- (void)_pasteAsQuotationForWebView:(id)arg1;	// IMP=0x000000000094bbef
- (void)pasteForWebView:(id)arg1;	// IMP=0x000000000094bacc
- (void)cutForWebView:(id)arg1;	// IMP=0x000000000094bab3
- (void)copyForWebView:(id)arg1;	// IMP=0x000000000094b9d7
- (void)_keyboardDidRequestDismissal:(id)arg1;	// IMP=0x000000000094b99e
- (void)_willHideMenu:(id)arg1;	// IMP=0x000000000094b98a
- (id)targetForActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x000000000094b904
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x000000000094b8d1
- (_Bool)canPerformActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x000000000094afae
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x000000000094ae2e
- (_Bool)shouldAllowHighlightLinkCreation;	// IMP=0x000000000094ac78
- (void)tintColorDidChange;	// IMP=0x000000000094abab
- (void)_updateTextInputTraitsForInteractionTintColor;	// IMP=0x000000000094ab4e
- (id)_cascadeInteractionTintColor;	// IMP=0x000000000094a923
- (_Bool)_hasCustomTintColor;	// IMP=0x000000000094a741
- (id)selectionHighlightColor;	// IMP=0x000000000094a716
- (id)selectionBarColor;	// IMP=0x000000000094a6eb
- (id)insertionPointColor;	// IMP=0x000000000094a6c0
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x000000000094a3dd
- (void)toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x000000000094a3cb
- (void)_setTextColorForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x000000000094a23f
- (void)_setFontSizeForWebView:(double)arg1 sender:(id)arg2;	// IMP=0x000000000094a1b8
- (void)_setFontForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x0000000000949f79
- (void)decreaseSizeForWebView:(id)arg1;	// IMP=0x0000000000949e89
- (void)increaseSizeForWebView:(id)arg1;	// IMP=0x0000000000949d99
- (void)_toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x0000000000949cbd
- (void)_changeListTypeForWebView:(id)arg1;	// IMP=0x0000000000949ca8
- (void)_decreaseListLevelForWebView:(id)arg1;	// IMP=0x0000000000949c93
- (void)_increaseListLevelForWebView:(id)arg1;	// IMP=0x0000000000949c7e
- (void)pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x0000000000949c6c
- (void)_pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x0000000000949b90
- (void)alignJustifiedForWebView:(id)arg1;	// IMP=0x0000000000949b7e
- (void)_alignJustifiedForWebView:(id)arg1;	// IMP=0x0000000000949aa2
- (void)alignCenterForWebView:(id)arg1;	// IMP=0x0000000000949a90
- (void)_alignCenterForWebView:(id)arg1;	// IMP=0x00000000009499b4
- (void)alignRightForWebView:(id)arg1;	// IMP=0x00000000009499a2
- (void)_alignRightForWebView:(id)arg1;	// IMP=0x00000000009498c6
- (void)alignLeftForWebView:(id)arg1;	// IMP=0x00000000009498b4
- (void)_alignLeftForWebView:(id)arg1;	// IMP=0x00000000009497d8
- (void)outdentForWebView:(id)arg1;	// IMP=0x00000000009497c6
- (void)_outdentForWebView:(id)arg1;	// IMP=0x00000000009496ea
- (void)indentForWebView:(id)arg1;	// IMP=0x00000000009496d8
- (void)_indentForWebView:(id)arg1;	// IMP=0x00000000009495fc
- (void)insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x00000000009495ea
- (void)_insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x000000000094950e
- (void)insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x00000000009494fc
- (void)_insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x0000000000949420
- (void)insertUnorderedListForWebView:(id)arg1;	// IMP=0x000000000094940e
- (void)_insertUnorderedListForWebView:(id)arg1;	// IMP=0x0000000000949332
- (void)insertOrderedListForWebView:(id)arg1;	// IMP=0x0000000000949320
- (void)_insertOrderedListForWebView:(id)arg1;	// IMP=0x0000000000949244
- (void)replaceForWebView:(id)arg1;	// IMP=0x000000000094920c
- (void)transliterateChineseForWebView:(id)arg1;	// IMP=0x00000000009491a9
- (void)_transliterateChineseForWebView:(id)arg1;	// IMP=0x00000000009490db
- (void)promptForReplaceForWebView:(id)arg1;	// IMP=0x0000000000949078
- (void)_promptForReplaceForWebView:(id)arg1;	// IMP=0x0000000000948faa
- (void)replaceText:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000948e9d
- (_Bool)isReplaceAllowed;	// IMP=0x0000000000948e71
- (void)makeTextWritingDirectionRightToLeftForWebView:(id)arg1;	// IMP=0x0000000000948e57
- (void)makeTextWritingDirectionLeftToRightForWebView:(id)arg1;	// IMP=0x0000000000948e3d
- (void)makeTextWritingDirectionNaturalForWebView:(id)arg1;	// IMP=0x0000000000948e26
- (id)alternativesForSelectedText;	// IMP=0x0000000000948d0b
- (id)selectedText;	// IMP=0x0000000000948cd0
- (void)addShortcutForWebView:(id)arg1;	// IMP=0x0000000000948c13
- (void)_addShortcutForWebView:(id)arg1;	// IMP=0x0000000000948b45
- (void)translateForWebView:(id)arg1;	// IMP=0x0000000000948a70
- (void)_translateForWebView:(id)arg1;	// IMP=0x00000000009489a2
- (void)shareForWebView:(id)arg1;	// IMP=0x00000000009488e1
- (void)_shareForWebView:(id)arg1;	// IMP=0x0000000000948813
- (void)lookupForWebView:(id)arg1;	// IMP=0x000000000094877f
- (void)defineForWebView:(id)arg1;	// IMP=0x000000000094876d
- (void)_lookupForWebView:(id)arg1;	// IMP=0x000000000094869f
- (void)_pasteAndMatchStyle:(id)arg1;	// IMP=0x0000000000948638
- (void)_pasteAsQuotation:(id)arg1;	// IMP=0x00000000009485d1
- (void)_changeListType:(id)arg1;	// IMP=0x000000000094856a
- (void)_decreaseListLevel:(id)arg1;	// IMP=0x0000000000948503
- (void)_increaseListLevel:(id)arg1;	// IMP=0x000000000094849c
- (void)_insertNestedUnorderedList:(id)arg1;	// IMP=0x0000000000948435
- (void)_insertNestedOrderedList:(id)arg1;	// IMP=0x00000000009483ce
- (void)_insertUnorderedList:(id)arg1;	// IMP=0x0000000000948367
- (void)_insertOrderedList:(id)arg1;	// IMP=0x0000000000948300
- (void)_toggleStrikeThrough:(id)arg1;	// IMP=0x0000000000948299
- (void)_outdent:(id)arg1;	// IMP=0x0000000000948232
- (void)_indent:(id)arg1;	// IMP=0x00000000009481cb
- (void)_alignRight:(id)arg1;	// IMP=0x0000000000948164
- (void)_alignLeft:(id)arg1;	// IMP=0x00000000009480fd
- (void)_alignJustified:(id)arg1;	// IMP=0x0000000000948096
- (void)_alignCenter:(id)arg1;	// IMP=0x000000000094802f
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x0000000000947fc8
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x0000000000947f61
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x0000000000947efa
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x0000000000947e93
- (void)decreaseSize:(id)arg1;	// IMP=0x0000000000947e2c
- (void)increaseSize:(id)arg1;	// IMP=0x0000000000947dc5
- (void)toggleUnderline:(id)arg1;	// IMP=0x0000000000947d5e
- (void)toggleItalics:(id)arg1;	// IMP=0x0000000000947cf7
- (void)toggleBoldface:(id)arg1;	// IMP=0x0000000000947c90
- (void)selectAll:(id)arg1;	// IMP=0x0000000000947c29
- (void)select:(id)arg1;	// IMP=0x0000000000947bc2
- (void)replace:(id)arg1;	// IMP=0x0000000000947b5b
- (void)paste:(id)arg1;	// IMP=0x0000000000947af4
- (void)cut:(id)arg1;	// IMP=0x0000000000947a8d
- (void)copy:(id)arg1;	// IMP=0x0000000000947a26
- (void)_previousAccessoryTab:(id)arg1;	// IMP=0x00000000009479bf
- (void)_nextAccessoryTab:(id)arg1;	// IMP=0x0000000000947958
- (void)_transliterateChinese:(id)arg1;	// IMP=0x00000000009478f1
- (void)transliterateChinese:(id)arg1;	// IMP=0x000000000094788a
- (void)_share:(id)arg1;	// IMP=0x0000000000947823
- (void)share:(id)arg1;	// IMP=0x00000000009477bc
- (void)_promptForReplace:(id)arg1;	// IMP=0x0000000000947755
- (void)promptForReplace:(id)arg1;	// IMP=0x00000000009476ee
- (void)_translate:(id)arg1;	// IMP=0x0000000000947687
- (void)translate:(id)arg1;	// IMP=0x0000000000947620
- (void)_lookup:(id)arg1;	// IMP=0x00000000009475b9
- (void)lookup:(id)arg1;	// IMP=0x0000000000947552
- (void)_define:(id)arg1;	// IMP=0x00000000009474eb
- (void)define:(id)arg1;	// IMP=0x0000000000947484
- (void)_addShortcut:(id)arg1;	// IMP=0x000000000094741d
- (void)addShortcut:(id)arg1;	// IMP=0x00000000009473b6
- (id)supportedPasteboardTypesForCurrentSelection;	// IMP=0x0000000000947324
@property(readonly, nonatomic) UIView *inputAccessoryViewForWebView;
- (id)inputAccessoryView;	// IMP=0x00000000009472ad
@property(readonly, nonatomic) UITextInputAssistantItem *inputAssistantItemForWebView;
- (id)inputAssistantItem;	// IMP=0x000000000094725d
- (_Bool)requiresAccessoryView;	// IMP=0x00000000009471f0
- (_Bool)_elementTypeRequiresAccessoryView:(unsigned char)arg1;	// IMP=0x00000000009471b9
- (void)_didEndScrollingOrZooming;	// IMP=0x0000000000947152
- (void)scrollViewWillStartPanOrPinchGesture;	// IMP=0x00000000009470f8
- (void)_willStartScrollingOrZooming;	// IMP=0x00000000009470be
- (void)_positionInformationDidChange:(const void *)arg1;	// IMP=0x0000000000946dbd
- (void)_invalidateCurrentPositionInformation;	// IMP=0x0000000000946c1d
- (void)_internalClearSelection;	// IMP=0x0000000000946bb1
- (void)clearSelection;	// IMP=0x0000000000946aed
- (void)pasteWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000094699b
- (void)setUpTextSelectionAssistant;	// IMP=0x000000000094691b
- (void)_attemptSyntheticClickAtLocation:(struct CGPoint)arg1 modifierFlags:(long long)arg2;	// IMP=0x0000000000946873
- (void)_twoFingerDoubleTapRecognized:(id)arg1;	// IMP=0x00000000009467f4
- (void)_nonBlockingDoubleTapRecognized:(id)arg1;	// IMP=0x00000000009467b4
- (void)_resetIsDoubleTapPending;	// IMP=0x00000000009467a3
- (void)_doubleTapRecognized:(id)arg1;	// IMP=0x0000000000946679
- (void)_singleTapRecognized:(id)arg1;	// IMP=0x0000000000946430
- (void)_didCompleteSyntheticClick;	// IMP=0x000000000094633d
- (void)_didHandleTapAsHover;	// IMP=0x0000000000946326
- (void)_didNotHandleTapAsClick:(const struct IntPoint *)arg1;	// IMP=0x000000000094628f
- (void)_commitPotentialTapFailed;	// IMP=0x000000000094620d
- (void)_doubleTapDidFail:(id)arg1;	// IMP=0x0000000000946170
- (void)_keyboardDismissalGestureRecognized:(id)arg1;	// IMP=0x0000000000945fa8
- (void)_singleTapDidReset:(id)arg1;	// IMP=0x0000000000945f03
- (void)_singleTapIdentified:(id)arg1;	// IMP=0x0000000000945d31
- (void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;	// IMP=0x0000000000945bef
- (void)_longPressRecognized:(id)arg1;	// IMP=0x0000000000945b18
- (void)_twoFingerSingleTapGestureRecognized:(id)arg1;	// IMP=0x00000000009459c2
- (void)_doubleTapRecognizedForDoubleClick:(id)arg1;	// IMP=0x0000000000945903
- (void)_highlightLongPressRecognized:(id)arg1;	// IMP=0x000000000094570e
- (ObjectIdentifierGeneric_77a97677)nextTapIdentifier;	// IMP=0x00000000009456ce
- (id)webSelectionRects;	// IMP=0x00000000009455bc
- (id)webSelectionRectsForSelectionGeometries:(const void *)arg1;	// IMP=0x00000000009453bf
- (_Bool)textInteractionGesture:(long long)arg1 shouldBeginAtPoint:(struct CGPoint)arg2;	// IMP=0x000000000094512b
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;	// IMP=0x0000000000944fc6
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000944e50
- (_Bool)canShowNonEmptySelectionView;	// IMP=0x0000000000944e14
- (void)_fadeTapHighlightViewIfNeeded;	// IMP=0x0000000000944ce2
- (void)_finishInteraction;	// IMP=0x0000000000944cc5
- (void)_cancelInteraction;	// IMP=0x0000000000944c9d
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000094464a
- (_Bool)_isInterruptingDecelerationForScrollViewOrAncestor:(id)arg1;	// IMP=0x00000000009445c5
- (_Bool)_isPanningScrollViewOrAncestor:(id)arg1;	// IMP=0x0000000000944540
- (_Bool)_hasEnclosingScrollView:(id)arg1 matchingCriteria:(void *)arg2;	// IMP=0x00000000009444ab
- (_Bool)_shouldToggleSelectionCommandsAfterTapAt:(struct CGPoint)arg1;	// IMP=0x0000000000944400
- (_Bool)_pointIsInsideSelectionRect:(struct CGPoint)arg1 outBoundingRect:(struct FloatRect *)arg2;	// IMP=0x00000000009442bf
- (void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;	// IMP=0x000000000094401b
- (_Bool)_currentPositionInformationIsApproximatelyValidForRequest:(const struct InteractionInformationRequest *)arg1 radiusForApproximation:(int)arg2;	// IMP=0x0000000000943ff4
- (_Bool)_hasValidOutstandingPositionInformationRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x0000000000943fd0
- (_Bool)_currentPositionInformationIsValidForRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x0000000000943fa9
- (void)requestAsynchronousPositionInformationUpdate:(struct InteractionInformationRequest)arg1;	// IMP=0x0000000000943f19
- (_Bool)ensurePositionInformationIsUpToDate:(struct InteractionInformationRequest)arg1;	// IMP=0x0000000000943cfa
- (void)doAfterPositionInformationUpdate:(CDUnknownBlockType)arg1 forRequest:(struct InteractionInformationRequest)arg2;	// IMP=0x0000000000943af0
- (SEL)_actionForLongPress;	// IMP=0x0000000000943ad4
- (SEL)_actionForLongPressFromPositionInformation:(const void *)arg1;	// IMP=0x0000000000943a5d
- (void)_showDataDetectorsUIForPositionInformation:(const void *)arg1;	// IMP=0x0000000000943a40
- (void)_showDataDetectorsUI;	// IMP=0x0000000000943a24
- (void)_showLinkSheet;	// IMP=0x0000000000943a07
- (void)_showAttachmentSheet;	// IMP=0x0000000000943929
- (void)_showImageSheet;	// IMP=0x000000000094390c
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x00000000009438c6
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x000000000094385b
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x000000000094336f
- (id)textInteractionTapGestureRecognizer;	// IMP=0x00000000009431e2
- (id)textInteractionLoupeGestureRecognizer;	// IMP=0x0000000000943055
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;	// IMP=0x000000000094300f
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;	// IMP=0x0000000000942f8e
- (_Bool)_isContextMenuGestureRecognizerForFailureRelationships:(id)arg1;	// IMP=0x0000000000942f2d
- (struct CGRect)_selectionClipRect;	// IMP=0x0000000000942e4c
@property(readonly, nonatomic) UIView *inputViewForWebView;
- (id)inputView;	// IMP=0x0000000000942d89
- (void)_zoomToRevealFocusedElement;	// IMP=0x0000000000942c31
- (void)_keyboardDidShow;	// IMP=0x0000000000942b48
- (void)_keyboardWillShow;	// IMP=0x0000000000942b1c
- (struct FloatRect)rectToRevealWhenZoomingToFocusedElement;	// IMP=0x0000000000942a40
- (_Bool)_requiresKeyboardResetOnReload;	// IMP=0x0000000000942a38
- (_Bool)_requiresKeyboardWhenFirstResponder;	// IMP=0x00000000009429c7
- (_Bool)_disableAutomaticKeyboardUI;	// IMP=0x0000000000942990
- (_Bool)_shouldShowAutomaticKeyboardUIIgnoringInputMode;	// IMP=0x0000000000942940
- (_Bool)shouldShowAutomaticKeyboardUI;	// IMP=0x00000000009428e5
- (void)_scrollingNodeScrollingDidEnd:(ProcessQualified_62d510c5)arg1;	// IMP=0x0000000000942833
- (void)_scrollingNodeScrollingWillBegin:(ProcessQualified_62d510c5)arg1;	// IMP=0x0000000000942816
- (void)_didScroll;	// IMP=0x00000000009427db
- (void)_cancelTouchEventGestureRecognizer;	// IMP=0x00000000009427be
- (void)_cancelLongPressGestureRecognizer;	// IMP=0x00000000009427a1
- (void)_handleSmartMagnificationInformationForPotentialTap:(ObjectIdentifierGeneric_77a97677)arg1 renderRect:(const struct FloatRect *)arg2 fitEntireRect:(_Bool)arg3 viewportMinimumScale:(double)arg4 viewportMaximumScale:(double)arg5 nodeIsRootLevel:(_Bool)arg6;	// IMP=0x00000000009423a2
- (void)_disableDoubleTapGesturesDuringTapIfNecessary:(ObjectIdentifierGeneric_77a97677)arg1;	// IMP=0x0000000000942377
- (_Bool)_mayDisableDoubleTapGesturesDuringSingleTap;	// IMP=0x0000000000942367
- (void)_didGetTapHighlightForRequest:(ObjectIdentifierGeneric_77a97677)arg1 color:(const struct Color *)arg2 quads:(const void *)arg3 topLeftRadius:(const struct IntSize *)arg4 topRightRadius:(const struct IntSize *)arg5 bottomLeftRadius:(const struct IntSize *)arg6 bottomRightRadius:(const struct IntSize *)arg7 nodeHasBuiltInClickHandling:(_Bool)arg8;	// IMP=0x0000000000942150
- (void)_showTapHighlight;	// IMP=0x0000000000941f6a
@property(readonly, nonatomic) UIGestureRecognizer *imageAnalysisGestureRecognizer;
@property(readonly, nonatomic) struct CGRect tapHighlightViewRect;
- (void)_updateTapHighlight;	// IMP=0x000000000094168d
- (_Bool)_isTouchEndDeferringGesture:(id)arg1;	// IMP=0x000000000094165d
- (_Bool)_isTouchStartDeferringGesture:(id)arg1;	// IMP=0x000000000094162d
- (void)_doneDeferringTouchEnd:(_Bool)arg1;	// IMP=0x0000000000941503
- (void)_doneDeferringTouchMove:(_Bool)arg1;	// IMP=0x00000000009414e6
- (void)_doneDeferringTouchStart:(_Bool)arg1;	// IMP=0x00000000009412fe
- (id)_touchEndDeferringGestures;	// IMP=0x0000000000941268
- (id)_touchStartDeferringGestures;	// IMP=0x00000000009411d2
@property(readonly, nonatomic) NSArray *deferringGestures;
@property(readonly, nonatomic) void *gestureRecognizerConsistencyEnforcer;
@property(readonly, nonatomic) WKTouchEventsGestureRecognizer *touchEventGestureRecognizer;
- (void)_touchEvent:(const void *)arg1 preventsNativeGestures:(_Bool)arg2;	// IMP=0x000000000094106b
- (void)_inspectorNodeSearchRecognized:(id)arg1;	// IMP=0x0000000000940faa
- (void)_resetPanningPreventionFlags;	// IMP=0x0000000000940f8e
- (id)touchActionActiveTouches;	// IMP=0x0000000000940f71
- (_Bool)gestureRecognizerMayDoubleTapToZoomWebView:(id)arg1;	// IMP=0x0000000000940f4c
- (_Bool)gestureRecognizerMayPinchToZoomWebView:(id)arg1;	// IMP=0x0000000000940e65
- (_Bool)gestureRecognizerMayPanWebView:(id)arg1;	// IMP=0x0000000000940dd5
- (_Bool)gestureRecognizer:(id)arg1 shouldReceivePress:(id)arg2;	// IMP=0x0000000000940dcd
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000940ca7
- (void)_handleTouchActionsForTouchEvent:(const void *)arg1;	// IMP=0x0000000000940b4b
- (void)_touchEventsRecognized:(id)arg1;	// IMP=0x0000000000940427
- (_Bool)_gestureRecognizerCanBePreventedByTouchEvents:(id)arg1;	// IMP=0x0000000000940399
- (_Bool)_touchEventsMustRequireGestureRecognizerToFail:(id)arg1;	// IMP=0x0000000000940302
- (optional_0a2cbaca)activeTouchIdentifierForGestureRecognizer:(id)arg1;	// IMP=0x0000000000940147
- (void)cancelPointersForGestureRecognizer:(id)arg1;	// IMP=0x000000000093fe4e
- (_Bool)resignFirstResponderForWebView;	// IMP=0x000000000093fc6c
- (void)endEditingAndUpdateFocusAppearanceWithReason:(long long)arg1;	// IMP=0x000000000093fb64
- (_Bool)resignFirstResponder;	// IMP=0x000000000093fb43
- (_Bool)becomeFirstResponderForWebView;	// IMP=0x000000000093f959
- (_Bool)becomeFirstResponder;	// IMP=0x000000000093f938
- (_Bool)canBecomeFirstResponderForWebView;	// IMP=0x000000000093f924
- (_Bool)canBecomeFirstResponder;	// IMP=0x000000000093f914
- (void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;	// IMP=0x000000000093f8d4
- (void)_cancelPreviousResetInputViewDeferralRequest;	// IMP=0x000000000093f8ae
- (void)_endEditing;	// IMP=0x000000000093f850
- (_Bool)setIsEditable:(_Bool)arg1;	// IMP=0x000000000093f834
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,R,N,GisEditable

@property(readonly, nonatomic) _Bool shouldHideSelectionWhenScrolling;
@property(readonly, nonatomic) struct CGPoint lastInteractionLocation;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) const void *positionInformation;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000093f592
- (void)_disableInspectorNodeSearch;	// IMP=0x000000000093f52a
- (void)_enableInspectorNodeSearch;	// IMP=0x000000000093f4a0
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000093f344
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x000000000093f296
- (void)cancelAutoscroll;	// IMP=0x000000000093f25d
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x000000000093f163
- (struct CGRect)unobscuredContentRect;	// IMP=0x000000000093f137
- (id)_scroller;	// IMP=0x000000000093f116
- (double)inverseScale;	// IMP=0x000000000093f0bf
@property(readonly, nonatomic) UIView *unscaledView;
- (void)_updateLongPressAndHighlightLongPressGestures;	// IMP=0x000000000093f061
- (void)_didChangeLinkPreviewAvailability;	// IMP=0x000000000093f04f
- (void)_addDefaultGestureRecognizers;	// IMP=0x000000000093edfa
- (void)_removeDefaultGestureRecognizers;	// IMP=0x000000000093eba5
- (void)_cancelPendingKeyEventHandlers:(_Bool)arg1;	// IMP=0x000000000093e9da
- (void)cleanUpInteractionPreviewContainers;	// IMP=0x000000000093e9c8
- (void)cleanUpInteraction;	// IMP=0x000000000093de88
- (void)setUpInteraction;	// IMP=0x000000000093ceb4
- (void)_updateRuntimeProtocolConformanceIfNeeded;	// IMP=0x000000000093cd82
- (_Bool)_shouldUseTextCursorDragAnimator;	// IMP=0x000000000093cd7a
- (_Bool)_shouldUseUIContextMenuAsyncConfiguration;	// IMP=0x000000000093cd72
@property(readonly, nonatomic) _Bool shouldUseAsyncInteractions;
- (void)_createAndConfigureLongPressGestureRecognizer;	// IMP=0x000000000093cc77
- (void)_createAndConfigureHighlightLongPressGestureRecognizer;	// IMP=0x000000000093cbdd
- (void)_createAndConfigureDoubleTapGestureRecognizer;	// IMP=0x000000000093cabf
- (id)_formInputSession;	// IMP=0x000000000093caae
@property(readonly, nonatomic) _Bool preventsPanningInYAxis;
@property(readonly, nonatomic) _Bool preventsPanningInXAxis;
@property(readonly, nonatomic) UIWKTextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) _Bool isShowingDataListSuggestions;
- (void)_setDataListSuggestionsControl:(id)arg1;	// IMP=0x000000000095d97a
- (void)_selectDataListOption:(long long)arg1;	// IMP=0x000000000095d94c
- (void)dismissFormAccessoryView;	// IMP=0x000000000095d907
- (void)_simulateSelectionStart;	// IMP=0x000000000095d8e8
@property(readonly, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer;
- (void)_dismissContactPickerWithContacts:(id)arg1;	// IMP=0x000000000095d8d1
- (id)_contentsOfUserInterfaceItem:(id)arg1;	// IMP=0x000000000095d6ef
- (double)timePickerValueMinute;	// IMP=0x000000000095d68e
- (double)timePickerValueHour;	// IMP=0x000000000095d62d
- (void)setTimePickerValueToHour:(long long)arg1 minute:(long long)arg2;	// IMP=0x000000000095d5bc
@property(readonly, nonatomic) NSString *formInputLabel;
@property(readonly, nonatomic) NSString *selectFormPopoverTitle;
@property(readonly, nonatomic) NSString *textContentTypeForTesting;
- (void)setSelectedColorForColorPicker:(id)arg1;	// IMP=0x000000000095d4d2
- (_Bool)selectFormAccessoryHasCheckedItemAtRow:(long long)arg1;	// IMP=0x000000000095d474
- (void)selectFormAccessoryPickerRow:(long long)arg1;	// IMP=0x000000000095d413
- (void)_simulateLongPressActionAtLocation:(struct CGPoint)arg1;	// IMP=0x000000000095d1f4
- (void)_simulateElementAction:(long long)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x000000000095cfb4
- (void)_simulateTextEntered:(id)arg1;	// IMP=0x000000000095cfa2
@property(readonly, nonatomic) WKFormSelectControl *selectControl;
@property(readonly, nonatomic) WKDateTimeInputControl *dateTimeInputControl;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(CDUnknownBlockType)arg1;	// IMP=0x000000000095cf0b
- (void)selectWordBackwardForTesting;	// IMP=0x000000000095cec7

// Remaining properties
@property unsigned long long allowedWritingToolsResultOptions;
// Preceding property had unknown attributes: ?
// Original attribute string: TQ,?

@property(nonatomic) long long autocapitalizationType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long autocorrectionType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,N

@property(readonly) unsigned long long hash;
@property(nonatomic) long long inlinePredictionType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(readonly, nonatomic) id insertDictationResultPlaceholder;
// Preceding property had unknown attributes: ?
// Original attribute string: T@,?,R,N

@property(readonly, nonatomic) _Bool isEditable;
@property(nonatomic) long long keyboardAppearance;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long keyboardType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long mathExpressionCompletionType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UITextInputPasswordRules",?,C,N

@property(nonatomic) long long returnKeyType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,N,GisSecureTextEntry

@property(nonatomic) long long selectionAffinity;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long smartDashesType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long smartInsertDeleteType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long smartQuotesType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(nonatomic) long long spellCheckingType;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?,N

@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,C,N

@property(readonly, nonatomic) UIView *textInputView;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UIView",?,R,N

@property long long writingToolsBehavior;
// Preceding property had unknown attributes: ?
// Original attribute string: Tq,?


@end

