//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, NSURL;

__attribute__((visibility("hidden")))
@interface FSNode : NSObject
{
    NSURL *_url;	// 8 = 0x8
    unsigned long long _cacheExpiration;	// 16 = 0x10
    unsigned int _isDirectory:2;	// 24 = 0x18
    unsigned int _hasReferringAliasNode:1;	// 24 = 0x18
    unsigned int _canUseFileCache:1;	// 24 = 0x18
    unsigned int _isInitialized:1;	// 24 = 0x18
}

+ (id)systemDataVolumeNode;	// IMP=0x00100000000114b6
+ (id)prebootVolumeNode;	// IMP=0x00100000000113e8
+ (id)rootVolumeNode;	// IMP=0x001000000001131a
+ (id)_resolvedNodeFromAliasFile:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x001000000001034b
+ (id)_resolvedURLFromAliasFile:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x00100000000101e0
+ (_Bool)supportsSecureCoding;	// IMP=0x001000000000eedd
+ (_Bool)canReadMetadataOfURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x001000000001333e
+ (_Bool)canWriteURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x0010000000013325
+ (_Bool)canReadURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x001000000001330c
+ (_Bool)canReadMetadataOfURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x0010000000013111
+ (_Bool)canWriteURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x00100000000130f8
+ (_Bool)canReadURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x00100000000130df
+ (_Bool)canAccessURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2 operation:(const char *)arg3;	// IMP=0x0010000000012f18
+ (_Bool)canAccessURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2 operation:(const char *)arg3;	// IMP=0x0010000000012d8b
+ (_Bool)getFileSystemRepresentation:(char [1024])arg1 forBookmarkData:(id)arg2;	// IMP=0x00100000000149d8
+ (_Bool)isBookmarkDataFull:(id)arg1;	// IMP=0x0010000000014950
+ (_Bool)getVolumeIdentifier:(unsigned long long *)arg1 forBookmarkData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000148c8
+ (id)nameForBookmarkData:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000014734
+ (id)pathForBookmarkData:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000014509
+ (unsigned char)compareBookmarkData:(id)arg1 toBookmarkData:(id)arg2;	// IMP=0x001000000001428b
+ (id)injectSimulatorRootIntoBookmarkData:(id)arg1;	// IMP=0x0010000000013e98
+ (id)removeSimulatorRootFromBookmarkData:(id)arg1;	// IMP=0x0010000000013d06
+ (id)simulatorRootPath;	// IMP=0x0010000000013bbf
- (void).cxx_destruct;	// IMP=0x0000000000012a85
- (_Bool)getWriterBundleIdentifier:(id *)arg1 error:(id *)arg2;	// IMP=0x0000000000012a36
- (_Bool)getHFSType:(unsigned int *)arg1 creator:(unsigned int *)arg2 error:(id *)arg3;	// IMP=0x0000000000012737
- (_Bool)getLength:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x00000000000126ac
- (_Bool)getContentModificationDate:(double *)arg1 error:(id *)arg2;	// IMP=0x0000000000012698
- (_Bool)getCreationDate:(double *)arg1 error:(id *)arg2;	// IMP=0x0000000000012420
- (id)bundleIdentifierWithContext:(struct LSContext *)arg1 error:(id *)arg2;	// IMP=0x0000000000012188
- (id)bundleIdentifierWithError:(id *)arg1;	// IMP=0x0000000000012171
- (id)bundleInfoDictionaryWithError:(id *)arg1;	// IMP=0x0000000000012012
- (struct __CFBundle *)copyCFBundleWithError:(id *)arg1;	// IMP=0x0000000000011edc
- (_Bool)getOwnerUID:(unsigned int *)arg1 error:(id *)arg2;	// IMP=0x0000000000011e52
- (_Bool)getFileIdentifier:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x0000000000011dc7
- (_Bool)getInodeNumber:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x0000000000011d3c
- (_Bool)getDeviceNumber:(int *)arg1 error:(id *)arg2;	// IMP=0x0000000000011cb2
@property(readonly, getter=isAVCHDCollection) _Bool AVCHDCollection;
@property(readonly, nonatomic, getter=isOnLocalVolume) _Bool onLocalVolume; // @dynamic onLocalVolume;
@property(readonly, nonatomic, getter=isOnDiskImage) _Bool onDiskImage; // @dynamic onDiskImage;
@property(readonly, nonatomic, getter=isSecuredSystemContent) _Bool securedSystemContent; // @dynamic securedSystemContent;
- (_Bool)getVolumeIdentifier:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x00000000000115f9
@property(readonly, nonatomic, getter=isMountTrigger) _Bool mountTrigger; // @dynamic mountTrigger;
@property(readonly, nonatomic, getter=isVolume) _Bool volume; // @dynamic volume;
- (id)extensionWithError:(id *)arg1;	// IMP=0x0000000000011121
- (id)nameWithError:(id *)arg1;	// IMP=0x0000000000010fc4
- (id)canonicalPathWithError:(id *)arg1;	// IMP=0x0000000000010faa
- (id)pathWithError:(id *)arg1;	// IMP=0x0000000000010f93
- (_Bool)getFileSystemRepresentation:(char [1024])arg1 error:(id *)arg2;	// IMP=0x0000000000010ed9
- (id)canonical:(_Bool)arg1 pathWithError:(id *)arg2;	// IMP=0x0000000000010cf9
@property(readonly, nonatomic) _Bool hasHiddenExtension; // @dynamic hasHiddenExtension;
@property(readonly, nonatomic, getter=isHidden) _Bool hidden; // @dynamic hidden;
@property(readonly, nonatomic, getter=isRegularFile) _Bool regularFile; // @dynamic regularFile;
@property(readonly, nonatomic) _Bool hasPackageBit; // @dynamic hasPackageBit;
@property(readonly, nonatomic, getter=isAliasFile) _Bool aliasFile; // @dynamic aliasFile;
@property(readonly, nonatomic, getter=isSymbolicLink) _Bool symbolicLink; // @dynamic symbolicLink;
@property(readonly, nonatomic, getter=isResolvable) _Bool resolvable; // @dynamic resolvable;
@property(readonly, nonatomic, getter=isExecutable) _Bool executable; // @dynamic executable;
@property(readonly, nonatomic, getter=isExecutableModeFile) _Bool executableModeFile; // @dynamic executableModeFile;
@property(readonly, nonatomic, getter=isBusyDirectory) _Bool busyDirectory; // @dynamic busyDirectory;
@property(readonly, nonatomic, getter=isDirectory) _Bool directory; // @dynamic directory;
- (_Bool)getIsDirectory_NoIO:(_Bool *)arg1;	// IMP=0x000000000001072b
- (id)temporaryDirectoryNodeWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x0000000000010630
- (id)resolvedNodeWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x0000000000010533
- (void)setReferringAliasNode:(id)arg1;	// IMP=0x00000000000101a1
- (id)referringAliasNode;	// IMP=0x0000000000010176
- (id)diskImageURLWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x000000000001010c
- (id)volumeNodeWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x000000000001006c
- (id)childNodeWithRelativePath:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000fd93
- (_Bool)childNodeWithRelativePathExists:(id)arg1;	// IMP=0x000000000000fd58
- (_Bool)checkResourceIsReachableAndReturnError:(id *)arg1;	// IMP=0x000000000000fd2f
- (_Bool)getCachedResourceValueIfPresent:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000fd17
- (void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000000fcaa
- (_Bool)getTemporaryResourceValue:(id *)arg1 forKey:(id)arg2;	// IMP=0x000000000000fc92
- (void)removeCachedResourceValueForKey:(id)arg1;	// IMP=0x000000000000fc3a
- (_Bool)setResourceValue:(id)arg1 forKey:(id)arg2 options:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x000000000000fa9c
- (_Bool)getResourceValue:(id *)arg1 forKey:(id)arg2 options:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x000000000000f6ff
- (void)clearURLPropertyCacheIfStale;	// IMP=0x000000000000f660
- (id)initWithConfigurationString:(int)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000f579
- (id)initWithDirectory:(unsigned long long)arg1 inDomain:(unsigned long long)arg2 lastPathComponent:(id)arg3 createIntermediateDirectories:(_Bool)arg4 flags:(unsigned int)arg5 error:(id *)arg6;	// IMP=0x000000000000f2a2
- (id)initWithFileSystemRepresentation:(const char *)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000f118
- (id)initWithPath:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000ef91
- (id)URL;	// IMP=0x000000000000eeed
@property(readonly, nonatomic) _Bool canIssueIO;
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000000ecc7
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000000ebff
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000000e9ec
- (id)redactedDescription;	// IMP=0x000000000000e997
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000000e653
- (void)prepareForReuse;	// IMP=0x000000000000e58c
- (id)initWithURL:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000e03c
- (_Bool)setFinderInfo:(const CDUnion_739f5cf2 *)arg1 error:(id *)arg2;	// IMP=0x0000000000012be5
- (_Bool)getFinderInfo:(CDUnion_739f5cf2 *)arg1 error:(id *)arg2;	// IMP=0x0000000000012a95
- (_Bool)canReadMetadataFromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000013295
- (_Bool)canWriteFromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x000000000001321e
- (_Bool)canReadFromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x00000000000131a7
- (_Bool)canReadMetadataWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000013068
- (_Bool)canWriteWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000012ff1
- (_Bool)canReadWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000012f7a
- (_Bool)setExtendedAttribute:(id)arg1 name:(id)arg2 options:(int)arg3 error:(id *)arg4;	// IMP=0x00000000000138cb
- (id)extendedAttributeWithName:(id)arg1 options:(int)arg2 error:(id *)arg3;	// IMP=0x00000000000133d4
- (id)initByResolvingBookmarkData:(id)arg1 relativeToNode:(id)arg2 bookmarkDataIsStale:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x00000000000144dc
- (id)initByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToNode:(id)arg3 bookmarkDataIsStale:(_Bool *)arg4 error:(id *)arg5;	// IMP=0x00000000000142a9
- (id)bookmarkDataWithOptions:(unsigned long long)arg1 relativeToNode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000014018
- (id)bookmarkDataRelativeToNode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000013ffb

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) Class superclass;

@end

