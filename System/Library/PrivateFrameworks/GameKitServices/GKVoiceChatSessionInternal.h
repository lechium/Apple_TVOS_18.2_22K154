//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GKInterfaceListener, GKRWLock, GKVoiceChatServiceFocus, NSArray, NSMutableArray, NSMutableDictionary, NSString, VoiceChatSessionRoster;
@protocol GKVoiceChatPeerInfoProvider><GKVoiceChatReliableChannel, GKVoiceChatSessionDelegate, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface GKVoiceChatSessionInternal : NSObject
{
    NSString *_sessionName;	// 8 = 0x8
    unsigned int _conferenceID;	// 16 = 0x10
    _Bool activeSession;	// 20 = 0x14
    float sessionVolume;	// 24 = 0x18
    _Bool focusCallbacks;	// 28 = 0x1c
    id <GKVoiceChatPeerInfoProvider><GKVoiceChatReliableChannel> _gameStateSession;	// 32 = 0x20
    NSString *_peerID;	// 40 = 0x28
    NSMutableArray *_connectedPeers;	// 48 = 0x30
    NSMutableArray *_connectedVoicePeers;	// 56 = 0x38
    NSMutableArray *_connectedFocusPeers;	// 64 = 0x40
    NSMutableArray *_mutedPeers;	// 72 = 0x48
    NSMutableArray *_myPausedList;	// 80 = 0x50
    NSMutableDictionary *_peerChannelQuality;	// 88 = 0x58
    _Bool needsRecalculateGoodChannels;	// 96 = 0x60
    int goodChannels;	// 100 = 0x64
    unsigned int talkingPeersLimit;	// 104 = 0x68
    _Bool isUsingSuppression;	// 108 = 0x6c
    unsigned int _sessionState;	// 112 = 0x70
    GKRWLock *_rwLock;	// 120 = 0x78
    GKVoiceChatServiceFocus *_vcService;	// 128 = 0x80
    VoiceChatSessionRoster *_roster;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_sendQueue;	// 144 = 0x90
    id <GKVoiceChatSessionDelegate> delegate;	// 152 = 0x98
    unsigned int congestionState;	// 160 = 0xa0
    id _publicWrapper;	// 168 = 0xa8
    GKInterfaceListener *_wifiListener;	// 176 = 0xb0
    _Bool _currentWifiState;	// 184 = 0xb8
}

+ (void)brokenHash:(id)arg1 response:(char *)arg2;	// IMP=0x0010000000059dcf
@property _Bool isUsingSuppression;
@property unsigned int talkingPeersLimit;
- (unsigned int)peerCount;	// IMP=0x000000000005cdcd
- (void)parseConnectedPeers:(id)arg1;	// IMP=0x000000000005ccf0
- (void)sendConnectedPeers;	// IMP=0x000000000005cafe
- (void)updatedConnectedPeers:(id)arg1;	// IMP=0x000000000005c8ee
- (void)updatedFocusPeers:(id)arg1;	// IMP=0x000000000005c4f3
- (void)removeFromFocusPausedList:(id)arg1;	// IMP=0x000000000005c49c
- (void)addPeerToFocusPausedList:(id)arg1;	// IMP=0x000000000005c412
- (void)pruneBadLinks;	// IMP=0x000000000005c144
- (void)unPauseAll;	// IMP=0x000000000005bf9f
- (void)pauseAll;	// IMP=0x000000000005be4c
- (void)parseMutedPeers:(id)arg1 forPeer:(id)arg2;	// IMP=0x000000000005bd72
- (void)sendMutedPeers;	// IMP=0x000000000005bb85
- (void)updatedMutedPeers:(id)arg1 forPeer:(id)arg2;	// IMP=0x000000000005b9ad
- (void)updatedFocusID:(unsigned int)arg1;	// IMP=0x000000000005b6c8
- (void)updatedSubscribedBeaconList:(id)arg1;	// IMP=0x000000000005b075
- (void)handlePeerDisconnected:(id)arg1;	// IMP=0x000000000005af9f
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000005af57
@property float sessionVolume;
@property(readonly, nonatomic) unsigned int conferenceID;
@property(readonly, nonatomic) NSString *sessionName;
@property(getter=isActiveSession) _Bool activeSession;
@property(readonly) NSArray *peerList;
- (_Bool)getMuteStateForPeer:(id)arg1;	// IMP=0x000000000005add5
- (void)setMute:(_Bool)arg1 forPeer:(id)arg2;	// IMP=0x000000000005ad13
- (void)stopSessionInternal;	// IMP=0x000000000005aa32
- (void)stopSession;	// IMP=0x000000000005a9bc
- (void)startSessionInternal;	// IMP=0x000000000005a449
- (void)startSession;	// IMP=0x000000000005a269
- (void)cleanupProc:(id)arg1;	// IMP=0x000000000005a18d
- (void)cleanup;	// IMP=0x000000000005a11a
- (void)dealloc;	// IMP=0x0000000000059f77
- (id)decodePeerID:(id)arg1;	// IMP=0x0000000000059f22
- (id)encodePeerID:(id)arg1;	// IMP=0x0000000000059ecf
- (void)calculateConferenceID;	// IMP=0x0000000000059e64
- (id)initWithGameStateSession:(id)arg1 publicWrapper:(id)arg2 sessionName:(id)arg3;	// IMP=0x0000000000059b80
- (void)networkStateDidChange;	// IMP=0x0000000000059b7a
- (void)interfaceStateDidChangeWithWifiUp:(_Bool)arg1 cellUp:(_Bool)arg2;	// IMP=0x0000000000059a22
@property(readonly, nonatomic) id <GKVoiceChatPeerInfoProvider><GKVoiceChatReliableChannel> gameStateSession;
- (void)session:(id)arg1 didReceiveOOBAudioPacket:(id)arg2 fromPeerID:(id)arg3;	// IMP=0x000000000005d01d
- (void)session:(id)arg1 peer:(id)arg2 didChangeState:(unsigned int)arg3;	// IMP=0x000000000005ce33
- (void)session:(id)arg1 didReceiveAudioPacket:(id)arg2 fromPeerID:(id)arg3;	// IMP=0x000000000005ce2d
- (void)informClientVoiceChatFocusChange:(id)arg1;	// IMP=0x000000000005d460
- (void)informClientVoiceChatSilent:(id)arg1;	// IMP=0x000000000005d435
- (void)informClientVoiceChatSpeaking:(id)arg1;	// IMP=0x000000000005d40a
- (void)informClientVoiceChatDidStop:(id)arg1;	// IMP=0x000000000005d3df
- (void)informClientVoiceChatCouldNotConnect:(id)arg1;	// IMP=0x000000000005d363
- (void)informClientVoiceChatConnecting:(id)arg1;	// IMP=0x000000000005d2e4
- (void)informClientVoiceChatDidStart:(id)arg1;	// IMP=0x000000000005d2bc
@property id <GKVoiceChatSessionDelegate> delegate;
- (void)voiceChatService:(id)arg1 didReceiveInvitationFromParticipantID:(id)arg2 callID:(unsigned int)arg3;	// IMP=0x000000000005d8f4
- (void)voiceChatService:(id)arg1 didStopWithParticipantID:(id)arg2 error:(id)arg3;	// IMP=0x000000000005d868
- (void)voiceChatService:(id)arg1 didNotStartWithParticipantID:(id)arg2 error:(id)arg3;	// IMP=0x000000000005d760
- (void)voiceChatService:(id)arg1 didStartWithParticipantID:(id)arg2;	// IMP=0x000000000005d5ec
- (id)participantID;	// IMP=0x000000000005d5d6
- (void)voiceChatService:(id)arg1 sendData:(id)arg2 toParticipantID:(id)arg3;	// IMP=0x000000000005d48b
- (void)didStopSpeaking:(id)arg1;	// IMP=0x000000000005db48
- (void)didStartSpeaking:(id)arg1;	// IMP=0x000000000005daa2
- (void)lossRate:(float)arg1 forParticipantID:(id)arg2;	// IMP=0x000000000005de0d
- (int)goodChannels;	// IMP=0x000000000005dddf
- (int)calculateChannelQualities;	// IMP=0x000000000005dbee

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

