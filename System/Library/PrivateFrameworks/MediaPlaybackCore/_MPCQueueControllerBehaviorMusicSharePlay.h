//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVPlayerPlaybackCoordinator, ICLiveLink, ICSharedListeningQueue, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackRequestEnvironment, MPPropertySet, MPRequestResponseController, NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableSet, NSString;
@protocol MPCQueueControllerBehaviorHost, MPCQueueControllerBehaviorMusicDelegate, MPCQueueControllerBehaviorMusicSharePlayDelegate, MPCQueueControllerExternalSyncBehaviorHost;

__attribute__((visibility("hidden")))
@interface _MPCQueueControllerBehaviorMusicSharePlay : NSObject
{
    AVPlayerPlaybackCoordinator *_playbackCoordinator;	// 8 = 0x8
    CDUnknownBlockType _loadingCompletionHandler;	// 16 = 0x10
    unsigned short _activeItemFlags;	// 24 = 0x18
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;	// 32 = 0x20
    _Bool _liveLinkStopped;	// 40 = 0x28
    _Bool _queueRanDry;	// 41 = 0x29
    _Bool _hasUserMutations;	// 42 = 0x2a
    _Bool _joiningAsInitiator;	// 43 = 0x2b
    NSString *_sessionID;	// 48 = 0x30
    id <MPCQueueControllerBehaviorHost> _host;	// 56 = 0x38
    id <MPCQueueControllerExternalSyncBehaviorHost> _externalSyncHost;	// 64 = 0x40
    id <MPCQueueControllerBehaviorMusicDelegate> _musicBehaviorDelegate;	// 72 = 0x48
    long long _repeatType;	// 80 = 0x50
    long long _shuffleType;	// 88 = 0x58
    id <MPCQueueControllerBehaviorMusicSharePlayDelegate> _musicSharePlayBehaviorDelegate;	// 96 = 0x60
    MPPropertySet *_requestedPropertySetForEvents;	// 104 = 0x68
    ICLiveLink *_liveLink;	// 112 = 0x70
    ICSharedListeningQueue *_queue;	// 120 = 0x78
    MPRequestResponseController *_requestController;	// 128 = 0x80
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;	// 136 = 0x88
    NSMutableArray *_pendingActions;	// 144 = 0x90
    NSMutableSet *_knownContainerIDs;	// 152 = 0x98
    NSDictionary *_resultsIndexPathMap;	// 160 = 0xa0
    NSArray *_enumeratorContentItemIDs;	// 168 = 0xa8
    NSHashTable *_activeModelGenericAVItems;	// 176 = 0xb0
}

+ (_Bool)canLoadQueue:(id)arg1 reason:(id *)arg2;	// IMP=0x0010000000272c22
- (void).cxx_destruct;	// IMP=0x000000000026d3df
@property(retain, nonatomic) NSHashTable *activeModelGenericAVItems; // @synthesize activeModelGenericAVItems=_activeModelGenericAVItems;
@property(nonatomic) _Bool joiningAsInitiator; // @synthesize joiningAsInitiator=_joiningAsInitiator;
@property(copy, nonatomic) NSArray *enumeratorContentItemIDs; // @synthesize enumeratorContentItemIDs=_enumeratorContentItemIDs;
@property(copy, nonatomic) NSDictionary *resultsIndexPathMap; // @synthesize resultsIndexPathMap=_resultsIndexPathMap;
@property(retain, nonatomic) NSMutableSet *knownContainerIDs; // @synthesize knownContainerIDs=_knownContainerIDs;
@property(retain, nonatomic) NSMutableArray *pendingActions; // @synthesize pendingActions=_pendingActions;
@property(retain, nonatomic) MPCModelGenericAVItemUserIdentityPropertySet *identityPropertySet; // @synthesize identityPropertySet=_identityPropertySet;
@property(retain, nonatomic) MPRequestResponseController *requestController; // @synthesize requestController=_requestController;
@property(retain, nonatomic, setter=_setQueue:) ICSharedListeningQueue *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) ICLiveLink *liveLink; // @synthesize liveLink=_liveLink;
@property(readonly, nonatomic) _Bool hasUserMutations; // @synthesize hasUserMutations=_hasUserMutations;
@property(copy, nonatomic) MPPropertySet *requestedPropertySetForEvents; // @synthesize requestedPropertySetForEvents=_requestedPropertySetForEvents;
@property(nonatomic) __weak id <MPCQueueControllerBehaviorMusicSharePlayDelegate> musicSharePlayBehaviorDelegate; // @synthesize musicSharePlayBehaviorDelegate=_musicSharePlayBehaviorDelegate;
@property(readonly, nonatomic) long long shuffleType; // @synthesize shuffleType=_shuffleType;
@property(readonly, nonatomic) long long repeatType; // @synthesize repeatType=_repeatType;
@property(nonatomic) __weak id <MPCQueueControllerBehaviorMusicDelegate> musicBehaviorDelegate; // @synthesize musicBehaviorDelegate=_musicBehaviorDelegate;
@property(readonly, nonatomic) __weak id <MPCQueueControllerExternalSyncBehaviorHost> externalSyncHost; // @synthesize externalSyncHost=_externalSyncHost;
@property(readonly, nonatomic) __weak id <MPCQueueControllerBehaviorHost> host; // @synthesize host=_host;
@property(readonly, copy, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
- (_Bool)_useItemPlaceholderForContentItemID:(id)arg1;	// IMP=0x000000000026d13a
- (_Bool)_useItemPlaceholderForItemID:(id)arg1;	// IMP=0x000000000026d024
- (id)_sectionObjectForSharedListeningContainerID:(id)arg1;	// IMP=0x000000000026ccc3
- (id)_sectionedCollectionForQueue:(id)arg1;	// IMP=0x000000000026cb90
- (void)_reloadCacheDataWithOptions:(unsigned long long)arg1;	// IMP=0x000000000026c934
- (id)_queueAsStateDictionary;	// IMP=0x000000000026c66b
- (void)_purgePendingActionsWithLabel:(id)arg1;	// IMP=0x000000000026c2fc
- (id)_mpcSharedListeningEventForICLiveLinkEvent:(id)arg1;	// IMP=0x000000000026b144
- (id)_itemObjectForSharedListeningItemID:(id)arg1;	// IMP=0x000000000026b040
- (void)_initializeWithQueue:(id)arg1;	// IMP=0x000000000026af27
- (void)_enqueuePendingActionWithLabel:(id)arg1 itemIdentifier:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x000000000026ac08
- (void)_emitEventsForPlaybackBehaviorChange;	// IMP=0x000000000026aa21
- (void)_emitEventsForParticipants:(id)arg1 localUserIdentity:(id)arg2;	// IMP=0x000000000026a7c9
- (void)_emitEventsForAddedSharedListeningContainer:(id)arg1;	// IMP=0x000000000026a4dc
- (void)_dequeuePendingActions;	// IMP=0x0000000000269b56
- (id)_componentsForSharedListeningItemID:(id)arg1;	// IMP=0x0000000000269a10
- (id)_componentsForContentItemID:(id)arg1;	// IMP=0x00000000002698c9
- (void)liveLink:(id)arg1 didReceiveEvent:(id)arg2;	// IMP=0x0000000000269847
- (void)liveLink:(id)arg1 didReceiveDirectCurrentItemChanged:(id)arg2 fromParticipant:(id)arg3;	// IMP=0x0000000000269789
- (void)liveLink:(id)arg1 didUpdateQueue:(id)arg2;	// IMP=0x0000000000269700
- (void)liveLink:(id)arg1 didUpdateParticipants:(id)arg2;	// IMP=0x0000000000269646
- (void)liveLink:(id)arg1 didEncounterError:(id)arg2 willRetry:(_Bool)arg3;	// IMP=0x00000000002695b2
- (void)didStopLiveLink:(id)arg1;	// IMP=0x0000000000269567
- (void)liveLinkDidReconnect:(id)arg1;	// IMP=0x000000000026951c
- (id)playbackCoordinator:(id)arg1 identifierForPlayerItem:(id)arg2;	// IMP=0x0000000000269499
- (void)controller:(id)arg1 defersResponseReplacement:(CDUnknownBlockType)arg2;	// IMP=0x0000000000269410
- (_Bool)controller:(id)arg1 shouldRetryFailedRequestWithError:(id)arg2;	// IMP=0x0000000000269408
- (long long)displayItemCount;	// IMP=0x00000000002693c0
- (void)clearAllItemsAfterContentItemID:(id)arg1;	// IMP=0x00000000002692f1
- (void)removeContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000026919e
- (_Bool)canRemoveContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000269196
- (void)moveContentItemID:(id)arg1 afterContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000268f2b
- (void)moveContentItemID:(id)arg1 beforeContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000268cc0
- (void)performInsertCommand:(id)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000268b44
- (id)tailInsertionContentItemIDForTargetContentItemID:(id)arg1;	// IMP=0x0000000000268b3c
- (_Bool)isSupportedInsertionPosition:(long long)arg1 fromContentItemID:(id)arg2 reason:(id *)arg3;	// IMP=0x0000000000268a3b
@property(nonatomic) _Bool allowsQueueModifications;
- (void)canReuseQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000268799
@property(readonly, nonatomic) long long queueExplicitContentState;
- (void)updatePlaybackCoordinator:(id)arg1;	// IMP=0x00000000002684fa
- (void)endSynchronizedPlayback;	// IMP=0x000000000026846c
- (id)lastSectionContentItemIDForTargetContentItemID:(id)arg1;	// IMP=0x0000000000268464
- (id)copyContentItemID:(id)arg1 repeatIteration:(long long)arg2;	// IMP=0x00000000002683e4
- (id)contentItemIDWithoutRepeatIteration:(id)arg1;	// IMP=0x0000000000268364
- (void)prepareForCreateStationAfterContentItemID:(id)arg1;	// IMP=0x000000000026835e
- (void)setHostingSharedSessionID:(id)arg1 reason:(id)arg2;	// IMP=0x00000000002682fd
- (void)findFirstContentItemIDForItemIntersectingIdentifierSet:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000268154
- (void)getSharedQueueTracklistWithStartingContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000002680da
- (_Bool)isAutoPlayContentItemID:(id)arg1;	// IMP=0x0000000000268092
- (void)setAutoPlayEnabled:(_Bool)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000267f96
- (_Bool)canUserEnableAutoPlayWithReason:(id *)arg1;	// IMP=0x0000000000267f62
@property(readonly, nonatomic) _Bool autoPlayEnabled;
- (void)reshuffleWithTargetContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000267ed3
- (void)setShuffleType:(long long)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000267e5a
- (_Bool)canUserChangeShuffleModeWithReason:(id *)arg1;	// IMP=0x0000000000267e43
- (void)setRepeatType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000267dca
- (_Bool)canUserChangeRepeatTypeWithReason:(id *)arg1;	// IMP=0x0000000000267db3
- (void)didJumpToTargetContentItemID:(id)arg1;	// IMP=0x0000000000267d41
- (void)disconnectFromExternalSyncHost:(id)arg1;	// IMP=0x0000000000267d31
- (void)connectToExternalSyncHost:(id)arg1;	// IMP=0x0000000000267d20
- (void)didReachEndOfQueueWithReason:(id)arg1;	// IMP=0x0000000000267d06
- (id)_itemForContentItemID:(id)arg1;	// IMP=0x00000000002674e7
- (void)currentItemDidChangeFromContentItemID:(id)arg1 toContentItemID:(id)arg2;	// IMP=0x00000000002674e1
- (id)_stateDictionaryIncludingQueue:(_Bool)arg1;	// IMP=0x00000000002673a4
- (id)contentItemIDEnumeratorStartingAfterContentItemID:(id)arg1 mode:(long long)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000266fd1
@property(readonly, nonatomic) _Bool isEmpty;
- (_Bool)canNextItemFromContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000266db2
- (_Bool)canPreviousItemFromContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000266cad
- (_Bool)canJumpToContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000266ba8
- (_Bool)itemExistsForContentItemID:(id)arg1;	// IMP=0x0000000000266933
- (id)componentsForContentItemID:(id)arg1;	// IMP=0x0000000000266921
- (void)activeItemFlagsDidChange:(unsigned short)arg1;	// IMP=0x0000000000266917
- (id)performLoadCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000002660c4
@property(readonly, nonatomic) long long playbackPositionRestorationPolicy;
- (void)disconnectFromHost:(id)arg1;	// IMP=0x0000000000265f5e
- (void)didConnectToHost:(id)arg1;	// IMP=0x0000000000265dac
- (void)connectToHost:(id)arg1;	// IMP=0x0000000000265d9b
- (id)initWithSessionID:(id)arg1;	// IMP=0x0000000000265c54
- (void)getExpectedCurrentItemModelObjectWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000265b1b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

