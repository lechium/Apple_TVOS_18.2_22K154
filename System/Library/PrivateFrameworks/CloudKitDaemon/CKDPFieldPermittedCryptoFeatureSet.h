//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

@interface CKDPFieldPermittedCryptoFeatureSet : PBCodable
{
    CDStruct_95bda58d _assetKeyEncryptionTypes;	// 8 = 0x8
    CDStruct_95bda58d _encryptedFieldContextTypes;	// 32 = 0x20
    CDStruct_95bda58d _mmcsVersions;	// 56 = 0x38
    int _minimumSchemaVersion;	// 80 = 0x50
    CDStruct_fe6a063f _has;	// 84 = 0x54
}

- (void)mergeFrom:(id)arg1;	// IMP=0x00000000002b3062
- (unsigned long long)hash;	// IMP=0x00000000002b2fe7
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000002b2f0d
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000002b2e65
- (void)copyTo:(id)arg1;	// IMP=0x00000000002b2cb3
- (void)writeTo:(id)arg1;	// IMP=0x00000000002b2bd1
- (_Bool)readFrom:(id)arg1;	// IMP=0x00000000002b2bc4
- (id)dictionaryRepresentation;	// IMP=0x00000000002b2512
- (id)description;	// IMP=0x00000000002b2463
- (void)setAssetKeyEncryptionTypes:(int *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000002b244c
- (int)assetKeyEncryptionTypeAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002b237c
- (void)addAssetKeyEncryptionType:(int)arg1;	// IMP=0x00000000002b2369
- (void)clearAssetKeyEncryptionTypes;	// IMP=0x00000000002b2358
@property(readonly, nonatomic) int *assetKeyEncryptionTypes;
@property(readonly, nonatomic) unsigned long long assetKeyEncryptionTypesCount;
- (void)setEncryptedFieldContextTypes:(int *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000002b231e
- (int)encryptedFieldContextTypeAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002b224e
- (void)addEncryptedFieldContextType:(int)arg1;	// IMP=0x00000000002b223b
- (void)clearEncryptedFieldContextTypes;	// IMP=0x00000000002b222a
@property(readonly, nonatomic) int *encryptedFieldContextTypes;
@property(readonly, nonatomic) unsigned long long encryptedFieldContextTypesCount;
- (void)setMmcsVersions:(int *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000002b21f0
- (int)mmcsVersionAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002b2120
- (void)addMmcsVersion:(int)arg1;	// IMP=0x00000000002b210d
- (void)clearMmcsVersions;	// IMP=0x00000000002b20fc
@property(readonly, nonatomic) int *mmcsVersions;
@property(readonly, nonatomic) unsigned long long mmcsVersionsCount;
@property(nonatomic) _Bool hasMinimumSchemaVersion;
@property(nonatomic) int minimumSchemaVersion; // @synthesize minimumSchemaVersion=_minimumSchemaVersion;
- (void)dealloc;	// IMP=0x00000000002b2014

@end

