//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "AUAudioUnit.h"

@class AUAudioUnitBusArray_XPC, AUCrashHandler, AUParameterTree, NSArray, NSUUID, NSXPCConnection;

__attribute__((visibility("hidden")))
@interface AUAudioUnit_XPC : AUAudioUnit
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    struct recursive_mutex _propListenerMutex;	// 16 = 0x10
    _Bool _crashNotificationSent;	// 80 = 0x50
    struct mutex _mCrashNotificationMutex;	// 88 = 0x58
    struct OpaqueAudioComponentInstance *_componentInstance;	// 152 = 0x98
    int _remotePID;	// 160 = 0xa0
    struct mach_timebase_info _remoteMachTimebaseInfo;	// 164 = 0xa4
    AUCrashHandler *_crashHandler;	// 176 = 0xb0
    _Bool _canRender;	// 184 = 0xb8
    _Bool _canProcess;	// 185 = 0xb9
    _Bool _removingObserverWithContext;	// 186 = 0xba
    struct mutex _parameterTreeMutex;	// 192 = 0xc0
    AUAudioUnitBusArray_XPC *_inputBusses;	// 256 = 0x100
    AUAudioUnitBusArray_XPC *_outputBusses;	// 264 = 0x108
    struct unique_ptr<AUProcAndUserData, std::default_delete<AUProcAndUserData>> _elementCountListenerToken;	// 272 = 0x110
    struct vector<AUAudioUnit_XPC_PropListener, std::allocator<AUAudioUnit_XPC_PropListener>> _propListeners;	// 280 = 0x118
    struct shared_ptr<caulk::synchronized<auoop::RenderPipePool, std::recursive_mutex>> _renderPipePool;	// 304 = 0x130
    struct optional<auoop::RenderPipeUser> _renderPipeUser;	// 320 = 0x140
    AUParameterTree *_cachedParameterTree;	// 400 = 0x190
    NSArray *_userPresets;	// 408 = 0x198
    struct optional<bool> _localCachingDisabled;	// 416 = 0x1a0
    NSUUID *_auInstanceUUID;	// 424 = 0x1a8
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x0060000000126ff2
- (id).cxx_construct;	// IMP=0x000000000012296c
- (void).cxx_destruct;	// IMP=0x0000000000122822
@property(readonly, nonatomic) NSUUID *auInstanceUUID; // @synthesize auInstanceUUID=_auInstanceUUID;
- (void)setLocalCachingDisabled:(_Bool)arg1;	// IMP=0x00000000001226ba
- (_Bool)isLocalCachingDisabled;	// IMP=0x000000000012253f
- (id)audioUnitInstanceUUID;	// IMP=0x0000000000122416
- (id)XPCListenerEndpoint;	// IMP=0x00000000001223f9
- (id)speechVoices;	// IMP=0x00000000001222a4
- (void)cancelSpeechRequest;	// IMP=0x00000000001220e3
- (void)synthesizeSpeechRequest:(id)arg1;	// IMP=0x0000000000121ef2
- (id)messageChannelFor:(id)arg1;	// IMP=0x00000000001218e1
- (CDStruct_6ad76789)remoteProcessAuditToken;	// IMP=0x00000000001218a3
- (int)remoteProcessIdentifier;	// IMP=0x0000000000121886
- (_Bool)isLoadedInProcess;	// IMP=0x000000000012187e
- (id)userPresets;	// IMP=0x000000000012129d
- (id)presetStateFor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000120cec
- (_Bool)deleteUserPreset:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000120afd
- (_Bool)saveUserPreset:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001208d5
- (void)setCurrentPreset:(id)arg1;	// IMP=0x00000000001208b9
- (void)setFullStateForDocument:(id)arg1;	// IMP=0x000000000012089d
- (void)setFullState:(id)arg1;	// IMP=0x0000000000120881
- (void)_setState:(id)arg1 forKey:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001207b1
- (void)invalidateAllParameters;	// IMP=0x0000000000120633
- (_Bool)disableProfile:(id)arg1 cable:(unsigned char)arg2 onChannel:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x0000000000120473
- (_Bool)enableProfile:(id)arg1 cable:(unsigned char)arg2 onChannel:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x00000000001202b3
- (id)profileStateForCable:(unsigned char)arg1 channel:(unsigned char)arg2;	// IMP=0x000000000011fdc4
- (_Bool)providesUserInterface;	// IMP=0x000000000011fd91
- (void)selectViewConfiguration:(id)arg1;	// IMP=0x000000000011fbc5
- (id)supportedViewConfigurations:(id)arg1;	// IMP=0x000000000011f6c8
- (id)parametersForOverviewWithCount:(long long)arg1;	// IMP=0x000000000011f1e5
- (float)getV2Parameter:(unsigned long long)arg1 sequenceNumber:(unsigned int)arg2;	// IMP=0x000000000011f086
- (id)parameterTree;	// IMP=0x000000000011e8d3
- (void)propertiesChanged:(id)arg1;	// IMP=0x000000000011e551
- (id)_getBus:(unsigned int)arg1 scope:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000011e427
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x000000000011e195
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;	// IMP=0x000000000011def8
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x000000000011dc7a
- (void)_refreshBusses:(unsigned int)arg1;	// IMP=0x000000000011d9a9
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x000000000011d805
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x000000000011d69c
- (void)_setValue:(id)arg1 forProperty:(id)arg2 error:(id *)arg3;	// IMP=0x000000000011d4c1
- (id)_getValueForKey:(id)arg1;	// IMP=0x000000000011d445
- (id)_getValueForProperty:(id)arg1 error:(id *)arg2;	// IMP=0x000000000011d2a4
- (CDUnknownBlockType)internalRenderBlock;	// IMP=0x000000000011d1d4
- (void)reset;	// IMP=0x000000000011d193
- (void)remoteReset;	// IMP=0x000000000011d01a
- (void)internalDeallocateRenderResources;	// IMP=0x000000000011cec9
- (_Bool)allocateRenderResourcesAndReturnError:(id *)arg1;	// IMP=0x000000000011a341
- (void)setTransportStateBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000011a24f
- (void)setMusicalContextBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000011a15d
- (_Bool)_setBusCount:(unsigned long long)arg1 scope:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x0000000000119f90
- (id)outputBusses;	// IMP=0x0000000000119f4b
- (id)inputBusses;	// IMP=0x0000000000119f06
- (void)_parameterTreeChanged;	// IMP=0x0000000000119ec2
- (void)dealloc;	// IMP=0x0000000000119cd2
- (void)didCrash:(id)arg1;	// IMP=0x000000000011982b
- (void)didInvalidate;	// IMP=0x0000000000119712
- (id)_getInvalidationNotificationInfo;	// IMP=0x0000000000119510
- (void)_invalidatePipePoolAndUser;	// IMP=0x0000000000119456
- (void)_doOpen:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000118111
- (void)_setComponentInstance:(struct OpaqueAudioComponentInstance *)arg1;	// IMP=0x0000000000118100

@end

