//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVPlayerViewController, MISSING_TYPE, NSArray, NSString, TVPPlayer, VUIMediaInfo;

__attribute__((visibility("hidden")))
@interface _TtC8VideosUI24PaginatedMediaController
{
    MISSING_TYPE *showsGradient;	// 8 = 0x8
    MISSING_TYPE *showsPageControl;	// 9 = 0x9
    MISSING_TYPE *shouldUsePageControlProgress;	// 10 = 0xa
    MISSING_TYPE *shouldUpdateMetadataViewDuringFullscreenTransition;	// 11 = 0xb
    MISSING_TYPE *pageControlBottomMarginConstraint;	// 16 = 0x10
    MISSING_TYPE *pageControlBottomMargin;	// 24 = 0x18
    MISSING_TYPE *viewModels;	// 32 = 0x20
    MISSING_TYPE *paginationDelegate;	// 40 = 0x28
    MISSING_TYPE *lastImpressedIndex;	// 56 = 0x38
    MISSING_TYPE *playerViewControllerObservable;	// 64 = 0x40
    MISSING_TYPE *playerTabViewControllers;	// 72 = 0x48
    MISSING_TYPE *hideGradientView;	// 80 = 0x50
    MISSING_TYPE *carouselBehaviorEnabled;	// 81 = 0x51
    MISSING_TYPE *verticalButtonAlpha;	// 88 = 0x58
    MISSING_TYPE *horizontalButtonAlpha;	// 96 = 0x60
    MISSING_TYPE *pendingModelsForUpdateAfterSwiping;	// 104 = 0x68
    MISSING_TYPE *backgroundMediaInfo;	// 112 = 0x70
    MISSING_TYPE *backgroundMediaController;	// 120 = 0x78
    MISSING_TYPE *paginationHost;	// 128 = 0x80
    MISSING_TYPE *$__lazy_storage_$_previousIndicator;	// 136 = 0x88
    MISSING_TYPE *collectionImpressioner;	// 144 = 0x90
    MISSING_TYPE *$__lazy_storage_$_nextIndicator;	// 184 = 0xb8
    MISSING_TYPE *$__lazy_storage_$_containerView;	// 192 = 0xc0
    MISSING_TYPE *$__lazy_storage_$_mediaShowcaseConfig;	// 200 = 0xc8
    MISSING_TYPE *$__lazy_storage_$_pageControl;	// 208 = 0xd0
    MISSING_TYPE *$__lazy_storage_$_pageProgress;	// 216 = 0xd8
    MISSING_TYPE *elapsedTimeObserverToken;	// 224 = 0xe0
    MISSING_TYPE *enablePageControlTimer;	// 256 = 0x100
    MISSING_TYPE *nextFocusGuide;	// 264 = 0x108
    MISSING_TYPE *previousFocusGuide;	// 272 = 0x110
    MISSING_TYPE *rightFocusConstraint;	// 280 = 0x118
    MISSING_TYPE *leftFocusConstraint;	// 288 = 0x120
    MISSING_TYPE *chevronDebounceTimer;	// 296 = 0x128
    MISSING_TYPE *swipeController;	// 304 = 0x130
    MISSING_TYPE *$__lazy_storage_$_metadataInteractor;	// 312 = 0x138
    MISSING_TYPE *$__lazy_storage_$_metadataPresenter;	// 320 = 0x140
    MISSING_TYPE *$__lazy_storage_$_metadataView;	// 328 = 0x148
    MISSING_TYPE *$__lazy_storage_$_buttonsPresenter;	// 336 = 0x150
    MISSING_TYPE *$__lazy_storage_$_buttonsView;	// 344 = 0x158
    MISSING_TYPE *observers;	// 352 = 0x160
    MISSING_TYPE *isAutoAdvanceEnabled;	// 360 = 0x168
    MISSING_TYPE *forceDisableAutoAdvance;	// 361 = 0x169
    MISSING_TYPE *vuiIsUserInteractionEnabled;	// 362 = 0x16a
    MISSING_TYPE *shouldAutoAdvanceLastPage;	// 363 = 0x16b
    MISSING_TYPE *autoAdvanceForIdleVideo;	// 364 = 0x16c
    MISSING_TYPE *autoAdvancePageTimer;	// 368 = 0x170
    MISSING_TYPE *gradientView;	// 376 = 0x178
    MISSING_TYPE *showsIndicators;	// 384 = 0x180
    MISSING_TYPE *$__lazy_storage_$_layout;	// 392 = 0x188
    MISSING_TYPE *isCurrentMetadataLoadedObserver;	// 400 = 0x190
    MISSING_TYPE *isPlayingVideo;	// 408 = 0x198
    MISSING_TYPE *viewMetricsRecorder;	// 416 = 0x1a0
    MISSING_TYPE *fullScreenPlaybackAssertion;	// 424 = 0x1a8
    MISSING_TYPE *fullScreenOptOutAssertion;	// 432 = 0x1b0
}

- (void).cxx_destruct;	// IMP=0x000000000060c556
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x00000000006168cd
- (void)setControlsVisible:(_Bool)arg1;	// IMP=0x0000000000612631
- (void)transitionToForeground:(_Bool)arg1 withPlaybackControls:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000611a68
- (void)transitionToForeground:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000006116f0
- (_Bool)shouldUpdateFocusInContext:(id)arg1;	// IMP=0x00000000006116c3
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x000000000061165c
- (void)vui_viewDidLayoutSubviews;	// IMP=0x00000000006109f4
- (void)viewIsAppearing:(_Bool)arg1;	// IMP=0x0000000000610023
- (void)vui_viewWillAppear:(_Bool)arg1;	// IMP=0x000000000060fdf0
- (void)vui_viewWillDisappear:(_Bool)arg1;	// IMP=0x000000000060fbc8
- (void)vui_viewDidLoad;	// IMP=0x000000000060f67a
- (void)dealloc;	// IMP=0x000000000060c539
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000060c4ac
@property(nonatomic, readonly) NSArray *preferredFocusEnvironments;
- (void)embeddedPlayerViewControllerTransferredToFullScreenControllerWith:(id)arg1;	// IMP=0x00000000006194d0
- (void)adoptAVPlayerViewController:(id)arg1 player:(id)arg2;	// IMP=0x0000000000619446
- (id)surrenderCurrentPlayer;	// IMP=0x00000000006193f6
- (void)setShowsVideoControls:(_Bool)arg1;	// IMP=0x00000000006192b1
- (void)stop;	// IMP=0x0000000000619263
- (void)pause;	// IMP=0x00000000006191fe
- (void)replay;	// IMP=0x00000000006191c8
- (void)play;	// IMP=0x0000000000619186
- (id)notificationObject;	// IMP=0x0000000000619146
- (void)setMediaInfo:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;	// IMP=0x00000000006190d0
- (void)setMediaInfos:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000061906b
- (void)removeMediaInfoAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000618fc2
- (void)appendMediaInfos:(id)arg1;	// IMP=0x0000000000618f40
@property(nonatomic) _Bool stopWhenAnotherMediaControllerStarts;
- (_Bool)shouldStopWhenAnotherMediaControllerStarts;	// IMP=0x0000000000618eaf
@property(nonatomic) _Bool automaticPlaybackStart;
- (_Bool)isAutomaticPlaybackStart;	// IMP=0x0000000000618e1f
@property(nonatomic, copy) NSString *videoGravity;
@property(nonatomic) _Bool keepVideoGravityUnchangedByVideoControlsVisibility;
@property(nonatomic) struct UIEdgeInsets legibleContentInsets;
@property(nonatomic) _Bool allowsPictureInPicturePlayback;
@property(nonatomic) _Bool showsPlaybackControlsInForeground;
@property(nonatomic) _Bool allowsInfoMetadataSubpanel;
@property(nonatomic) _Bool prefersAudioOverPictureInPicture;
@property(nonatomic) _Bool preloadPlaybackEnabled;
- (_Bool)isPreloadPlaybackEnabled;	// IMP=0x0000000000618773
@property(nonatomic) unsigned long long imageSwappingAnimationType;
@property(nonatomic) unsigned long long imageContentMode;
@property(nonatomic) _Bool animateImageChange;
@property(nonatomic) double playbackStartDelay;
@property(nonatomic) _Bool clearPreviousImageBeforeLoading;
@property(nonatomic) _Bool stopPlayerWhenExitingFullScreen;
- (_Bool)shouldStopPlayerWhenExitingFullScreen;	// IMP=0x000000000061839b
@property(nonatomic) _Bool stopPlayerWhenViewDisappears;
- (_Bool)shouldStopPlayerWhenViewDisappears;	// IMP=0x000000000061830b
- (_Bool)isForeground;	// IMP=0x00000000006182c3
@property(nonatomic) _Bool updatesNowPlayingInfoCenter;
@property(nonatomic) _Bool stopsPlaybackWhenInactive;
@property(nonatomic) _Bool allowsExternalPlayback;
@property(nonatomic) _Bool videoFrameFallbackEnabled;
- (_Bool)isVideoFrameFallbackEnabled;	// IMP=0x0000000000617962
@property(nonatomic) _Bool recordPausedMediaEventAsStop;
@property(nonatomic) double videoAudioRampDuration;
@property(nonatomic) _Bool prefetchesVideoFrame;
@property(nonatomic) _Bool autoPlayInSharePlay;
@property(nonatomic) _Bool forceAutoPlay;
@property(nonatomic) _Bool playbackEnabled;
- (_Bool)isPlaybackEnabled;	// IMP=0x0000000000616d70
@property(nonatomic) unsigned long long mediaInfoIndex;
@property(nonatomic, readonly) VUIMediaInfo *currentMediaInfo;
@property(nonatomic, copy) NSArray *mediaInfos;
@property(nonatomic, readonly) unsigned long long state;
@property(nonatomic, retain) AVPlayerViewController *avPlayerViewController;
@property(nonatomic, retain) TVPPlayer *player;
- (void)handlePageControlChanged;	// IMP=0x000000000061b18a
- (void)willSwipeToPageForMetadataAnimationAt:(unsigned long long)arg1;	// IMP=0x000000000061c138
- (_Bool)pageControlTimerProgress:(id)arg1 shouldAdvanceToPage:(long long)arg2;	// IMP=0x000000000061d28e

// Remaining properties
@property(nonatomic, readonly) _Bool foreground;

@end

