//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCStatisticsCollector, DTMFEventHandler, NSMutableArray, NSNumber, NSObject, NSString, VCAudioHALPluginRemoteDeviceInfo, VCAudioIO, VCAudioPayload, VCAudioPowerSpectrumSource, VCAudioTransmitter, VCMediaRecorder, VCTelephonyInterface, WRMClient;
@protocol OS_dispatch_semaphore, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface VCAudioStream
{
    int _clientPid;	// 672 = 0x2a0
    int numBufferBytesAvailable;	// 676 = 0x2a4
    NSObject<OS_dispatch_source> *pausedAudioHeartBeat;	// 680 = 0x2a8
    double dAudioHostTime;	// 688 = 0x2b0
    _Bool lastVoiceActive;	// 696 = 0x2b8
    double _remoteMediaStallTimeout;	// 704 = 0x2c0
    unsigned int conferenceID;	// 712 = 0x2c8
    unsigned int lastInputAudioTimeStamp;	// 716 = 0x2cc
    unsigned int lastSentAudioSampleTime;	// 720 = 0x2d0
    struct _opaque_pthread_rwlock_t stateLock;	// 728 = 0x2d8
    NSMutableArray *audioPayloads;	// 928 = 0x3a0
    struct tagVCAudioFrameFormat _vpioFormat;	// 936 = 0x3a8
    _Bool _useExternalIO;	// 984 = 0x3d8
    int preferredAudioCodec;	// 988 = 0x3dc
    DTMFEventHandler *dtmfEventHandler;	// 992 = 0x3e0
    WRMClient *wrmClient;	// 1000 = 0x3e8
    VCAudioPayload *currentAudioPayload;	// 1008 = 0x3f0
    VCAudioPayload *currentDTXPayload;	// 1016 = 0x3f8
    VCAudioTransmitter *_audioTransmitter;	// 1024 = 0x400
    int _reportingModuleID;	// 1032 = 0x408
    VCTelephonyInterface *_telephonyInterface;	// 1040 = 0x410
    _Bool isValid;	// 1048 = 0x418
    int deviceRole;	// 1052 = 0x41c
    VCAudioIO *_audioIO;	// 1056 = 0x420
    _Bool _isMuted;	// 1064 = 0x428
    unsigned int *_reportingSSRCList;	// 1072 = 0x430
    unsigned int _reportingSSRCCount;	// 1080 = 0x438
    _Bool _sendActiveVoiceOnly;	// 1084 = 0x43c
    _Bool _currentDTXEnable;	// 1085 = 0x43d
    NSNumber *_targetStreamID;	// 1088 = 0x440
    _Bool _rtpEnabledBeforeInterrupt;	// 1096 = 0x448
    _Bool _rtcpEnabledBeforeInterrupt;	// 1097 = 0x449
    unsigned int _pullAudioSamplesCount;	// 1100 = 0x44c
    struct _VCAudioStreamSinkContext _sinkContext;	// 1104 = 0x450
    struct _VCAudioStreamSourceContext _sourceContext;	// 1120 = 0x460
    VCAudioPowerSpectrumSource *_audioPowerSpectrumSourceUplink;	// 1336 = 0x538
    VCAudioPowerSpectrumSource *_audioPowerSpectrumSourceDownlink;	// 1344 = 0x540
    unsigned int _abnormalOWRDCount;	// 1352 = 0x548
    double _lastAbnormalOWRDVerificationTime;	// 1360 = 0x550
    double _lastNetworkHealthPrintTime;	// 1368 = 0x558
    double _packetLossRateAccum;	// 1376 = 0x560
    int _packetLossRateCount;	// 1384 = 0x568
    double _packetLossRate5Secs;	// 1392 = 0x570
    double _timeLastPLR5Secs;	// 1400 = 0x578
    _Bool _anbrEnabled;	// 1408 = 0x580
    _Bool _anbrActive;	// 1409 = 0x581
    _Bool _basebandThermalMitigationsEnabled;	// 1410 = 0x582
    struct _VCAudioCodecModeChangeEvent _lastCodecModeChangeEvent;	// 1412 = 0x584
    _Bool _cmrBitrateActive;	// 1436 = 0x59c
    struct tagVCNWConnectionNotification _lastNWConnectionNotification;	// 1440 = 0x5a0
    unsigned int _awdTimeTransmitter;	// 1544 = 0x608
    unsigned int _lastNoVoiceActivityPacketCount;	// 1548 = 0x60c
    struct opaqueCMSimpleQueue *_syncSourceDelegateQueue;	// 1552 = 0x610
    struct __CFArray *_syncSourceDelegates;	// 1560 = 0x618
    _Bool _isTelephony;	// 1568 = 0x620
    unsigned int _uplinkRateAdaptationMaxAllowedBitrate;	// 1572 = 0x624
    _Bool _isVoiceProcessingAt24KSupported;	// 1576 = 0x628
    _Bool _isRamStadSRCEnabled;	// 1577 = 0x629
    struct tagVCAudioStreamPeriodicReportingMetrics _periodicReportingMetrics;	// 1584 = 0x630
    NSMutableArray *_allowedAudioPayloads;	// 1608 = 0x648
    _Bool _shouldEnableJBLatencySenstiveModeForVoWiFi;	// 1616 = 0x650
    VCAudioHALPluginRemoteDeviceInfo *_remoteDeviceInfo;	// 1624 = 0x658
    unsigned int _preferredMediaBitrate;	// 1632 = 0x660
    AVCStatisticsCollector *_statsCollector;	// 1640 = 0x668
    _Bool _enableAudioPowerSpectrum;	// 1648 = 0x670
    unsigned int _audioSessionId;	// 1652 = 0x674
    struct os_unfair_lock_s _delegateLock;	// 1656 = 0x678
    NSObject<OS_dispatch_semaphore> *_runLock;	// 1664 = 0x680
    unsigned int _cachedConnectionMTU;	// 1672 = 0x688
    unsigned int _constantTransportOverhead;	// 1676 = 0x68c
    double _audioPlayoutDelay;	// 1680 = 0x690
    long long _overlayToken;	// 1688 = 0x698
    VCMediaRecorder *_mediaRecorder;	// 1696 = 0x6a0
}

+ (_Bool)shouldUseRandomRTPTimestampForMode:(int)arg1;	// IMP=0x00100000000ccf4a
+ (id)capabilities;	// IMP=0x00100000000ca530
+ (id)supportedAudioPayloads;	// IMP=0x00100000000ca457
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x00100000000c6432
+ (unsigned char)audioIODirectionWithMediaStreamDirection:(long long)arg1;	// IMP=0x00100000000c6263
+ (int)operatingModeForAudioStreamMode:(long long)arg1;	// IMP=0x00100000000c61ec
+ (id)newPayloadConfigForCodecConfig:(id)arg1 streamConfig:(id)arg2 inputSampleRate:(unsigned int)arg3;	// IMP=0x00100000000c4622
+ (unsigned int)audioIOTypeForMode:(long long)arg1;	// IMP=0x00100000000c45a6
+ (unsigned int)audioChannelCountForMode:(id)arg1;	// IMP=0x00100000000c4533
+ (_Bool)shouldUseAACELDSBRForMode:(long long)arg1;	// IMP=0x00100000000c4516
+ (_Bool)isVoWiFi:(long long)arg1;	// IMP=0x00100000002d5e17
+ (_Bool)isVoLTE:(long long)arg1;	// IMP=0x00100000002d5e01
+ (_Bool)isTelephony:(long long)arg1;	// IMP=0x00100000002d5de7
@property(nonatomic) long long overlayToken; // @synthesize overlayToken=_overlayToken;
@property(nonatomic) unsigned int lastNoVoiceActivityPacketCount; // @synthesize lastNoVoiceActivityPacketCount=_lastNoVoiceActivityPacketCount;
@property(retain, nonatomic) NSNumber *targetStreamID; // @synthesize targetStreamID=_targetStreamID;
@property(nonatomic, getter=isCurrentDTXEnabled) _Bool currentDTXEnable; // @synthesize currentDTXEnable=_currentDTXEnable;
@property(retain) VCAudioIO *audioIO; // @synthesize audioIO=_audioIO;
@property(retain) VCAudioTransmitter *audioTransmitter; // @synthesize audioTransmitter=_audioTransmitter;
@property(nonatomic) int deviceRole; // @synthesize deviceRole;
@property(nonatomic) _Bool isValid; // @synthesize isValid;
@property(readonly) unsigned int conferenceID; // @synthesize conferenceID;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x00000000000d3ac0
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000000d3a05
- (void)collectTxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000000d395f
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000000d37e7
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;	// IMP=0x00000000000d37d5
- (void)serverDidDie;	// IMP=0x00000000000d3780
- (void)didResumeAudioIO:(id)arg1;	// IMP=0x00000000000d36c0
- (void)didSuspendAudioIO:(id)arg1;	// IMP=0x00000000000d3585
- (void)unregisterCodecRateModeChangeNotifications;	// IMP=0x00000000000d356b
- (void)registerActiveAudioStreamChangeNotifications;	// IMP=0x00000000000d33d9
- (void)registerCodecRateModeChangeNotifications;	// IMP=0x00000000000d332c
- (long long)getSyncSourceSampleRate;	// IMP=0x00000000000d3319
- (void)waitIdleForSyncSourceDelegates;	// IMP=0x00000000000d2f71
- (void)removeSyncSourceDelegate:(id)arg1;	// IMP=0x00000000000d2ba1
- (void)addSyncSourceDelegate:(id)arg1;	// IMP=0x00000000000d278a
- (void)setCanProcessAudio:(_Bool)arg1;	// IMP=0x00000000000d2778
- (_Bool)canProcessAudio;	// IMP=0x00000000000d2766
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000d263c
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000d1e84
- (int)getConnectionTypeForStreamMode:(long long)arg1;	// IMP=0x00000000000d1dcf
- (void)reportingAlgosAudioStreamEvent:(unsigned short)arg1;	// IMP=0x00000000000d1cde
- (void)reportingAudioStreamEvent:(unsigned short)arg1;	// IMP=0x00000000000d1a65
- (void)addStreamStartingMetricsToReport:(const struct __CFDictionary *)arg1;	// IMP=0x00000000000d18b5
- (void)updateCodecPayloadAndBitrateForStartEvent:(int *)arg1 bitrate:(unsigned int *)arg2;	// IMP=0x00000000000d12e7
- (void)gatherRealtimeStats:(struct __CFDictionary *)arg1;	// IMP=0x00000000000d127c
- (void)reportTimestampJumpsWithReportingDictionary:(struct __CFDictionary *)arg1;	// IMP=0x00000000000d11cd
- (id)getReportingServiceID;	// IMP=0x00000000000d118c
- (struct __CFString *)getReportingClientName;	// IMP=0x00000000000d1000
- (int)getReportingClientType;	// IMP=0x00000000000d0e8d
- (struct __CFDictionary *)getClientSpecificUserInfo:(id)arg1;	// IMP=0x00000000000d097e
- (_Bool)isStandaloneStreamClientSpecificUserInfoSupported;	// IMP=0x00000000000d0958
- (void)setupReportingAgent:(id)arg1;	// IMP=0x00000000000d051d
- (void)setupPeriodicReporting;	// IMP=0x00000000000d047c
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x00000000000d00ce
- (double)rtcpHeartbeatLeeway;	// IMP=0x00000000000d00c0
- (void)onSendRTCPPacket;	// IMP=0x00000000000cfebe
- (void)onRTCPTimeout;	// IMP=0x00000000000cfe95
- (void)onRTPTimeout;	// IMP=0x00000000000cfe8f
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cfb04
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cf8a0
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;	// IMP=0x00000000000cf883
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cf6bb
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cf0cf
- (_Bool)shouldRegisterReportingPeriodicTask;	// IMP=0x00000000000cf0a9
- (_Bool)shouldReportNetworkInterfaceType;	// IMP=0x00000000000cf092
- (_Bool)shouldResetRTPTimestampOnStart;	// IMP=0x00000000000cf07b
- (void)updateRateAdaptationWithNetworkNotification:(struct tagVCNWConnectionNotification *)arg1;	// IMP=0x00000000000cf05b
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000cd11a
- (int)preferredAudioCodecWithStreamConfig:(id)arg1;	// IMP=0x00000000000cd0e4
- (_Bool)networkUplinkClockUsesBaseband:(long long)arg1;	// IMP=0x00000000000cd0dc
- (int)getRTPTimeStampRateScaleFactor;	// IMP=0x00000000000cd06c
- (void)setPreferredMediaBitrateWithConfiguration:(id)arg1;	// IMP=0x00000000000ccf6b
- (id)streamIDsFromTransport;	// IMP=0x00000000000ccc9b
- (void)cleanupBeforeReconfigure:(id)arg1;	// IMP=0x00000000000cc9a8
- (void)createReportSSRCListWithStreamConfigs:(id)arg1;	// IMP=0x00000000000cc77e
- (id)createTransportWithStreamConfig:(id)arg1;	// IMP=0x00000000000cc220
- (_Bool)setupSourceTransport:(id)arg1;	// IMP=0x00000000000cc120
- (_Bool)validateAudioStreamConfigurations:(id)arg1;	// IMP=0x00000000000cbcc4
- (void)onCallIDChanged;	// IMP=0x00000000000cbb9a
- (id)supportedPayloads;	// IMP=0x00000000000cbb81
- (_Bool)shouldUseNWConnectionBackingSocket;	// IMP=0x00000000000cbb79
@property(readonly, nonatomic) unsigned int actualAudioSendingBitrate;
- (void)setTargetBitrate:(unsigned int)arg1 rateChangeCounter:(unsigned int)arg2;	// IMP=0x00000000000cb77c
- (void)setVCStatistics:(struct tagVCStatisticsMessage)arg1;	// IMP=0x00000000000cb73b
- (CDUnknownFunctionPointerType)pullSamplesCallback;	// IMP=0x00000000000ca9ee
@property(readonly, nonatomic) void *realtimeSourceContext;
@property(nonatomic) float volume;
@property(nonatomic, getter=isRemoteMuted) _Bool remoteMuted;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_isMuted;
@property(nonatomic) _Bool sendActiveVoiceOnly;
- (void)setStreamDirection:(long long)arg1;	// IMP=0x00000000000ca740
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000ca6c3
- (void)cleanupAudio;	// IMP=0x00000000000ca65f
- (void)prepareAudio;	// IMP=0x00000000000ca632
- (void)setFrequencyMeteringEnabled:(_Bool)arg1 meterType:(int)arg2;	// IMP=0x00000000000ca5e8
- (_Bool)isFrequencyMeteringEnabled:(int)arg1;	// IMP=0x00000000000ca5d3
- (struct _METER_INFO *)meterWithType:(int)arg1;	// IMP=0x00000000000ca5b1
- (void)stopSendDTMFEvent;	// IMP=0x00000000000ca3f0
- (void)sendDTMFEvent:(id)arg1;	// IMP=0x00000000000ca383
- (_Bool)bitrateIsAudioOnly;	// IMP=0x00000000000ca35d
- (_Bool)createAudioTransmitter:(long long)arg1 streamIDs:(id)arg2;	// IMP=0x00000000000c98ad
- (unsigned int)packetExpirationTimeForStreamConfig:(id)arg1 codecType:(long long)arg2;	// IMP=0x00000000000c97bb
- (_Bool)createAudioReceiver;	// IMP=0x00000000000c84de
- (void)configureAudioJBAlgos:(struct tagVCAudioReceiverConfig *)arg1;	// IMP=0x00000000000c839f
- (int)getPacketsPerBundleForStreamConfig:(id)arg1;	// IMP=0x00000000000c8241
- (void)unregisterForThermalNotifications;	// IMP=0x00000000000c823b
- (void)registerForThermalNotifications;	// IMP=0x00000000000c8235
- (void)handleThermalPressureNotification:(id)arg1;	// IMP=0x00000000000c822f
- (void)dealloc;	// IMP=0x00000000000c7b68
- (_Bool)setupAudioStreamWithClientPid:(int)arg1 enableAudioPowerSpectrum:(_Bool)arg2;	// IMP=0x00000000000c6b02
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x00000000000c6984
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2 transportSessionID:(unsigned int)arg3 streamToken:(long long)arg4;	// IMP=0x00000000000c68f4
- (id)initWithClientPid:(int)arg1;	// IMP=0x00000000000c6865
- (void)cleanUpCaptionsCoordinators;	// IMP=0x00000000000c685f
- (void)setupCaptionsCoordinatorsWithFormat:(struct tagVCAudioFrameFormat *)arg1 direction:(long long)arg2;	// IMP=0x00000000000c6859
- (void)cleanUpMediaRecorder;	// IMP=0x00000000000c681b
- (void)setUpMediaRecorder;	// IMP=0x00000000000c644b
- (void)setupAudioPowerSpectrum;	// IMP=0x00000000000c6361
- (void)setDeviceRoleForAudioStreamMode:(long long)arg1 direction:(long long)arg2;	// IMP=0x00000000000c6283
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x00000000000c61c1
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x00000000000c61a3
- (void)updateSyncSourceState:(int)arg1;	// IMP=0x00000000000c6129
- (double)lastReceivedRTCPPacketTime;	// IMP=0x00000000000c5f9f
- (double)lastReceivedRTPPacketTime;	// IMP=0x00000000000c5f89
- (_Bool)setReceiverPayloads;	// IMP=0x00000000000c55a7
- (void)setDTXPayload:(id)arg1;	// IMP=0x00000000000c52be
- (id)addAudioPayload:(int)arg1;	// IMP=0x00000000000c5247
- (id)configForPayloadType:(int)arg1;	// IMP=0x00000000000c5092
- (unsigned int)preferredAudioBitrateForPayload:(int)arg1;	// IMP=0x00000000000c43d6
- (void)getCodecConfigForPayload:(int)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c4085
- (id)codecConfigForOpusWithStreamConfig:(id)arg1;	// IMP=0x00000000000c4006
- (_Bool)setupPayloads;	// IMP=0x00000000000c3c88
- (id)getSupportedPayloads;	// IMP=0x00000000000c38f7
- (void)stopAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c3756
- (void)startAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c333f
- (_Bool)generateRTCPXRVoIPMetricsReports:(struct tagVCRTCPXRVoIPMetricsReport *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000c2d33
- (_Bool)generateRTCPXRSummaryReports:(struct tagVCRTCPXRSummaryReport *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000c2aaa
- (void)_computeInternalFormatForStreamConfigurations:(id)arg1;	// IMP=0x00000000000c2718
- (unsigned int)internalSampleRateForCodecType:(long long)arg1;	// IMP=0x00000000000c265c
- (unsigned int)computePacketTimestampWithInputTimestamp:(unsigned int)arg1 numSamples:(int)arg2 hostTime:(double)arg3;	// IMP=0x00000000000c23ff
- (void)rateAdaptation:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;	// IMP=0x00000000002d84b1
- (void)telephonyInterface:(id)arg1 anbrRecommendation:(unsigned int)arg2 forDirection:(long long)arg3;	// IMP=0x00000000002d835e
- (void)telephonyInterface:(id)arg1 anbrActivationUpdate:(_Bool)arg2;	// IMP=0x00000000002d8333
- (void)handleANBR:(unsigned int)arg1 forDirection:(long long)arg2;	// IMP=0x00000000002d7db7
- (int)selectCodecBandwidthForCodecRateMode:(int)arg1;	// IMP=0x00000000002d7ac3
- (void)handleDownlinkANBR:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002d7a98
- (void)handleUplinkANBR:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002d7a81
- (void)handleBasebandRateTrendSuggestion:(int)arg1;	// IMP=0x00000000002d7529
- (_Bool)getCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent *)arg1 forCodecBitrate:(unsigned int)arg2 payload:(int)arg3;	// IMP=0x00000000002d7205
- (_Bool)handleUplinkBitrateChange:(struct _VCAudioCodecModeChangeEvent)arg1 reason:(unsigned char)arg2;	// IMP=0x00000000002d6ee6
- (void)storeLastCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002d6eb7
- (void)handleCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002d69a1
- (void)notifyCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1 didUpdateBandwidth:(_Bool)arg2 didUpdateBitrate:(_Bool)arg3;	// IMP=0x00000000002d694a
- (void)queryAnbrBitrate:(unsigned int)arg1 forDirection:(long long)arg2;	// IMP=0x00000000002d6692
- (void)setRemoteCodecTypeAndSampleRate:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002d6625
- (void)notifyCodecModeChangeToCT:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002d65f3
- (void)configureCellularFeatures;	// IMP=0x00000000002d6472
- (_Bool)isVoLTERateAdaptationEnabled;	// IMP=0x00000000002d6391
- (void)setJitterBufferMode:(int)arg1;	// IMP=0x00000000002d62ad
- (void)handleWiFiToCelluarHandover;	// IMP=0x00000000002d61fa
- (void)handleCellularToWiFiHandover;	// IMP=0x00000000002d6157
- (void)setIsLocalCelluar:(unsigned int)arg1;	// IMP=0x00000000002d5e28

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

