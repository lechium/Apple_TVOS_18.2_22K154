//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCRateController, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, VCAudioCaptionsCoordinator, VCControlChannelMultiWay, VCMediaRecorder, VCNetworkFeedbackController, VCRateControlMediaController, VCSecurityKeyManager, VCSessionBitrateArbiter, VCSessionConfiguration, VCSessionDownlinkBandwidthAllocator, VCSessionMessaging, VCSessionParticipant, VCSessionParticipantLocal, VCSessionParticipantRemote, VCSessionPresentationInfo, VCSessionStatsController, VCSessionSwitches, VCSwitchManager, VCTransportSession;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_nw_activity, VCConnectionProtocol, VCSessionDelegate;

__attribute__((visibility("hidden")))
@interface VCSession
{
    unsigned int _state;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_sessionQueue;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_notificationQueue;	// 104 = 0x68
    id <VCSessionDelegate> _delegate;	// 112 = 0x70
    NSString *_uuid;	// 120 = 0x78
    NSString *_idsDestination;	// 128 = 0x80
    VCControlChannelMultiWay *_controlChannel;	// 136 = 0x88
    VCSessionMessaging *_sessionMessaging;	// 144 = 0x90
    VCSessionConfiguration *_configuration;	// 152 = 0x98
    VCSessionParticipantLocal *_localParticipant;	// 160 = 0xa0
    NSMutableDictionary *_remoteParticipantsMapByUUID;	// 168 = 0xa8
    NSMutableDictionary *_remoteParticipantsMapByServerID;	// 176 = 0xb0
    int _reportUpdateInterval;	// 184 = 0xb8
    int _reportReportFrequency;	// 188 = 0xbc
    VCSessionStatsController *_sessionStatsController;	// 192 = 0xc0
    VCNetworkFeedbackController *_feedbackController;	// 200 = 0xc8
    NSMutableArray *_startingParticipants;	// 208 = 0xd0
    NSMutableSet *_stoppingParticipants;	// 216 = 0xd8
    NSMutableArray *_initializingParticipants;	// 224 = 0xe0
    VCSecurityKeyManager *_securityKeyManager;	// 232 = 0xe8
    VCTransportSession *_transportSession;	// 240 = 0xf0
    id <VCConnectionProtocol> _currentActiveConnection;	// 248 = 0xf8
    unsigned int _transportSessionID;	// 256 = 0x100
    _Bool _localSourceNeedsReset;	// 260 = 0x104
    struct _VCSessionOneToOneSettings _oneToOneSettings;	// 264 = 0x108
    _Bool _switchFromGFTToOneToOneEnabled;	// 304 = 0x130
    double _remoteMediaStallReconnectTimeout;	// 312 = 0x138
    double _oneToOneSwitchStartTime;	// 320 = 0x140
    _Bool _isOneToOneInitiator;	// 328 = 0x148
    _Bool _oneToOneModeEnabled;	// 329 = 0x149
    _Bool _isReconnectPending;	// 330 = 0x14a
    _Bool _isOneToOneRemoteMediaStalling;	// 331 = 0x14b
    unsigned short _maxConnectionMTU;	// 332 = 0x14c
    _Bool _useReducedSizeRTCP;	// 334 = 0x14e
    AVCRateController *_uplinkRateController;	// 336 = 0x150
    AVCRateController *_downlinkRateController;	// 344 = 0x158
    unsigned int _uplinkTargetBitrate;	// 352 = 0x160
    unsigned int _downlinkTargetBitrate;	// 356 = 0x164
    VCRateControlMediaController *_uplinkMediaController;	// 360 = 0x168
    unsigned int _basebandFlushTransactionID;	// 368 = 0x170
    VCSessionDownlinkBandwidthAllocator *_downlinkBandwidthAllocator;	// 376 = 0x178
    NSMutableDictionary *_optInDictionary;	// 384 = 0x180
    double _sessionStartTime;	// 392 = 0x188
    struct tagVCMediaQueue *_mediaQueue;	// 400 = 0x190
    struct {
        unsigned int numberOfInternalQueues;
        double maxWaitTimeToSchedulePackets;
        double queueSizeThreshold;
        double queueSizeThresholdForScreen;
        double queueSizeQuantizationStep;
        double queueSizeCallbackInterval;
        double instantPeakBitrateFactor;
        double packetSendPacingInterval;
        unsigned int packetBurstSize;
        unsigned int minBitrateWithoutThrottling;
        int schedulePolicy;
        int bundlePolicy;
        _Bool useExternalDataBuffer;
        char *dumpID;
        _Bool isDumpFileEnabled;
        struct opaqueRTCReporting *reportingAgent;
        _Bool isRTXEnabled;
        _Bool enableDynamicPeakBitrate;
        _Bool shouldHistoryUseVCRCTimestamp;
    } _mediaQueueConfiguration;	// 408 = 0x198
    unsigned int _mediaQueueMinBitrateWithoutThrottlingDefault;	// 528 = 0x210
    unsigned int _mediaQueueMinBitrateWithoutThrottling3DCamera;	// 532 = 0x214
    _Bool _forceDisableMediaPriority;	// 536 = 0x218
    NSError *_stopError;	// 544 = 0x220
    void *_spatialMetadata;	// 552 = 0x228
    _Bool _isGKVoiceChat;	// 560 = 0x230
    double _remoteMediaStallDisconnectTimeout;	// 568 = 0x238
    int _reportingModuleID;	// 576 = 0x240
    int _reportingClientType;	// 580 = 0x244
    _Bool _shouldCreateSecondAggregator;	// 584 = 0x248
    VCAudioCaptionsCoordinator *_captionsCoordinator;	// 592 = 0x250
    _Bool _isECNCapable;	// 600 = 0x258
    _Bool _isECNEnabled;	// 601 = 0x259
    _Bool _isECNForcedByNetwork;	// 602 = 0x25a
    unsigned char _ecnLinkType;	// 603 = 0x25b
    _Bool _isBytesInFlightAdaptationEnabled;	// 604 = 0x25c
    _Bool _noPacketsSymptomReported;	// 605 = 0x25d
    int _lastThermalLevel;	// 608 = 0x260
    _Bool _isDNUCollectionEnabled;	// 612 = 0x264
    NSObject<OS_nw_activity> *_parentNWActivity;	// 616 = 0x268
    NSObject<OS_nw_activity> *_nwActivity;	// 624 = 0x270
    NSObject<OS_nw_activity> *_nwActivityActiveSession;	// 632 = 0x278
    VCSessionPresentationInfo *_presentationInfo;	// 640 = 0x280
    VCSessionBitrateArbiter *_bitrateArbiter;	// 648 = 0x288
    NSString *_conversationID;	// 656 = 0x290
    NSDate *_conversationTimeBase;	// 664 = 0x298
    NSDate *_conversationTimeBaseTruncated;	// 672 = 0x2a0
    _Bool _forceFixedEncryptionLabel;	// 680 = 0x2a8
    VCSwitchManager *_switchManager;	// 688 = 0x2b0
    int _currentConnectionType;	// 696 = 0x2b8
    _Bool _isCurrentConnectionConstrained;	// 700 = 0x2bc
    _Bool _sharingEnabled;	// 701 = 0x2bd
    struct __CFDictionary *_mediaTypeToSpatialMetadataEntryMap;	// 704 = 0x2c0
    unsigned long long _siriSpatialAudioSourceID;	// 712 = 0x2c8
    NSObject<OS_dispatch_semaphore> *_stopCompletedSemaphore;	// 720 = 0x2d0
    _Bool _didServerDie;	// 728 = 0x2d8
    _Bool _isServerPacketRetransmissionForVideoEnabled;	// 729 = 0x2d9
    _Bool _isUplinkRetransmissionForVideoEnabled;	// 730 = 0x2da
    _Bool _isSSRCCollisionDetectionEnabled;	// 731 = 0x2db
    _Bool _isEnhancedJBAdaptationsEnabled;	// 732 = 0x2dc
    VCSessionSwitches *_abSwitches;	// 736 = 0x2e0
    VCMediaRecorder *_mediaRecorder;	// 744 = 0x2e8
    _Bool _isSpatialAudioSupported;	// 752 = 0x2f0
    _Bool _screenAndCameraMixingEnabled;	// 753 = 0x2f1
}

+ (_Bool)isUplinkRetransmissionEnabledForVideo;	// IMP=0x001000000028ba34
+ (_Bool)isEnhancedJBAdaptationsEnabled;	// IMP=0x001000000028b9fc
+ (_Bool)isServerPacketRetransmissionEnabledForVideo;	// IMP=0x001000000028b9c4
+ (void)initVideoFeatureStatusSettings:(struct tagVCReportingClientSettingsPersist *)arg1;	// IMP=0x0010000000282d4e
+ (void)cleanupControlChannelParticipantConfig:(CDStruct_c24deb19 *)arg1;	// IMP=0x001000000028189a
+ (void)addUUIDToMutableData:(id)arg1 fromUUIDString:(id)arg2;	// IMP=0x001000000028169a
+ (int)deviceRoleForSessionMode:(long long)arg1;	// IMP=0x001000000027de32
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x00100000002745e5
+ (unsigned int)mediaStateForMediaStateMessageValue:(id)arg1;	// IMP=0x001000000046565b
+ (id)mediaStateMessageValueForMediaState:(unsigned int)arg1;	// IMP=0x001000000046563c
+ (unsigned int)mediaTypeForMediaStateMessageKey:(id)arg1;	// IMP=0x001000000046554c
+ (id)mediaStateMessageKeyForMediaType:(unsigned int)arg1;	// IMP=0x0010000000465520
+ (id)mediaStateMessageStreamGroupKeysForMediaType:(unsigned int)arg1;	// IMP=0x0010000000465334
@property(nonatomic) _Bool isOneToOneRemoteMediaStalling; // @synthesize isOneToOneRemoteMediaStalling=_isOneToOneRemoteMediaStalling;
@property(nonatomic) _Bool screenAndCameraMixingEnabled; // @synthesize screenAndCameraMixingEnabled=_screenAndCameraMixingEnabled;
@property(readonly, nonatomic) int reportingModuleID; // @synthesize reportingModuleID=_reportingModuleID;
@property(readonly, nonatomic) int reportingClientType; // @synthesize reportingClientType=_reportingClientType;
@property(nonatomic) _Bool sharingEnabled; // @synthesize sharingEnabled=_sharingEnabled;
@property(nonatomic) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(retain, nonatomic) NSObject<OS_nw_activity> *nwActivity; // @synthesize nwActivity=_nwActivity;
@property(nonatomic, setter=setParentNWActivity:) NSObject<OS_nw_activity> *parentNWActivity; // @synthesize parentNWActivity=_parentNWActivity;
@property(readonly, nonatomic) VCSessionStatsController *sessionStatsController; // @synthesize sessionStatsController=_sessionStatsController;
@property(retain, nonatomic) VCSessionMessaging *sessionMessaging; // @synthesize sessionMessaging=_sessionMessaging;
@property(readonly, nonatomic) AVCRateController *downlinkRateController; // @synthesize downlinkRateController=_downlinkRateController;
@property(readonly, nonatomic) VCTransportSession *transportSession; // @synthesize transportSession=_transportSession;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(retain, nonatomic) NSMutableDictionary *remoteParticipantsMapByServerID; // @synthesize remoteParticipantsMapByServerID=_remoteParticipantsMapByServerID;
@property(retain) NSMutableDictionary *optInDictionary; // @synthesize optInDictionary=_optInDictionary;
@property(retain, nonatomic) id <VCConnectionProtocol> currentActiveConnection; // @synthesize currentActiveConnection=_currentActiveConnection;
@property(readonly, nonatomic) unsigned int transportSessionID; // @synthesize transportSessionID=_transportSessionID;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(readonly, nonatomic) NSString *idsDestination; // @synthesize idsDestination=_idsDestination;
@property(readonly, nonatomic) VCSessionParticipant *localParticipant; // @synthesize localParticipant=_localParticipant;
- (void)additionalFlushCountToOneToOneRateController:(unsigned int)arg1;	// IMP=0x000000000028c078
- (_Bool)actionDidFinishForContext:(const struct tagVCAsynchronousActionContext *)arg1 withError:(id *)arg2;	// IMP=0x000000000028c070
- (_Bool)actionWillBeginForContext:(const struct tagVCAsynchronousActionContext *)arg1 withError:(id *)arg2;	// IMP=0x000000000028c068
- (void)updateMediaRecorderCapabillities:(unsigned int)arg1 imageType:(int)arg2 videoCodec:(int)arg3;	// IMP=0x000000000028beaf
- (void)didReceiveMomentsRequest:(id)arg1;	// IMP=0x000000000028be11
- (void)mediaRecorder:(id)arg1 shouldProcessRequest:(id)arg2 recipientID:(id)arg3;	// IMP=0x000000000028bb78
- (void)didLocalNetworkConditionChange:(_Bool)arg1 isLocalNetworkQualityDegraded:(_Bool)arg2 isRemoteNetworkQualityDegraded:(_Bool)arg3;	// IMP=0x000000000028b856
- (void)setIsUplinkRetransmissionEnabled:(_Bool)arg1;	// IMP=0x000000000028b6ba
- (void)mediaQualityDegraded:(_Bool)arg1;	// IMP=0x000000000028b60a
- (void)preWarmStateChanged:(_Bool)arg1;	// IMP=0x000000000028b508
- (void)reportingIntervalChanged:(double)arg1;	// IMP=0x000000000028b4eb
- (void)recommendedSettingsChanged:(id)arg1;	// IMP=0x000000000028b4b0
- (void)unregisterReportingTask;	// IMP=0x000000000028b46e
- (void)registerReportingTask;	// IMP=0x000000000028b2a6
- (void)generateReportDictionary:(struct __CFDictionary *)arg1;	// IMP=0x000000000028a3b0
- (id)newNetworkBitrateString:(const CDStruct_b671a7c4 *)arg1;	// IMP=0x000000000028a320
- (void)dispatchedParticipant:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x000000000028a059
- (void)processDidStop;	// IMP=0x0000000000289e3a
- (void)setupOneToOneVideoStreamDelegate;	// IMP=0x0000000000289c08
- (void)setupOneToOneVideoReceiverDelegate;	// IMP=0x0000000000289b02
- (void)dispatchedParticipant:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000288fd0
- (void)stopAllParticipants;	// IMP=0x0000000000288e61
- (void)dispatchedUpdateConfiguration:(id)arg1;	// IMP=0x000000000028868d
- (void)tearDown;	// IMP=0x0000000000288538
- (void)dispatchedTransportStop;	// IMP=0x0000000000288502
- (void)dispatchedStopWithError:(id)arg1 didRemoteCancel:(_Bool)arg2;	// IMP=0x0000000000287bec
- (void)dispatchedStopWithError:(id)arg1;	// IMP=0x0000000000287bd8
- (void)stopMediaQueueOneToOne;	// IMP=0x0000000000287b9b
- (void)dispatchedStart;	// IMP=0x0000000000286dc7
- (void)dispatchedRemoveParticipant:(id)arg1;	// IMP=0x0000000000286880
- (void)dispatchedAddParticipantConfigurations:(id)arg1;	// IMP=0x000000000028675a
- (_Bool)configureRemoteParticipant:(id)arg1 withConfig:(id)arg2;	// IMP=0x000000000028646a
- (void)dispatchedAddParticipantWithConfig:(id)arg1;	// IMP=0x0000000000285146
- (void)deregisterForThermalFeatureNotifications;	// IMP=0x0000000000285101
- (void)registerForThermalFeatureNotifications;	// IMP=0x00000000002850b5
- (void)handleMicModeNotification:(id)arg1;	// IMP=0x0000000000284fbb
- (long long)getCurrentMicMode;	// IMP=0x0000000000284faa
- (void)reportLocalRateControlExperimentConfiguration;	// IMP=0x0000000000284e60
- (void)reportingSessionRemoteParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 value:(id)arg3;	// IMP=0x0000000000284bc0
- (void)collectSessionEventKeyFieldsAndSubtype:(struct __CFDictionary *)arg1 eventType:(unsigned short)arg2 withParticipant:(id)arg3 keyChangeReason:(id)arg4 newMKI:(id)arg5 withStreamGroupID:(unsigned int)arg6 withStreamID:(unsigned short)arg7 collectSubtype:(unsigned short *)arg8;	// IMP=0x0000000000284267
- (void)addNegotiatedCipherSuitesForParticipant:(id)arg1 toReportingDictionary:(id)arg2;	// IMP=0x0000000000283d84
- (void)reportingMomentsToGreenTeaWithRequest:(id)arg1;	// IMP=0x0000000000283d7e
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 keyChangeReason:(id)arg3 newMKI:(id)arg4 withStreamGroupID:(unsigned int)arg5 withStreamID:(unsigned short)arg6;	// IMP=0x00000000002839de
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 keyChangeReason:(id)arg3 newMKI:(id)arg4;	// IMP=0x00000000002839c3
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 keyChangeReason:(id)arg2 newMKI:(id)arg3;	// IMP=0x00000000002839a0
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2;	// IMP=0x000000000028397f
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 streamGroupID:(unsigned int)arg3 streamID:(unsigned short)arg4;	// IMP=0x0000000000283959
- (struct __CFDictionary *)getClientSpecificUserInfo;	// IMP=0x0000000000283898
- (id)computeConversationTimeBaseTruncated;	// IMP=0x0000000000283834
- (void)didEncryptionKeyRollTimeout;	// IMP=0x00000000002837a5
- (void)resetDecryptionTimeout;	// IMP=0x000000000028361d
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x0000000000283309
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x0000000000283301
- (void)unregisterQoSReporting;	// IMP=0x0000000000283296
- (void)registerQoSReporting;	// IMP=0x0000000000283113
- (void)setIsSpatialAudioSupported:(_Bool)arg1;	// IMP=0x000000000028305f
- (void)setupMultiwayABTesting;	// IMP=0x0000000000282f0c
- (void)cleanupNwActivity;	// IMP=0x0000000000282ec1
- (void)cleanupVCRC;	// IMP=0x0000000000282e80
- (void)reportClientPersistentSettings;	// IMP=0x0000000000282d54
- (void)sendSymptomsToRemoteParticipants:(id)arg1 symptom:(id)arg2 groupID:(id)arg3;	// IMP=0x000000000028298c
- (void)unregisterRemoteParticipantFromSession:(id)arg1;	// IMP=0x000000000028277e
- (void)removeDelegatesForRemoteParticipant:(id)arg1;	// IMP=0x0000000000282767
- (_Bool)registerRemoteParticipantToSession:(id)arg1;	// IMP=0x000000000028231f
- (void)setBytesInFlightFlagWithParticipant:(id)arg1;	// IMP=0x00000000002821a5
- (_Bool)isECNCapableWithRemoteParticipant:(id)arg1;	// IMP=0x0000000000281dec
- (_Bool)isECNPermittedFromNetworkingLayer;	// IMP=0x0000000000281cea
- (_Bool)isAVCForcingECNDefaultSet;	// IMP=0x0000000000281cb4
- (_Bool)isNetworkForcingECNDefaultSet;	// IMP=0x0000000000281c7e
- (_Bool)composeControlChannelParticipantConfig:(CDStruct_c24deb19 *)arg1 withRemoteParticipant:(id)arg2;	// IMP=0x00000000002818e7
- (id)newEncryptionLabelWithLocalUUID:(id)arg1 remoteUUID:(id)arg2;	// IMP=0x0000000000281742
- (void)broadcastInitialMediaState;	// IMP=0x00000000002814b6
- (void)messageMediaInitialStateToParticipant:(id)arg1;	// IMP=0x0000000000281245
- (void)setDelegatesForRemoteParticipant:(id)arg1;	// IMP=0x000000000028122a
- (void)handleMembershipChangeInfoEvent:(id)arg1;	// IMP=0x000000000028111a
- (void)handleEncryptionInfoEvent:(id)arg1;	// IMP=0x0000000000280e03
- (_Bool)detectSSRCCollisionWithRemoteMediaStream:(id)arg1 remoteBlobCreationTime:(union tagNTP)arg2 resetNeeded:(_Bool *)arg3;	// IMP=0x0000000000280c3f
- (_Bool)detectSSRCCollision:(id)arg1 resetNeeded:(_Bool *)arg2;	// IMP=0x0000000000280991
- (void)optOutStreamWithIDSStreamIDs:(id)arg1;	// IMP=0x00000000002808d3
- (void)optInStreamWithIDSStreamIDs:(id)arg1;	// IMP=0x0000000000280815
- (void)updateLocalStreamConfiguration;	// IMP=0x00000000002804fe
- (void)updateLocalVideoCaptureFrameRate;	// IMP=0x000000000027fc90
- (int)maxRemoteParticipants30fps;	// IMP=0x000000000027fc12
- (void)setMediaQueuePeakBitrateWithTargetBitrate:(unsigned int)arg1;	// IMP=0x000000000027fb2b
- (void)handleMediaQueueSizeExceedThresholdWithQueueSize:(double)arg1 mediaQueueStreamId:(unsigned int)arg2 type:(int)arg3;	// IMP=0x000000000027f6cd
- (void)updateVCMediaQueueForMediaType:(unsigned int)arg1 mediaState:(unsigned int)arg2;	// IMP=0x000000000027f685
- (void)createMediaQueue;	// IMP=0x000000000027f2fe
- (void)setupUplinkBitrateCaps;	// IMP=0x000000000027f295
- (void)startRateControllersMultiwayFromOneToOne:(_Bool)arg1;	// IMP=0x000000000027f0dd
- (void)updateMultiwayRateControllerWithActiveConnection:(id)arg1 isScreenEnabled:(_Bool)arg2 isLocal:(_Bool)arg3;	// IMP=0x000000000027ef9e
- (void)cleanupSpatialAudio;	// IMP=0x000000000027ee06
- (int)reserveAudioChannelForMediaType:(unsigned int)arg1 spatialAudioSourceID:(unsigned long long)arg2;	// IMP=0x000000000027ec2e
- (int)setupSpatialAudio;	// IMP=0x000000000027e76e
- (void)didRemoveSpatialMetadataEntry;	// IMP=0x000000000027e6e3
- (void)setupRateControllersMultiway;	// IMP=0x000000000027e50e
- (id)vcrcServerBagWithOperatingMode:(int)arg1;	// IMP=0x000000000027e359
- (void)setSessionInfoSynchronizerPeerSubscribedStreamsCallback;	// IMP=0x000000000027e192
- (void)setSessionInfoSynchronizerErrorResponseCallback;	// IMP=0x000000000027de7e
- (void)setSessionInfoSynchronizerCallbacks;	// IMP=0x000000000027de50
- (void)reportingSessionStopEventWithError:(id)arg1;	// IMP=0x000000000027db96
- (void)reportingSessionDownlinkOptInEvent:(id)arg1 selectedMediaEntriesForParticipants:(id)arg2;	// IMP=0x000000000027d653
- (void)distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:(_Bool)arg1;	// IMP=0x000000000027cdb8
- (void)updateParticipantConfigurations:(id)arg1;	// IMP=0x000000000027c76a
- (void)updateParticipantWindowState;	// IMP=0x000000000027c511
- (void)sendNetworkCapabilitiesMessageToParticipant:(id)arg1;	// IMP=0x000000000027c2d3
- (void)sendDeviceStateMessageToParticipant:(id)arg1 withStatus:(id)arg2 checkDNUStatus:(_Bool)arg3;	// IMP=0x000000000027c127
- (void)sendThermalAndSliceMessageToPariticipant:(id)arg1;	// IMP=0x000000000027c030
- (_Bool)isTLEEnabledOnPrimaryConnection;	// IMP=0x000000000027bfc6
- (void)applySpatialMetadata;	// IMP=0x000000000027b9de
- (void)updatePresentationInfo:(id)arg1;	// IMP=0x000000000027b67e
- (int)flushBasebandWithPayloads:(id)arg1;	// IMP=0x000000000027b676
- (void)mediaController:(void *)arg1 mediaSuggestionDidChange:(struct VCRateControlMediaSuggestion)arg2;	// IMP=0x000000000027b617
- (void)rateController:(id)arg1 isECNEnabled:(_Bool)arg2 isECNCapable:(_Bool)arg3;	// IMP=0x000000000027b2ca
- (int)learntBitrateForSegment:(id)arg1 defaultValue:(int)arg2;	// IMP=0x000000000027b2a0
- (void)rateController:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;	// IMP=0x000000000027ad03
- (void)updateNetworkFeedbackControllerReport:(CDStruct_4b4d87a1 *)arg1;	// IMP=0x000000000027ab50
- (void)didReceivedSessionStatsAtTime:(double)arg1;	// IMP=0x000000000027aab7
- (void)serverDidDie;	// IMP=0x000000000027a98c
- (void)vcSessionParticipantDidMediaReceiveFlushRequestWithPayloads:(id)arg1;	// IMP=0x000000000027a986
- (void)vcSessionParticipantDidStopReacting:(id)arg1;	// IMP=0x000000000027a652
- (void)vcSessionParticipant:(id)arg1 reactionDidStart:(id)arg2;	// IMP=0x000000000027a2b7
- (void)vcSessionParticipant:(id)arg1 mediaMixingDidChangeForMediaType:(unsigned int)arg2 mixingMediaType:(unsigned int)arg3;	// IMP=0x0000000000279f96
- (void)vcSessionParticipant:(id)arg1 remoteMediaStateDidChange:(unsigned int)arg2 forMediaType:(unsigned int)arg3;	// IMP=0x0000000000279e18
- (void)vcSessionParticipant:(id)arg1 mediaStateDidChange:(unsigned int)arg2 forMediaType:(unsigned int)arg3 didSucceed:(_Bool)arg4 error:(id)arg5;	// IMP=0x0000000000279a9a
- (void)vcSessionParticipant:(id)arg1 didDetectError:(id)arg2;	// IMP=0x00000000002799c3
- (void)vcSessionParticipant:(id)arg1 oneToOneModeDidChange:(_Bool)arg2;	// IMP=0x0000000000279895
- (void)vcSessionParticipantDidRemoteMediaStallTimeout:(id)arg1 duration:(double)arg2;	// IMP=0x00000000002792e1
- (void)vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:(id)arg1;	// IMP=0x0000000000278ef6
- (void)vcSessionParticipantDidMediaDecryptionTimeOut:(id)arg1;	// IMP=0x0000000000278b4a
- (void)vcSessionParticipantDidChangeReceivingStreams:(id)arg1;	// IMP=0x0000000000278a95
- (void)vcSessionParticipantDidChangeSendingStreams:(id)arg1;	// IMP=0x00000000002789e0
- (void)vcSessionParticipant:(id)arg1 didRequestVideoRedundancy:(_Bool)arg2;	// IMP=0x00000000002788d7
- (void)vcSessionParticipant:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;	// IMP=0x0000000000278838
- (void)vcSessionParticipant:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 streamGroupID:(unsigned int)arg3 firType:(int)arg4;	// IMP=0x0000000000278615
- (void)vcSessionParticipant:(id)arg1 didChangeActualNetworkBitrateForStreamGroupID:(unsigned int)arg2;	// IMP=0x00000000002785f8
- (void)vcSessionParticipant:(id)arg1 didChangeMediaPriority:(unsigned char)arg2 description:(id)arg3;	// IMP=0x0000000000278408
- (void)vcSessionParticipant:(id)arg1 remoteVideoPausedDidChange:(_Bool)arg2;	// IMP=0x0000000000278264
- (void)vcSessionParticipant:(id)arg1 remoteAudioPausedDidChange:(_Bool)arg2;	// IMP=0x0000000000278114
- (void)vcSessionParticipant:(id)arg1 videoPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000277d71
- (void)vcSessionParticipant:(id)arg1 audioPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x000000000027798c
- (void)vcSessionParticipant:(id)arg1 remoteScreenEnabledDidChange:(_Bool)arg2;	// IMP=0x00000000002777a7
- (void)vcSessionParticipant:(id)arg1 remoteVideoEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000277631
- (void)vcSessionParticipant:(id)arg1 remoteAudioEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000277513
- (void)vcSessionParticipantFetchStreamGroupState:(id)arg1;	// IMP=0x000000000027742d
- (void)vcSessionParticipant:(id)arg1 screenEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000276f0d
- (void)vcSessionParticipant:(id)arg1 videoEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000276ae9
- (void)updateOneToOneVideoReceiverDelegate:(_Bool)arg1;	// IMP=0x0000000000276ab8
- (void)vcSessionParticipant:(id)arg1 audioEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000276715
- (void)vcSessionParticipant:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x000000000027664a
- (void)vcSessionParticipant:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x000000000027656b
- (void)setOneToOneVideoStreamBandwidthProbing:(_Bool)arg1;	// IMP=0x0000000000276443
- (unsigned int)calculateExpectedTotalNetworkBitrateUplink;	// IMP=0x000000000027635d
- (unsigned int)calculateExpectedTotalNetworkBitrateDownlink;	// IMP=0x000000000027609e
- (void)handlePreferredInterfaceForDuplicationUpdate:(unsigned char)arg1 notifyPeer:(_Bool)arg2 enableDuplication:(_Bool)arg3 isMediaUnrecoverableSignal:(_Bool)arg4;	// IMP=0x0000000000275f3f
- (void)handleActiveConnectionChangeForMultiway:(id)arg1;	// IMP=0x0000000000275e36
- (void)updateMultiwayRateControllersWithActiveConnection:(id)arg1;	// IMP=0x0000000000275c4e
- (void)dispatchedSetRemoteScreenControlEnabled:(_Bool)arg1 isLocal:(_Bool)arg2;	// IMP=0x0000000000275c48
- (void)dispatchedHandleActiveConnectionChange:(id)arg1;	// IMP=0x00000000002758dc
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x0000000000275846
- (void)handleCellularMTUChanged:(unsigned short)arg1 connection:(id)arg2;	// IMP=0x00000000002757ec
- (void)handlePrimaryConnectionChanged:(id)arg1;	// IMP=0x0000000000275626
- (void)handleCellTechChange:(int)arg1 connection:(id)arg2;	// IMP=0x0000000000275523
- (void)notifyRemoteOfCellTechChange:(id)arg1 remoteParticipant:(id)arg2;	// IMP=0x00000000002753b8
- (void)applyRemoteLinkConstrains:(id)arg1;	// IMP=0x000000000027530a
- (void)applyLinkConstrains:(id)arg1;	// IMP=0x00000000002751f8
- (void)setTransportSessionEventHandler;	// IMP=0x00000000002745fe
- (void)readAndSetABCSymptomsReportingThresholdsFromStorebags:(CDStruct_12391c09 *)arg1;	// IMP=0x00000000002742ba
- (int)getStorebagValueForIntegerKey:(id)arg1 defaultValue:(id)arg2;	// IMP=0x0000000000274280
- (void)sendStreamGroupStateToParticipant:(id)arg1;	// IMP=0x00000000002741d1
- (void)dispatchedSetScreenAndCameraMixingEnabled:(_Bool)arg1;	// IMP=0x0000000000273e1c
- (void)dispatchedSetSharingEnabled:(_Bool)arg1;	// IMP=0x0000000000273807
- (void)generateKeyFrameWithReceivedMessage:(id)arg1 forParticipant:(id)arg2;	// IMP=0x0000000000273377
- (void)setRemoteScreenControlEnabled:(_Bool)arg1;	// IMP=0x00000000002732e0
- (void)setOneToOneModeEnabled:(_Bool)arg1 configurationDict:(id)arg2;	// IMP=0x000000000027323d
- (void)reportingSetUserInfo;	// IMP=0x00000000002730c7
- (struct __CFString *)configurationSpecificReportingServiceName;	// IMP=0x0000000000273007
@property(readonly, nonatomic) NSArray *remoteParticipants;
- (void)mediaStateChangedForParticipant:(id)arg1;	// IMP=0x0000000000272e95
- (id)participantForID:(id)arg1;	// IMP=0x0000000000272c97
- (void)updateConfiguration:(id)arg1;	// IMP=0x0000000000272be0
- (void)stopWithError:(id)arg1 didRemoteCancel:(_Bool)arg2;	// IMP=0x0000000000272b42
- (void)stopWithError:(id)arg1;	// IMP=0x0000000000272b09
- (void)start;	// IMP=0x0000000000272a67
@property(readonly, nonatomic) VCSessionParticipantRemote *oneToOneRemoteParticipant;
- (void)removeParticipant:(id)arg1;	// IMP=0x00000000002729a6
- (void)addParticipantConfigurations:(id)arg1;	// IMP=0x000000000027290d
@property(readonly, nonatomic) id <VCSessionDelegate> delegate;
- (id)participantsToString;	// IMP=0x00000000002728b2
@property(readonly, copy) NSString *description;
- (char *)sessionStateToString:(unsigned int)arg1;	// IMP=0x00000000002727f0
- (void)setState:(unsigned int)arg1;	// IMP=0x0000000000272584
- (void)setupTransportSessionWithDestination:(id)arg1;	// IMP=0x0000000000272302
- (int)selectDataPath;	// IMP=0x00000000002721c2
- (void)setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:(id)arg1 remoteFrameworkVersion:(id)arg2;	// IMP=0x0000000000272162
@property(readonly, nonatomic) NSDictionary *transportMetadata;
@property(readonly, nonatomic) NSDictionary *capabilities;
- (void)startDeallocTimer;	// IMP=0x0000000000271d99
- (void)stopTimeoutTimer;	// IMP=0x0000000000271d35
- (void)enableDataCollectionInReportingConfig:(CDStruct_12391c09 *)arg1;	// IMP=0x0000000000271ab1
- (void)dumpVCSessionMetadataToDataStore;	// IMP=0x00000000002719c2
- (void)setReportingConfig:(CDStruct_12391c09 *)arg1;	// IMP=0x00000000002714fc
- (void)dealloc;	// IMP=0x0000000000270ec4
- (void)cleanUpMediaRecorder;	// IMP=0x0000000000270e86
- (id)initWithIDSDestination:(id)arg1 configurationDict:(id)arg2 negotiationData:(id)arg3 delegate:(id)arg4 processId:(int)arg5 isGKVoiceChat:(_Bool)arg6;	// IMP=0x000000000026f370
- (void)configureOneToOneReportingOnVideoEnabled;	// IMP=0x0000000000451e01
- (void)handleActiveConnectionChangeForOneToOne:(id)arg1;	// IMP=0x0000000000451bcd
- (void)setLinkTypeForFeedbackController:(id)arg1 withActiveConnection:(id)arg2;	// IMP=0x0000000000451ba9
- (void)notifyDelegateActiveConnectionDidChange;	// IMP=0x00000000004519c4
- (void)reportActiveConnectionOneToOne;	// IMP=0x0000000000451876
- (void)startOneToOne;	// IMP=0x0000000000450c89
- (void)setupOneToOneABTesting;	// IMP=0x000000000044f31c
- (void)applyNegotiatedOneToOneFaceTimeSettings;	// IMP=0x000000000044f1e3
- (void)dispatchedSetOneToOneModeEnabled:(_Bool)arg1 isLocal:(_Bool)arg2 configurationDict:(id)arg3;	// IMP=0x000000000044e43f
- (void)completionHandlerOneToOneEnabled:(_Bool)arg1 didSucceed:(_Bool)arg2 configurationDict:(id)arg3;	// IMP=0x000000000044df3a
- (_Bool)completeTransitionToOneToOneEnabled:(_Bool)arg1;	// IMP=0x000000000044dcc2
- (_Bool)shouldSendControlChannelMessages;	// IMP=0x000000000044dca6
- (_Bool)addOneToOneParticipant:(id)arg1;	// IMP=0x000000000044d2c3
- (unsigned int)vcrcServerBagProfileNumber;	// IMP=0x000000000044d057
- (void)configureOneToOneRateController:(id)arg1 isUsingCamera:(_Bool)arg2 isUsingScreen:(_Bool)arg3;	// IMP=0x000000000044cc03
- (void)configureOneToOneRateController:(id)arg1;	// IMP=0x000000000044cbaf
- (_Bool)negotiateOneToOneWithRemoteParticipant:(id)arg1;	// IMP=0x000000000044c352
- (void)setupOneToOneAdaptiveLearning;	// IMP=0x000000000044bff3
- (void)renewOneToOneMediaQueue;	// IMP=0x000000000044bf8a
- (void)startReportingForOneToOneEnabled:(_Bool)arg1 withPayload:(id)arg2;	// IMP=0x000000000044ba91
- (void)cleanUpOneToOneVideoStreamDelegate;	// IMP=0x000000000044ba25
- (void)cleanupOneToOneVideoReceiverDelegate;	// IMP=0x000000000044b9e1
- (void)cleanupOneToOneDelegates;	// IMP=0x000000000044b9b3
- (void)cleanupOneToOne;	// IMP=0x000000000044b908
- (void)cleanupOneToOneMediaQueue;	// IMP=0x000000000044b8b7
- (_Bool)switchFromMultiwayToOneToOne;	// IMP=0x000000000044b536
- (_Bool)multiwayToOneToOneSwitchConfigure;	// IMP=0x000000000044af7a
- (void)revertMultiwayToOneToOneModeSwitchConfigure;	// IMP=0x000000000044acff
- (void)multiwayToOneToOneSwitchResume;	// IMP=0x000000000044ac2f
- (void)multiwayToOneToOneSwitchSuspend;	// IMP=0x000000000044ab4e
- (void)messageExistingParticipantsPostOneToOneModeSwitch;	// IMP=0x000000000044a938
- (_Bool)switchFromOneToOneToMultiway;	// IMP=0x000000000044a71c
- (void)oneToOneToMultiwaySwitchConfigure;	// IMP=0x000000000044a35f
- (void)oneToOneToMultiwaySwitchResume;	// IMP=0x000000000044a1c0
- (void)oneToOneToMultiwaySwitchSuspend;	// IMP=0x000000000044a153
- (void)reportSwitchingError:(_Bool)arg1 errorEvent:(unsigned int)arg2;	// IMP=0x000000000044a0a9
- (void)reportCompletedSwitchingToOneToOne:(_Bool)arg1;	// IMP=0x0000000000449dce
- (void)reportStartedSwitchingToOneToOne:(_Bool)arg1;	// IMP=0x0000000000449d95
- (void)reportExistingParticipantsAnew;	// IMP=0x00000000004499b8
- (unsigned int)detailedErrorCodeForNoRemotePacketsError;	// IMP=0x0000000000449938
- (_Bool)configureRemoteParticipantForOneToOne:(id)arg1;	// IMP=0x000000000044931e
- (_Bool)isOneToOneRemoteParticipantUsingScreen;	// IMP=0x00000000004492b0
- (_Bool)isOneToOneUsingScreen;	// IMP=0x0000000000449251
- (_Bool)isPersonaCameraSupported;	// IMP=0x00000000004491bd
- (_Bool)isUsingPersonaCamera;	// IMP=0x0000000000449179
- (_Bool)isOneToOneUsingVideo;	// IMP=0x0000000000449105
- (void)stopRateControllerOneToOne;	// IMP=0x00000000004490e5
- (void)startRateControllerOneToOne;	// IMP=0x0000000000449075
- (id)newParticipantOneToOneConfigWithIDSParticipantID:(unsigned long long)arg1 isLocal:(_Bool)arg2 mediaControlInfoVersion:(unsigned char)arg3 videoEnabled:(_Bool)arg4 screenEnabled:(_Bool)arg5 remoteParticipant:(id)arg6;	// IMP=0x0000000000448b56
- (int)setupOneToOneMediaControlInfoGeneratorsWithVersion:(unsigned char)arg1 oneToOneConfig:(id)arg2 videoEnabled:(_Bool)arg3;	// IMP=0x0000000000448716
- (_Bool)configureLocalParticipantWithOneToOneRemoteParticipant:(id)arg1 isInitialConfiguration:(_Bool)arg2;	// IMP=0x0000000000448085
- (void)cleanupRateControllerOneToOne;	// IMP=0x0000000000448042
- (void)initWithRelevantStorebagEntries;	// IMP=0x0000000000447f98
- (void)updateOneToOneRateControllerForVideoEnabled:(_Bool)arg1;	// IMP=0x0000000000447f5a
- (void)updateOneToOneRateControllerForVideoEnabled:(_Bool)arg1 screenEnabled:(_Bool)arg2;	// IMP=0x0000000000447e20
- (int)setupRateControllerOneToOne;	// IMP=0x0000000000447582
- (_Bool)setOneToOneConfigOnRemoteParticipant:(id)arg1;	// IMP=0x0000000000447314
- (id)newNegotiatorForOneToOneWithRemoteParticipant:(id)arg1;	// IMP=0x0000000000446b79
- (int)setupOneToOneMediaQueue;	// IMP=0x00000000004467f1
- (int)setupOneToOne;	// IMP=0x00000000004464d3
- (void)processMediaTypeMixingList:(id)arg1 forRemoteParticipant:(id)arg2;	// IMP=0x0000000000467de8
- (void)processMediaStateMessage:(id)arg1 remoteParticipantID:(id)arg2;	// IMP=0x000000000046745b
- (void)processMediaTypeStatesWithMessage:(id)arg1 mediaTypeStates:(id)arg2;	// IMP=0x0000000000466f91
- (void)processStreamGroupStateMessageKey:(id)arg1 value:(id)arg2 mediaTypeStates:(id)arg3;	// IMP=0x0000000000466a6c
- (void)setupMediaStateUpdateMessage;	// IMP=0x0000000000466977
- (_Bool)validateStreamGroup:(id)arg1 state:(id)arg2;	// IMP=0x000000000046690f
- (void)sendMediaStateUpdateMessageToRemoteParticipant:(id)arg1;	// IMP=0x0000000000466894
- (void)broadcastMediaStateUpdateMessage;	// IMP=0x00000000004662cb
- (void)appendMediaTypeMixingListToMessageDictionary:(id)arg1;	// IMP=0x0000000000465f26
- (id)stateMessageWithSupportsNestedDictionary:(_Bool)arg1;	// IMP=0x000000000046570e
- (void)updateStateMessage:(id)arg1 stateState:(unsigned int)arg2 streamGroupKey:(id)arg3;	// IMP=0x000000000046567c
- (void)setupReactionMessages;	// IMP=0x0000000000464c8d
- (void)setupLinkConstrainsChangedMessages;	// IMP=0x0000000000464b68
- (void)setupCellTechChangeMessages;	// IMP=0x0000000000464822
- (void)remoteCellTechStateUpdate:(int)arg1 maxRemoteBitrate:(unsigned int)arg2;	// IMP=0x00000000004645d2
- (void)dispatchedRemoteCellTechStateUpdate:(id)arg1 maxRemoteBitrate:(id)arg2;	// IMP=0x000000000046446a
- (void)setupNetworkCapabilityMessage;	// IMP=0x00000000004642fe
- (void)handleNetworkCapabilityMessage:(id)arg1 forParticipantId:(id)arg2;	// IMP=0x0000000000463e36
- (void)reportKeysForDeviceStateMessage:(unsigned short)arg1 stateMessage:(id)arg2 InPayload:(id)arg3 ForParitcipant:(id)arg4;	// IMP=0x0000000000463d25
- (void)handleDeviceStateMessage:(id)arg1 forParticipantId:(id)arg2;	// IMP=0x00000000004639ad
- (void)setupDeviceStateMessage;	// IMP=0x000000000046383a
- (void)setupNetworkQualityDegradedMessage;	// IMP=0x00000000004634c4
- (void)setupMediaQualityDegradedMessage;	// IMP=0x000000000046314e
- (void)setupDisconnectMessage;	// IMP=0x0000000000462f18
- (void)setupPiPStateChangeMessage;	// IMP=0x0000000000462bf7
- (void)setupPreferredInterfaceMessage;	// IMP=0x000000000046285c
- (void)setupVideoRedundancyMessages;	// IMP=0x0000000000462610
- (void)setupMomentsMessages;	// IMP=0x00000000004623db
- (void)setupWRMAlertUpdateMessage;	// IMP=0x0000000000462065
- (void)setupSymptomEnabledMessages;	// IMP=0x0000000000461de2
- (void)processSymptomFromMessage:(id)arg1 participantID:(id)arg2 isLocalInitiated:(_Bool)arg3 isLocalSideOnly:(_Bool)arg4;	// IMP=0x0000000000461ab5
- (void)setupKeyFrameGenerationMessages;	// IMP=0x00000000004619b9
- (void)setupVideoPausedMessages;	// IMP=0x0000000000461737
- (void)setupOneToOneEnabledMessages;	// IMP=0x000000000046141a
- (void)setupAudioPausedMessages;	// IMP=0x0000000000461198
- (void)setupStreamGroupStateFetchMessage;	// IMP=0x0000000000460e50
- (void)setupVideoEnabledMessages;	// IMP=0x0000000000460bd7
- (void)setupAudioEnabledMessages;	// IMP=0x000000000046095c
- (void)broadcastSingleStateMessage:(id)arg1 withTopic:(id)arg2;	// IMP=0x00000000004607a4
- (void)broadcastMessageDictionary:(id)arg1 withTopic:(id)arg2;	// IMP=0x0000000000460619
- (void)broadcastMessage:(id)arg1 withTopic:(id)arg2;	// IMP=0x000000000046048e
- (void)stopSessionMessaging;	// IMP=0x0000000000460422
- (void)startSessionMessaging;	// IMP=0x00000000004603db
- (void)destroySessionMessaging;	// IMP=0x0000000000460383
- (void)createSessionMessaging;	// IMP=0x00000000004601d4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

