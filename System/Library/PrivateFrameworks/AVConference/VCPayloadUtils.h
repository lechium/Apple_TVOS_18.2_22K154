//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VCPayloadUtils : NSObject
{
}

+ (int)audioCodecBandwidthForVCAudioCodecBandwidth:(int)arg1;	// IMP=0x00800000000a822b
+ (int)vcAudioCodecBandwidthForAudioCodecBandwidth:(int)arg1;	// IMP=0x00800000000a821a
+ (unsigned int)bitrateForEVSCodecMode:(int)arg1;	// IMP=0x00800000000a81eb
+ (unsigned int)bitrateForAMRWBCodecMode:(int)arg1;	// IMP=0x00800000000a80f3
+ (unsigned int)bitrateForAMRCodecMode:(int)arg1;	// IMP=0x00800000000a7ffb
+ (_Bool)supportsCodecBandwidthUpdateForCodecType:(long long)arg1;	// IMP=0x00800000000a7fea
+ (_Bool)supportsCodecRateModesForCodecType:(long long)arg1;	// IMP=0x00800000000a7fd0
+ (unsigned int)bitrateForCodecType:(long long)arg1 mode:(int)arg2;	// IMP=0x00800000000a7ef8
+ (int)payloadForCodecType:(long long)arg1;	// IMP=0x00800000000a7c50
+ (long long)codecTypeForPayload:(int)arg1;	// IMP=0x00800000000a79bc
+ (float)qualityForPayload:(int)arg1 forBitrate:(unsigned int)arg2;	// IMP=0x00800000000a77d9
+ (_Bool)shouldEnablePacketSizeLimitForAudioFormat:(struct AudioStreamBasicDescription *)arg1;	// IMP=0x00800000000a775b
+ (unsigned int)internalBundleFactorForPayload:(int)arg1;	// IMP=0x00800000000a7743
+ (_Bool)canBundleExternallyForPayload:(int)arg1 forBundlingScheme:(int)arg2 operatingMode:(int)arg3;	// IMP=0x00800000000a76fb
+ (_Bool)shouldUseCookieForPayload:(int)arg1;	// IMP=0x00800000000a76df
+ (_Bool)skipBandWidthCheckForCodecRateModes:(int)arg1 supportedBitrates:(id)arg2;	// IMP=0x00800000000a7523
+ (_Bool)isFormatAACELDNonSBR48KHzStereo:(const struct AudioStreamBasicDescription *)arg1;	// IMP=0x00800000000a74ad
+ (_Bool)isOpus4Channel48KhzPayload:(int)arg1 outFormat:(const struct AudioStreamBasicDescription *)arg2;	// IMP=0x00800000000a7484
+ (_Bool)isEVSPayload:(int)arg1;	// IMP=0x00800000000a7468
+ (_Bool)isCodecModeSupported:(int)arg1 forBandwidth:(int)arg2 withPayload:(int)arg3;	// IMP=0x00800000000a7426
+ (_Bool)isAMRCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x00800000000a7408
+ (_Bool)isEVSCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x00800000000a73b0
+ (int)codecRateModeForDesiredANBR:(unsigned int)arg1 payload:(int)arg2 supportedBitrates:(id)arg3 supportedBandwidths:(id)arg4;	// IMP=0x00800000000a6e4e
+ (id)allowedBitratesForPayload:(int)arg1 supportedBitrates:(id)arg2 supportedBandwidths:(id)arg3;	// IMP=0x00800000000a6b81
+ (id)supportedCodecModesForBandwidth:(int)arg1 payload:(int)arg2;	// IMP=0x00800000000a6b2e
+ (id)codecModesForEVS32kHz;	// IMP=0x00800000000a6b21
+ (id)codecModesForEVS16kHz;	// IMP=0x00800000000a6b14
+ (id)codecModesForEVS8kHz;	// IMP=0x00800000000a6b07
+ (id)codecModesForAMR16kHz;	// IMP=0x00800000000a6afa
+ (id)codecModesForAMR8kHz;	// IMP=0x00800000000a6aed
+ (int)codecBandwidthForPayload:(int)arg1;	// IMP=0x00800000000a6ac0
+ (_Bool)canSetBitrateForPayload:(int)arg1;	// IMP=0x00800000000a6aa4
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2 sampleRate:(unsigned int)arg3;	// IMP=0x00800000000a694a
+ (double)blockSizeForPayload:(int)arg1 sampleRate:(unsigned int)arg2;	// IMP=0x00800000000a6928
+ (double)opusSamplesPerFrameForSampleRate:(unsigned int)arg1 blockSize:(double)arg2;	// IMP=0x00800000000a690b
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2;	// IMP=0x00800000000a68f0
+ (unsigned int)audioCodecTypeForPayload:(int)arg1;	// IMP=0x00800000000a67c4
+ (unsigned int)sampleRateForCodecBandwidth:(int)arg1;	// IMP=0x00800000000a67a4
+ (unsigned int)sampleRateForPayload:(int)arg1;	// IMP=0x00800000000a66df
+ (_Bool)isPayloadSupportedInFaceTime:(int)arg1;	// IMP=0x00800000000a66ac
+ (_Bool)isUseCaseWatchContinuity:(int)arg1 primaryPayload:(int)arg2;	// IMP=0x00800000000a6690

@end

