//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

@class NSData;

__attribute__((visibility("hidden")))
@interface VCMediaNegotiationBlobV2StreamGroupPayload : PBCodable
{
    unsigned int _cipherSuite;	// 8 = 0x8
    unsigned int _codecType;	// 12 = 0xc
    unsigned int _encoderUsage;	// 16 = 0x10
    unsigned int _mediaFlags;	// 20 = 0x14
    unsigned int _pTime;	// 24 = 0x18
    NSData *_packedPayload;	// 32 = 0x20
    unsigned int _profileLevelId;	// 40 = 0x28
    unsigned int _rtcpFlags;	// 44 = 0x2c
    unsigned int _rtpPayload;	// 48 = 0x30
    unsigned int _rtpSampleRate;	// 52 = 0x34
    struct {
        unsigned int cipherSuite:1;
        unsigned int codecType:1;
        unsigned int encoderUsage:1;
        unsigned int mediaFlags:1;
        unsigned int pTime:1;
        unsigned int profileLevelId:1;
        unsigned int rtcpFlags:1;
        unsigned int rtpPayload:1;
        unsigned int rtpSampleRate:1;
    } _has;	// 56 = 0x38
}

+ (void)printWithLogFile:(void *)arg1 prefix:(id)arg2 payloadConfig:(id)arg3;	// IMP=0x00100000003b8236
+ (unsigned int)pTimeWithNegotiationPackedPTime:(unsigned char)arg1;	// IMP=0x00100000003b6a30
+ (unsigned char)negotiationPackedPTimeWithPTime:(unsigned int)arg1;	// IMP=0x00100000003b6a18
+ (_Bool)isPTimePackable:(unsigned int)arg1;	// IMP=0x00100000003b69f9
+ (unsigned int)rtpSampleRateWithNegotiationPackedSampleRate:(int)arg1;	// IMP=0x00100000003b69dd
+ (int)negotiationPackedRtpSampleRateWithRTPSampleRate:(unsigned int)arg1;	// IMP=0x00100000003b6947
+ (unsigned int)cipherSuiteWithNegotiationCipherSuite:(unsigned int)arg1;	// IMP=0x00100000003b686e
+ (unsigned int)negotiationCipherSuiteWithCipherSuite:(unsigned int)arg1;	// IMP=0x00100000003b685a
+ (id)rtcpFlagStringWithPayloadConfig:(id)arg1;	// IMP=0x00100000003b6774
+ (unsigned int)mediaFlagsWithPayloadConfig:(id)arg1;	// IMP=0x00100000003b675b
+ (unsigned int)rtcpFlagsWithPayloadConfig:(id)arg1;	// IMP=0x00100000003b6703
+ (long long)codecTypeWithNegotiationCodecType:(unsigned int)arg1;	// IMP=0x00100000003b66e5
+ (_Bool)isNegotiationCodecTypeAudio:(unsigned int)arg1;	// IMP=0x00100000003b66cc
+ (unsigned int)negotiationCodecTypeWithCodecType:(long long)arg1;	// IMP=0x00100000003b65f8
+ (_Bool)isDefaultPayloadConfig:(id)arg1 index:(unsigned int)arg2 rtpSampleRate:(unsigned int)arg3 streamGroupID:(unsigned int)arg4;	// IMP=0x00100000003b63c3
+ (unsigned int)defaultRTPSampleRateForStreamGroupID:(unsigned int)arg1;	// IMP=0x00100000003b633a
+ (id)defaultPayloadConfigurationsForStreamGroupID:(unsigned int)arg1;	// IMP=0x00100000003b5d2a
+ (id)defaultMMJIConfig;	// IMP=0x00100000003b5c87
+ (id)defaultMoCapConfig;	// IMP=0x00100000003b5be4
+ (id)defaultDataCodecConfig;	// IMP=0x00100000003b5b41
+ (id)defaultFTXTCodecConfig;	// IMP=0x00100000003b5a8c
@property(nonatomic) unsigned int encoderUsage; // @synthesize encoderUsage=_encoderUsage;
@property(retain, nonatomic) NSData *packedPayload; // @synthesize packedPayload=_packedPayload;
@property(nonatomic) unsigned int cipherSuite; // @synthesize cipherSuite=_cipherSuite;
@property(nonatomic) unsigned int rtpSampleRate; // @synthesize rtpSampleRate=_rtpSampleRate;
@property(nonatomic) unsigned int profileLevelId; // @synthesize profileLevelId=_profileLevelId;
@property(nonatomic) unsigned int mediaFlags; // @synthesize mediaFlags=_mediaFlags;
@property(nonatomic) unsigned int rtcpFlags; // @synthesize rtcpFlags=_rtcpFlags;
@property(nonatomic) unsigned int pTime; // @synthesize pTime=_pTime;
@property(nonatomic) unsigned int rtpPayload; // @synthesize rtpPayload=_rtpPayload;
@property(nonatomic) unsigned int codecType; // @synthesize codecType=_codecType;
- (void)mergeFrom:(id)arg1;	// IMP=0x00000000003e7076
- (unsigned long long)hash;	// IMP=0x00000000003e6f18
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000003e6d31
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000003e6bb2
- (void)copyTo:(id)arg1;	// IMP=0x00000000003e6a73
- (void)writeTo:(id)arg1;	// IMP=0x00000000003e6901
- (_Bool)readFrom:(id)arg1;	// IMP=0x00000000003e68f4
- (id)dictionaryRepresentation;	// IMP=0x00000000003e5fa2
- (id)description;	// IMP=0x00000000003e5f08
@property(nonatomic) _Bool hasEncoderUsage;
@property(readonly, nonatomic) _Bool hasPackedPayload;
@property(nonatomic) _Bool hasCipherSuite;
@property(nonatomic) _Bool hasRtpSampleRate;
@property(nonatomic) _Bool hasProfileLevelId;
@property(nonatomic) _Bool hasMediaFlags;
@property(nonatomic) _Bool hasRtcpFlags;
@property(nonatomic) _Bool hasPTime;
@property(nonatomic) _Bool hasRtpPayload;
@property(nonatomic) _Bool hasCodecType;
- (void)dealloc;	// IMP=0x00000000003e5bf0
- (id)payloadConfigurationWithPayloadConfig:(id)arg1;	// IMP=0x00000000003b804e
- (id)payloadConfigurationWithStreamGroupID:(unsigned int)arg1 index:(unsigned int)arg2;	// IMP=0x00000000003b7d19
- (unsigned int)rtpSampleRateWithStreamGroupID:(unsigned int)arg1;	// IMP=0x00000000003b7c4d
- (id)newCompactPayloadWithPayloadConfig:(id)arg1 rtpSampleRate:(unsigned int)arg2;	// IMP=0x00000000003b7678
- (id)initWithPayloadConfig:(id)arg1 index:(unsigned int)arg2 rtpSampleRate:(unsigned int)arg3 streamGroupID:(unsigned int)arg4;	// IMP=0x00000000003b6efa
- (id)initWithPayloadConfig:(id)arg1 rtpSampleRate:(unsigned int)arg2;	// IMP=0x00000000003b6a39
- (void)getStreamGroupPayload:(struct tagStreamGroupPayload *)arg1;	// IMP=0x00000000003b690b
- (void)setNegotiationPackedPayloadWithStreamGroupPayload:(struct tagStreamGroupPayload *)arg1;	// IMP=0x00000000003b6882

@end

