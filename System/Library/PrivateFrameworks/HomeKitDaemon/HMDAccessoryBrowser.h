//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMDAccessoryServerBrowserDemo, HMDAuthServer, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedMediaAccessory, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMMTRAccessoryServerBrowser, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, HMDAccessoryBrowserUnpairedAccessoryManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface HMDAccessoryBrowser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSMutableSet *_unpairedHAPAccessories;	// 16 = 0x10
    NSMutableSet *_unassociatedMediaAccessories;	// 24 = 0x18
    NSMutableSet *_deviceSetupMediaAccessories;	// 32 = 0x20
    NSMutableSet *_unassociatedWACAccessories;	// 40 = 0x28
    HMDUnassociatedMediaAccessory *_unassociatedCurrentAccessory;	// 48 = 0x30
    NSMutableSet *_browsingConnections;	// 56 = 0x38
    NSHashTable *_activeAssertions;	// 64 = 0x40
    NSMutableSet *_discoveredAccessoryServerIdentifiers;	// 72 = 0x48
    _Bool _btlePowerState;	// 80 = 0x50
    _Bool _internalDiscoveryRequest;	// 81 = 0x51
    _Bool _unitTestEnableWHB;	// 82 = 0x52
    _Bool _active;	// 83 = 0x53
    _Bool _hasActiveWACPairing;	// 84 = 0x54
    HMMTRAccessoryServerBrowser *_chipAccessoryServerBrowser;	// 88 = 0x58
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;	// 96 = 0x60
    id <HMDAccessoryBrowserManagerDelegate> _managerDelegate;	// 104 = 0x68
    id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> _unpairedAccessoryManagerDelegate;	// 112 = 0x70
    NSArray *_browseableLinkTypes;	// 120 = 0x78
    unsigned long long _unitTestBTLEReachabilityInterval;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_workQueue;	// 136 = 0x88
    NSUUID *_uuid;	// 144 = 0x90
    HMFMessageDispatcher *_messageDispatcher;	// 152 = 0x98
    unsigned long long _generationCounter;	// 160 = 0xa0
    HMDHomeManager *_homeManager;	// 168 = 0xa8
    NSMutableArray *_accessoryServerBrowsers;	// 176 = 0xb0
    NSHashTable *_discoveringAccessoryServerBrowsers;	// 184 = 0xb8
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;	// 192 = 0xc0
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;	// 200 = 0xc8
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;	// 208 = 0xd0
    HMDHAP2Storage *_hap2Storage;	// 216 = 0xd8
    HMDMediaBrowser *_mediaBrowser;	// 224 = 0xe0
    HMDWACBrowser *_wacBrowser;	// 232 = 0xe8
    HMDAuthServer *_authServer;	// 240 = 0xf0
    HMDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;	// 248 = 0xf8
    HMFTimer *_stopReprovisioningTimer;	// 256 = 0x100
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;	// 264 = 0x108
    NSString *_identifierOfAccessoryBeingReprovisioned;	// 272 = 0x110
    NSData *_wiFiPSKForAccessoryReprovisioning;	// 280 = 0x118
    NSString *_countrycodeForAccessoryReprovisioning;	// 288 = 0x120
    NSMutableArray *_pairedAccessories;	// 296 = 0x128
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;	// 304 = 0x130
    NSMutableArray *_currentlyPairingAccessories;	// 312 = 0x138
    NSMutableArray *_currentlyPairingProgressHandlers;	// 320 = 0x140
    NSHashTable *_tombstonedHAPAccessoryServers;	// 328 = 0x148
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;	// 336 = 0x150
}

+ (id)logCategory;	// IMP=0x0010000000baf98e
- (void).cxx_destruct;	// IMP=0x0000000000ba6754
@property(nonatomic) _Bool hasActiveWACPairing; // @synthesize hasActiveWACPairing=_hasActiveWACPairing;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property(retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property(retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property(readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property(readonly, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property(retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property(retain, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property(retain, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property(retain, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property(retain, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property(retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers; // @synthesize discoveringAccessoryServerBrowsers=_discoveringAccessoryServerBrowsers;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) unsigned long long unitTestBTLEReachabilityInterval; // @synthesize unitTestBTLEReachabilityInterval=_unitTestBTLEReachabilityInterval;
@property(nonatomic) _Bool unitTestEnableWHB; // @synthesize unitTestEnableWHB=_unitTestEnableWHB;
@property(retain, nonatomic) NSArray *browseableLinkTypes; // @synthesize browseableLinkTypes=_browseableLinkTypes;
@property(nonatomic) __weak id <HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property(nonatomic) _Bool btlePowerState; // @synthesize btlePowerState=_btlePowerState;
@property(readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser; // @synthesize chipAccessoryServerBrowser=_chipAccessoryServerBrowser;
- (id)dumpRegisteredPairedAccessories;	// IMP=0x0000000000ba60b9
- (id)dumpUnassociatedAccessories;	// IMP=0x0000000000ba5dd8
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3 matterPairingEndContext:(id)arg4;	// IMP=0x0000000000ba5c20
- (void)notifyMatterAccessoryPairingStep:(unsigned long long)arg1;	// IMP=0x0000000000ba5c04
- (void)notifyMTRMetrics:(id)arg1;	// IMP=0x0000000000ba5a40
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2 matterPairingEndContext:(id)arg3;	// IMP=0x0000000000ba58a7
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;	// IMP=0x0000000000ba5679
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;	// IMP=0x0000000000ba556c
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;	// IMP=0x0000000000ba548e
- (void)didFinishActivation:(id)arg1 context:(id)arg2;	// IMP=0x0000000000ba53b0
- (void)browser:(id)arg1 didLoseAssociatedMediaAccessory:(id)arg2 error:(id)arg3;	// IMP=0x0000000000ba5251
- (void)browser:(id)arg1 didFindAssociatedMediaAccessory:(id)arg2;	// IMP=0x0000000000ba50ef
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;	// IMP=0x0000000000ba5037
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;	// IMP=0x0000000000ba4f8e
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;	// IMP=0x0000000000ba4ed6
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;	// IMP=0x0000000000ba4e1e
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 linkLayerType:(long long)arg3 bookkeeping:(id)arg4 withError:(id)arg5;	// IMP=0x0000000000ba4bc2
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 sessionInfo:(id)arg3 linkLayerType:(long long)arg4 withError:(id)arg5;	// IMP=0x0000000000ba4965
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 linkLayerType:(long long)arg3 withError:(id)arg4;	// IMP=0x0000000000ba493d
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;	// IMP=0x0000000000ba462a
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;	// IMP=0x0000000000ba42e7
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;	// IMP=0x0000000000ba420c
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;	// IMP=0x0000000000ba3b99
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;	// IMP=0x0000000000ba3889
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;	// IMP=0x0000000000ba341a
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x0000000000ba3219
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x0000000000ba3172
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x0000000000ba2f97
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;	// IMP=0x0000000000ba2e94
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x0000000000ba2b8f
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x0000000000ba299b
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;	// IMP=0x0000000000ba28e7
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;	// IMP=0x0000000000ba2853
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x0000000000ba27a6
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x0000000000ba2555
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000ba2477
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x0000000000ba1bb3
- (void)updateProgressForMappedErrors:(id)arg1 accessoryServer:(id)arg2 progressHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000ba1af5
- (void)updateAlreadyPairingProgressForAccessoryServerIdentifier:(id)arg1 progressHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000ba17f1
- (void)updatePairingWithProgress:(long long)arg1 accessoryServer:(id)arg2;	// IMP=0x0000000000ba1739
- (void)_updateHasActiveWACPairing:(long long)arg1;	// IMP=0x0000000000ba1689
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;	// IMP=0x0000000000ba1306
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x0000000000ba10eb
- (void)_accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2 matterPairingEndContext:(id)arg3;	// IMP=0x0000000000ba06bc
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x0000000000ba06a7
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x0000000000ba04cf
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;	// IMP=0x0000000000ba0339
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;	// IMP=0x0000000000b9fe7c
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;	// IMP=0x0000000000b9ed82
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b9eb2f
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;	// IMP=0x0000000000b9e66c
- (void)_continueAfterPPIDValidation:(_Bool)arg1 server:(id)arg2;	// IMP=0x0000000000b9e657
- (id)_getHAPMetadataFromHMMetadata:(id)arg1;	// IMP=0x0000000000b9e4d2
- (void)accessoryServerBrowser:(id)arg1 getLockedState:(_Bool *)arg2;	// IMP=0x0000000000b9e4c9
- (void)accessoryServerBrowser:(id)arg1 getThreadNetworkCredentialsForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b9df14
- (void)accessoryServerBrowser:(id)arg1 didFinishPairingForAccessoryServer:(id)arg2;	// IMP=0x0000000000b9de57
- (void)accessoryServerBrowser:(id)arg1 getCachedOperationalCertificateDataForFabricID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b9ddb1
- (void)accessoryServerBrowser:(id)arg1 cacheOperationalCertData:(id)arg2 forFabricID:(id)arg3;	// IMP=0x0000000000b9dc4a
- (_Bool)supportsCommissioningCertificateRetrievalForHomeUUID:(id)arg1;	// IMP=0x0000000000b9d84b
- (_Bool)supportsCommissioningCertificateRetrievalForCurrentlyPairingAccessory;	// IMP=0x0000000000b9d4d4
- (void)accessoryServerBrowser:(id)arg1 getCommissioningCertificatesForNodeID:(id)arg2 fabricID:(id)arg3 publicKey:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000b9d0b1
- (void)removeAccessoryCacheForIdentifier:(id)arg1;	// IMP=0x0000000000b9d09a
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b9d080
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x0000000000b9d066
- (_Bool)isServerLinkTypeBrowseable:(long long)arg1;	// IMP=0x0000000000b9cd8a
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;	// IMP=0x0000000000b9cd6e
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b9ccfb
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;	// IMP=0x0000000000b9ccd5
- (void)_notifyDelegateOfReachabilityChangeChange:(_Bool)arg1 forBTLEAccessories:(id)arg2;	// IMP=0x0000000000b9cb00
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(_Bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;	// IMP=0x0000000000b9cae9
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;	// IMP=0x0000000000b9c5b4
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;	// IMP=0x0000000000b9c20e
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;	// IMP=0x0000000000b9bf46
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;	// IMP=0x0000000000b9be11
- (void)_accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3 matterPairingEndContext:(id)arg4;	// IMP=0x0000000000b9b647
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;	// IMP=0x0000000000b9b632
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;	// IMP=0x0000000000b9b16f
- (void)_startPairingInterruptionTimer:(id)arg1;	// IMP=0x0000000000b9addb
- (void)_stopReconfirmTimer:(id)arg1;	// IMP=0x0000000000b9abb7
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b9aa0e
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b9a831
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x0000000000b9a778
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b9a59b
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;	// IMP=0x0000000000b9a583
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b9a3e9
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;	// IMP=0x0000000000b9a0c6
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(_Bool)arg3 stateNumber:(id)arg4;	// IMP=0x0000000000b99cf6
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;	// IMP=0x0000000000b998e9
- (void)_removePairingInformation:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000b99545
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(_Bool)arg5;	// IMP=0x0000000000b992cc
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(_Bool)arg2 stateNumber:(id)arg3;	// IMP=0x0000000000b98fdd
- (void)_resurrectAccessoryServer:(id)arg1;	// IMP=0x0000000000b98e01
- (void)_discoverAccessories:(id)arg1;	// IMP=0x0000000000b98a02
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;	// IMP=0x0000000000b98644
- (void)_tombstoneAccessoryServer:(id)arg1 forceNotify:(_Bool)arg2;	// IMP=0x0000000000b98447
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;	// IMP=0x0000000000b9826a
- (_Bool)_shouldAccessoryServerBeTombstoned:(id)arg1;	// IMP=0x0000000000b9818a
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;	// IMP=0x0000000000b97fb7
- (_Bool)_isAccessoryServerTombstoned:(id)arg1;	// IMP=0x0000000000b97f49
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSObject<OS_dispatch_queue>",?,R,N

@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)messageDestination;	// IMP=0x0000000000b97ebc
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 matterPairingEndContext:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b97c93
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;	// IMP=0x0000000000b979d3
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;	// IMP=0x0000000000b97312
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b95b73
- (_Bool)_isHomeHubMatterSharedAdminPairingCapableWithConfiguration:(id)arg1;	// IMP=0x0000000000b958ef
- (_Bool)_isHomeHubAvailableWithConfiguration:(id)arg1;	// IMP=0x0000000000b957de
- (_Bool)_isPrimaryResidentReachableWithConfiguration:(id)arg1;	// IMP=0x0000000000b956be
- (_Bool)_isOwnerPairingAccessoryWithConfiguration:(id)arg1;	// IMP=0x0000000000b9548d
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b927f0
- (void)_cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000b92201
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000b920f6
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b920e1
- (id)currentControllerPairingIdentity;	// IMP=0x0000000000b92067
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;	// IMP=0x0000000000b91d0c
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000b9104f
- (void)_handleSetupCodeAvailable:(id)arg1;	// IMP=0x0000000000b90ca3
- (void)_notifyManagerOfNewAccessory;	// IMP=0x0000000000b90b84
- (id)unpairedAccessoryForServer:(id)arg1;	// IMP=0x0000000000b90ae1
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x0000000000b9090e
- (void)_setBTLEPowerChangeCompletionHandler;	// IMP=0x0000000000b9082d
- (void)handleXPCConnectionInvalidated:(id)arg1;	// IMP=0x0000000000b90775
- (void)_handleRequestSearchForNewAccessories:(id)arg1;	// IMP=0x0000000000b90035
- (void)_handleRequestFetchNewAccessories:(id)arg1;	// IMP=0x0000000000b8fa63
- (void)_handleCurrentWiFiNetworkChangedNotification:(id)arg1;	// IMP=0x0000000000b8f9de
- (void)__handleProcessStateChange:(id)arg1;	// IMP=0x0000000000b8f884
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1 linkType:(id)arg2;	// IMP=0x0000000000b8eded
- (void)_registerForNotifications;	// IMP=0x0000000000b8ecf5
- (void)_registerForMessages;	// IMP=0x0000000000b8ea78
@property(nonatomic) __weak id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> unpairedAccessoryManagerDelegate; // @synthesize unpairedAccessoryManagerDelegate=_unpairedAccessoryManagerDelegate;
- (void)resurrectAccessoryServer:(id)arg1;	// IMP=0x0000000000b8e8c8
- (void)tombstoneAccessoryServer:(id)arg1;	// IMP=0x0000000000b8e810
- (void)discoverAccessories:(id)arg1;	// IMP=0x0000000000b8e758
- (void)handleConnectionUpdateWithBonjourDeviceInfo:(id)arg1 socketInfo:(id)arg2;	// IMP=0x0000000000b8e6cd
- (void)restartBrowsers;	// IMP=0x0000000000b8e65c
- (void)_restartBrowsers;	// IMP=0x0000000000b8e1ce
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000b8dd98
- (void)startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000b8dd27
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000b8dc0f
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;	// IMP=0x0000000000b8db91
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000b8d746
- (void)_stopDiscoveringMediaAccessories;	// IMP=0x0000000000b8d58e
- (void)_startDiscoveringMediaAccessories;	// IMP=0x0000000000b8d4f4
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000b8d3dc
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;	// IMP=0x0000000000b8d09c
- (void)_startDiscoveringPairedAccessories:(id)arg1;	// IMP=0x0000000000b8cdb7
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b8cb8c
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b8c632
- (void)timerDidFire:(id)arg1;	// IMP=0x0000000000b8be77
- (void)_stopReprovisioningTimerHandler;	// IMP=0x0000000000b8bb79
- (void)_startOrStopAccessoryDiscovery;	// IMP=0x0000000000b8bb73
- (void)evaluateAccessoryDiscoveryState;	// IMP=0x0000000000b8baf6
- (void)_stopBtleAccessoryReachabilityProbeTimer;	// IMP=0x0000000000b8b980
- (void)_btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x0000000000b8b48e
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000b8b383
- (void)handleSetupCodeAvailable:(id)arg1;	// IMP=0x0000000000b8b2cb
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(_Bool)arg2;	// IMP=0x0000000000b8b214
- (void)removePairingInformationForAccessoryServer:(id)arg1;	// IMP=0x0000000000b8b15c
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;	// IMP=0x0000000000b8b0fd
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b8afb6
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b8aeab
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;	// IMP=0x0000000000b8adcd
- (void)_removeDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x0000000000b8ad52
- (void)_addDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x0000000000b8acd7
- (id)discoveredAccessoryServers;	// IMP=0x0000000000b8ac77
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;	// IMP=0x0000000000b8ab99
- (void)deregisterPairedAccessory:(id)arg1;	// IMP=0x0000000000b8a925
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;	// IMP=0x0000000000b8a271
- (void)_addUnpairedAccessoryForServer:(id)arg1;	// IMP=0x0000000000b89319
- (void)_setupHMMTRAccessoryServer:(id)arg1 pairingInfo:(id)arg2;	// IMP=0x0000000000b89077
- (void)_handleWACAccessoryFound;	// IMP=0x0000000000b88e5b
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000b88bf8
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000b88b7e
- (void)removeUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000b88a5e
- (void)addUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000b8893e
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000b88788
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;	// IMP=0x0000000000b88667
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b88486
@property(retain, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
- (void)updateUnassociatedWACAccessory:(id)arg1;	// IMP=0x0000000000b88345
- (void)removeUnassociatedWACAccessory:(id)arg1;	// IMP=0x0000000000b88225
- (void)addUnassociatedWACAccessory:(id)arg1;	// IMP=0x0000000000b88142
- (void)removeUnassociatedMediaAccessory:(id)arg1;	// IMP=0x0000000000b87fe9
- (void)_associateMediaAccessoryForServer:(id)arg1;	// IMP=0x0000000000b87d68
- (void)_associate:(_Bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;	// IMP=0x0000000000b8787c
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x0000000000b874af
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000b872b4
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;	// IMP=0x0000000000b87048
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000b86ea3
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;	// IMP=0x0000000000b86d26
- (id)unpairedAccessoryWithUUID:(id)arg1;	// IMP=0x0000000000b86cac
@property(readonly, nonatomic) NSArray *unpairedHAPAccessories;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 forceScan:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b86b5d
- (_Bool)isBrowsingAllowed;	// IMP=0x0000000000b86b55
- (id)accessoryBrowserHapProtocol;	// IMP=0x0000000000b86b4c
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;	// IMP=0x0000000000b86a94
- (void)homeLocationChangeNotification:(id)arg1;	// IMP=0x0000000000b868e3
- (void)updateRemoteAccessoryBrowsing:(_Bool)arg1 whbScan:(_Bool)arg2;	// IMP=0x0000000000b86500
- (_Bool)supportsRemoteBrowsing;	// IMP=0x0000000000b864eb
- (void)handleConnectionDeactivation:(id)arg1;	// IMP=0x0000000000b86433
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b85ecf
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b85d88
- (void)activate:(_Bool)arg1;	// IMP=0x0000000000b85d0e
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b85c24
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;	// IMP=0x0000000000b85b6c
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x0000000000b85af2
- (void)stopDiscoveringMediaAccessories;	// IMP=0x0000000000b85a81
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000b85a05
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000b85989
- (void)stopDiscoveringAccessories;	// IMP=0x0000000000b85918
- (void)startDiscoveringMediaAccessories;	// IMP=0x0000000000b858a7
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000b8582b
- (void)startDiscoveringAccessories;	// IMP=0x0000000000b857ba
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000b8573e
- (void)startDiscoveringPairedAccessories;	// IMP=0x0000000000b856cd
- (_Bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000b8551b
- (void)resetConfiguration;	// IMP=0x0000000000b854aa
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;	// IMP=0x0000000000b84f26
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;	// IMP=0x0000000000b841b5
- (void)_notifyDelegateOfReachabilityChange:(_Bool)arg1 forAccessoryWithIdentifier:(id)arg2;	// IMP=0x0000000000b83ff9
- (void)__inactivate;	// IMP=0x0000000000b83f88
- (void)__activate;	// IMP=0x0000000000b83f17
- (void)endActiveAssertion:(id)arg1;	// IMP=0x0000000000b83cba
- (id)beginActiveAssertionWithReason:(id)arg1;	// IMP=0x0000000000b83b3a
- (unsigned long long)numPairedIPAccessories;	// IMP=0x0000000000b83af1
- (_Bool)areThereAnyAssociatedAirPlayAccessories;	// IMP=0x0000000000b83aa9
- (id)identifiersOfAssociatedMediaAccessories;	// IMP=0x0000000000b83a92
- (_Bool)areThereAnyPairedBTLEAccessories;	// IMP=0x0000000000b83a4a
- (id)identifiersOfPairedUnknownLinkTypeAccessories;	// IMP=0x0000000000b839f3
- (_Bool)areThereAnyPairedUnknownLinkTypeAccessories;	// IMP=0x0000000000b839a8
- (id)identifiersOfPairedBTLEAccessories;	// IMP=0x0000000000b83991
- (_Bool)areThereAnyPairedAccessories;	// IMP=0x0000000000b83949
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;	// IMP=0x0000000000b8371f
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;	// IMP=0x0000000000b835ff
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;	// IMP=0x0000000000b833fd
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;	// IMP=0x0000000000b8322a
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;	// IMP=0x0000000000b82fe3
- (void)resetPairedAccessories;	// IMP=0x0000000000b82f8e
- (void)removePairedAccessory:(id)arg1;	// IMP=0x0000000000b82f13
- (void)addPairedAccessory:(id)arg1;	// IMP=0x0000000000b82cab
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b82a8a
- (void)__addBrowsingConnection:(id)arg1;	// IMP=0x0000000000b823a8
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;	// IMP=0x0000000000b81ffb
- (_Bool)__isMediaAccessoryBrowsingRequested;	// IMP=0x0000000000b81fb3
- (_Bool)__isAccessoryBrowsingRequested;	// IMP=0x0000000000b81f6b
- (void)__resetBrowsingConnections;	// IMP=0x0000000000b81f16
- (id)browsingConnections;	// IMP=0x0000000000b81eb6
@property _Bool internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
- (id)dumpBrowsingConnections;	// IMP=0x0000000000b81bea
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;	// IMP=0x0000000000b817d2
- (void)_handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000b81688
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000b815d0
- (void)_handleAddedAccessory:(id)arg1;	// IMP=0x0000000000b81479
- (void)handleAddedAccessory:(id)arg1;	// IMP=0x0000000000b813c1
@property(readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property(readonly, nonatomic) NSArray *unassociatedMediaAccessories;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;	// IMP=0x0000000000b8111e
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;	// IMP=0x0000000000b80e92
- (void)resetUnassociatedCurrentAccessory;	// IMP=0x0000000000b80d3f
- (void)populateUnassociatedCurrentAccessory;	// IMP=0x0000000000b80b6b
@property(readonly, copy) NSArray *unassociatedAccessories;
- (void)removeUnassociatedAccessory:(id)arg1;	// IMP=0x0000000000b80783
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;	// IMP=0x0000000000b804e8
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x0000000000b80325
- (void)_handleTestModeConfigRequest:(id)arg1;	// IMP=0x0000000000b7fd52
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(_Bool)arg2;	// IMP=0x0000000000b7fb97
- (void)validateLinkTypes:(id)arg1;	// IMP=0x0000000000b7fa10
- (void)dealloc;	// IMP=0x0000000000b7f968
- (void)updateBroadcastKeyForIdentifier:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;	// IMP=0x0000000000b7f84e
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;	// IMP=0x0000000000b7f7c3
- (void)retrieveCurrentStateForIdentifier:(id)arg1 stateNumber:(id *)arg2 isReachable:(_Bool *)arg3 linkQuality:(unsigned long long *)arg4 lastSeen:(id *)arg5;	// IMP=0x0000000000b7f734
- (void)setQOS:(long long)arg1;	// IMP=0x0000000000b7f6b8
- (void)configureAccessory:(id)arg1 trackState:(_Bool)arg2 connectionPriority:(_Bool)arg3;	// IMP=0x0000000000b7f5f7
- (void)configureWithHomeManager:(id)arg1 mediaBrowserFactory:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b7f519
- (void)configureWithHomeManager:(id)arg1;	// IMP=0x0000000000b7f500
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;	// IMP=0x0000000000b7ed11
- (id)initWithMessageDispatcher:(id)arg1;	// IMP=0x0000000000b7ecad

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

