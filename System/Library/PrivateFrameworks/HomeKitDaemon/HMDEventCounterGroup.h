//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class NSDictionary, NSMutableDictionary;
@protocol HMDEventCounterContext, HMMUptimeProvider;

__attribute__((visibility("hidden")))
@interface HMDEventCounterGroup : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSMutableDictionary *_mutableEventCounters;	// 16 = 0x10
    NSMutableDictionary *_runningDurationCounters;	// 24 = 0x18
    id <HMDEventCounterContext> _context;	// 32 = 0x20
    id <HMMUptimeProvider> _uptimeProvider;	// 40 = 0x28
}

- (void).cxx_destruct;	// IMP=0x000000000039d40a
@property(readonly, nonatomic) id <HMMUptimeProvider> uptimeProvider; // @synthesize uptimeProvider=_uptimeProvider;
@property(readonly, nonatomic) __weak id <HMDEventCounterContext> context; // @synthesize context=_context;
- (void)forceSave;	// IMP=0x000000000039d3a3
- (void)resetEventCounters;	// IMP=0x000000000039d00a
- (_Bool)_resetEventCounterForEventName:(id)arg1;	// IMP=0x000000000039cd1f
- (unsigned long long)maxCounterName:(id *)arg1;	// IMP=0x000000000039cbab
- (unsigned long long)summedEventCountersForDate:(id)arg1;	// IMP=0x000000000039cb99
@property(readonly, nonatomic) unsigned long long summedEventCounters;
- (id)eventCountersForDate:(id)arg1;	// IMP=0x000000000039c9da
@property(readonly, nonatomic) NSDictionary *eventCounters;
- (unsigned long long)fetchMaxValueForStatisticsName:(id)arg1;	// IMP=0x000000000039c8a8
- (double)durationForCounter:(id)arg1 forDate:(id)arg2;	// IMP=0x000000000039c896
- (double)durationForCounter:(id)arg1;	// IMP=0x000000000039c824
- (void)addDuration:(double)arg1 toCounter:(id)arg2;	// IMP=0x000000000039c7f8
- (void)updateAllDurationCounters;	// IMP=0x000000000039c566
- (void)updateDurationCounter:(id)arg1;	// IMP=0x000000000039c408
- (unsigned long long)fetchEventCounterForEventName:(id)arg1 forDate:(id)arg2;	// IMP=0x000000000039c3f6
- (unsigned long long)fetchEventCounterForEventName:(id)arg1;	// IMP=0x000000000039c34c
- (void)addValue:(unsigned long long)arg1 toStatisticsName:(id)arg2;	// IMP=0x000000000039c150
- (void)pauseDurationCounter:(id)arg1;	// IMP=0x000000000039c094
- (void)resumeDurationCounter:(id)arg1;	// IMP=0x000000000039bf3c
- (void)_incrementEventCounterForEventName:(id)arg1 withValue:(unsigned long long)arg2;	// IMP=0x000000000039bd62
- (void)incrementEventCounterForEventName:(id)arg1 withValue:(unsigned long long)arg2;	// IMP=0x000000000039bd15
- (void)incrementEventCounterForEventName:(id)arg1;	// IMP=0x000000000039bcfe
- (id)_getOrCreateEventCounterForEventName:(id)arg1;	// IMP=0x000000000039bc38
- (void)addMaxValueObserver:(id)arg1 forStatisticsName:(id)arg2;	// IMP=0x000000000039bc26
- (void)addObserver:(id)arg1 forEventName:(id)arg2;	// IMP=0x000000000039ba7a
- (id)initWithContext:(id)arg1 serializedEventCounters:(id)arg2 uptimeProvider:(id)arg3;	// IMP=0x000000000039b8dd
- (id)initWithContext:(id)arg1 serializedEventCounters:(id)arg2;	// IMP=0x000000000039b846

@end

