//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class HAPSocketInfo, HMCameraUserNotificationSettings, HMDAccessoryAdvertisement, HMDAccessoryDiagnosticsManager, HMDAccessoryMetric, HMDAccessorySymptomHandler, HMDAnalyticsHAPServiceData, HMDBulletinBoard, HMDCHIPAccessoryStorage, HMDCameraProfileSettingsManager, HMDDataStreamController, HMDDoorbellChimeController, HMDHAPMetadata, HMDHome, HMDLightProfile, HMDLowPowerModeProfile, HMDMatterAccessoryAdapter, HMDMatterAccessoryDiagnosticsManager, HMDMediaProfile, HMDNetworkRouterController, HMDPendingCharacteristic, HMDService, HMDSiriEndpointProfile, HMDSiriEndpointProfileMetricsDispatcher, HMDTargetControllerManager, HMDUser, HMDWiFiManagementController, HMFConnectivityInfo, HMFPairingIdentity, HMFTimer, HMMTRAccessoryServer, HMSupportedAccessoryDiagnostics, NAFuture, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString;
@protocol HMDDataStreamSocketController, HMDMessageRouter;

__attribute__((visibility("hidden")))
@interface HMDHAPAccessory
{
    NSMutableArray *_transportInformationInstances;	// 32 = 0x20
    NSMutableArray *_services;	// 40 = 0x28
    _Bool _supportsTargetController;	// 48 = 0x30
    _Bool _keyGenerationInProgress;	// 49 = 0x31
    _Bool _hardwareSupport;	// 50 = 0x32
    _Bool _shouldDisconnectOnIdle;	// 51 = 0x33
    _Bool _reachableViaBSP;	// 52 = 0x34
    _Bool _supportsAccessCode;	// 53 = 0x35
    _Bool _hasPostedBulletinForAccessCodeOnboarding;	// 54 = 0x36
    _Bool _supportsWalletKey;	// 55 = 0x37
    _Bool _hasPostedBulletinForWalletKeyOnboarding;	// 56 = 0x38
    _Bool _requiresThreadRouter;	// 57 = 0x39
    _Bool _convertingToNativeMatter;	// 58 = 0x3a
    _Bool _supportsACWGProvisioning;	// 59 = 0x3b
    _Bool _supportsACWGUWB;	// 60 = 0x3c
    _Bool _mfiCertifiedACWG;	// 61 = 0x3d
    unsigned char _keyGenerationType;	// 62 = 0x3e
    _Bool _supportsMatterWeekDaySchedule;	// 63 = 0x3f
    _Bool _supportsMatterYearDaySchedule;	// 64 = 0x40
    _Bool _hasSiriEndpointService;	// 65 = 0x41
    NSNumber *_accessoryFlags;	// 72 = 0x48
    NSNumber *_internalEnhancedAuthConfigNumber;	// 80 = 0x50
    NSNumber *_internalEnhancedAuthMethod;	// 88 = 0x58
    NSData *_setupHash;	// 96 = 0x60
    NSData *_broadcastKey;	// 104 = 0x68
    NSNumber *_keyUpdatedStateNumber;	// 112 = 0x70
    NSDate *_keyUpdatedTime;	// 120 = 0x78
    NSArray *_targetUUIDs;	// 128 = 0x80
    HMDTargetControllerManager *_targetControllerManager;	// 136 = 0x88
    HMDAccessorySymptomHandler *_symptomsHandler;	// 144 = 0x90
    NSSet *_identifiersForBridgedAccessories;	// 152 = 0x98
    HMDService *_primaryService;	// 160 = 0xa0
    HMDPendingCharacteristic *_pendingPowerOn;	// 168 = 0xa8
    HMDNetworkRouterController *_networkRouterController;	// 176 = 0xb0
    HMFConnectivityInfo *_connectivityInfo;	// 184 = 0xb8
    NSMutableArray *_powerOnCompletionRoutines;	// 192 = 0xc0
    HMDCameraProfileSettingsManager *_cameraProfileSettingsManager;	// 200 = 0xc8
    HMDWiFiManagementController *_wiFiManagementController;	// 208 = 0xd0
    NSNumber *_wiFiTransportCapabilities;	// 216 = 0xd8
    HMDAccessoryDiagnosticsManager *_diagnosticsManager;	// 224 = 0xe0
    NSNumber *_sleepInterval;	// 232 = 0xe8
    long long _communicationProtocol;	// 240 = 0xf0
    NSNumber *_hasOnboardedForNaturalLighting;	// 248 = 0xf8
    HMCameraUserNotificationSettings *_cameraProfileNotificationSettings;	// 256 = 0x100
    NSSet *_initialServiceTypeUUIDs;	// 264 = 0x108
    NSMutableSet *_activeSessionRestoreClients;	// 272 = 0x110
    HMDAccessoryAdvertisement *_accessoryAdvertisement;	// 280 = 0x118
    HMDDoorbellChimeController *_doorbellChimeController;	// 288 = 0x120
    NSNumber *_internalThreadCapabilities;	// 296 = 0x128
    NSNumber *_internalThreadStatus;	// 304 = 0x130
    NSNumber *_internalThreadActive;	// 312 = 0x138
    unsigned long long _suspendedState;	// 320 = 0x140
    NSNumber *_wakingViaCharacteristicWithIID;	// 328 = 0x148
    NSNumber *_needsOnboarding;	// 336 = 0x150
    unsigned long long _siriEndpointCapabilities;	// 344 = 0x158
    NSMutableDictionary *_accessCodeCache;	// 352 = 0x160
    NSNumber *_supportsMatterAccessCode;	// 360 = 0x168
    NSNumber *_supportsMatterWalletKey;	// 368 = 0x170
    HMDBulletinBoard *_bulletinBoard;	// 376 = 0x178
    HMDCHIPAccessoryStorage *_chipStorage;	// 384 = 0x180
    NSNumber *_supportsNaturalLighting;	// 392 = 0x188
    NSNumber *_naturalLightingEnabled;	// 400 = 0x190
    HMMTRAccessoryServer *_chipAccessoryServer;	// 408 = 0x198
    NSNumber *_matterSoftwareVersionNumber;	// 416 = 0x1a0
    NSNumber *_chipWEDSupport;	// 424 = 0x1a8
    NSString *_chipExtendedMACAddress;	// 432 = 0x1b0
    NSString *_uniqueIdentifier;	// 440 = 0x1b8
    long long _certificationStatus;	// 448 = 0x1c0
    NSNumber *_matterNodeID;	// 456 = 0x1c8
    NSNumber *_matterVendorID;	// 464 = 0x1d0
    NSNumber *_matterProductID;	// 472 = 0x1d8
    NSNumber *_supportedLinkLayerTypes;	// 480 = 0x1e0
    NSData *_readerGroupSubIdentifierACWG;	// 488 = 0x1e8
    NSData *_preexistingReaderGroupIdentifierACWG;	// 496 = 0x1f0
    HMDAnalyticsHAPServiceData *_primaryHAPServiceForAnalytics;	// 504 = 0x1f8
    NSArray *_hapServicesListForAnalytics;	// 512 = 0x200
    NSString *_lastLockOperationEventRequestIdentifier;	// 520 = 0x208
    unsigned long long _activationAttempts;	// 528 = 0x210
    unsigned long long _pairingAttempts;	// 536 = 0x218
    NSNumber *_backedOffStateNumber;	// 544 = 0x220
    HMFTimer *_accessoryDiscoveryBackoffTimer;	// 552 = 0x228
    HMFTimer *_accessoryKeyRefreshTimer;	// 560 = 0x230
    HMFTimer *_sessionRestoreTimer;	// 568 = 0x238
    double _lastLinkChangeSessionCheckTime;	// 576 = 0x240
    unsigned long long _lastSessionStatus;	// 584 = 0x248
    HMDAccessoryMetric *_accessoryMetric;	// 592 = 0x250
    NSNumber *_matterWeekDayScheduleCapacity;	// 600 = 0x258
    NSNumber *_matterYearDayScheduleCapacity;	// 608 = 0x260
    HMDSiriEndpointProfileMetricsDispatcher *_siriEndpointProfileMetricsDispatcher;	// 616 = 0x268
    HMDUser *_cachedRemovedUser;	// 624 = 0x270
    HMDMatterAccessoryAdapter *_matterAdapter;	// 632 = 0x278
    NSMutableArray *_discoveredServices;	// 640 = 0x280
    NSData *_publicKey;	// 648 = 0x288
    NSString *_pairingUsername;	// 656 = 0x290
    HMDDataStreamController *_dataStreamController;	// 664 = 0x298
    NSMutableArray *_pendingReads;	// 672 = 0x2a0
    HMDHAPMetadata *_hapMetadata;	// 680 = 0x2a8
    HMDMatterAccessoryDiagnosticsManager *_matterDiagnosticManager;	// 688 = 0x2b0
    NAFuture *_didConfigureCHIPAccessoryServerFuture;	// 696 = 0x2b8
}

+ (void)encodeServices:(id)arg1 forXPCCoder:(id)arg2 metadata:(id)arg3;	// IMP=0x00100000005f8681
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000005f8679
+ (Class)transactionClass;	// IMP=0x00100000005f8668
+ (id)_allowedClassesForServiceUnArchiving;	// IMP=0x00100000007624eb
+ (double)chipPairingModeActiveDuration;	// IMP=0x0010000000e4f16c
- (void).cxx_destruct;	// IMP=0x00000000005d9fb5
@property(readonly) NAFuture *didConfigureCHIPAccessoryServerFuture; // @synthesize didConfigureCHIPAccessoryServerFuture=_didConfigureCHIPAccessoryServerFuture;
@property(retain, nonatomic) HMDMatterAccessoryDiagnosticsManager *matterDiagnosticManager; // @synthesize matterDiagnosticManager=_matterDiagnosticManager;
@property _Bool hasSiriEndpointService; // @synthesize hasSiriEndpointService=_hasSiriEndpointService;
@property(readonly) HMDHAPMetadata *hapMetadata; // @synthesize hapMetadata=_hapMetadata;
@property(retain) NSMutableArray *pendingReads; // @synthesize pendingReads=_pendingReads;
@property(retain, nonatomic) HMDDataStreamController *dataStreamController; // @synthesize dataStreamController=_dataStreamController;
@property(retain, nonatomic) NSString *pairingUsername; // @synthesize pairingUsername=_pairingUsername;
@property(retain, nonatomic) NSData *publicKey; // @synthesize publicKey=_publicKey;
@property(retain, nonatomic) NSMutableArray *discoveredServices; // @synthesize discoveredServices=_discoveredServices;
@property(retain, nonatomic) HMDMatterAccessoryAdapter *matterAdapter; // @synthesize matterAdapter=_matterAdapter;
@property(retain, nonatomic) HMDUser *cachedRemovedUser; // @synthesize cachedRemovedUser=_cachedRemovedUser;
@property(retain) HMDSiriEndpointProfileMetricsDispatcher *siriEndpointProfileMetricsDispatcher; // @synthesize siriEndpointProfileMetricsDispatcher=_siriEndpointProfileMetricsDispatcher;
@property(copy, nonatomic) NSNumber *matterYearDayScheduleCapacity; // @synthesize matterYearDayScheduleCapacity=_matterYearDayScheduleCapacity;
@property _Bool supportsMatterYearDaySchedule; // @synthesize supportsMatterYearDaySchedule=_supportsMatterYearDaySchedule;
@property(copy, nonatomic) NSNumber *matterWeekDayScheduleCapacity; // @synthesize matterWeekDayScheduleCapacity=_matterWeekDayScheduleCapacity;
@property _Bool supportsMatterWeekDaySchedule; // @synthesize supportsMatterWeekDaySchedule=_supportsMatterWeekDaySchedule;
@property(retain, nonatomic) HMDAccessoryMetric *accessoryMetric; // @synthesize accessoryMetric=_accessoryMetric;
@property(nonatomic) unsigned long long lastSessionStatus; // @synthesize lastSessionStatus=_lastSessionStatus;
@property(nonatomic) double lastLinkChangeSessionCheckTime; // @synthesize lastLinkChangeSessionCheckTime=_lastLinkChangeSessionCheckTime;
@property(retain, nonatomic) HMFTimer *sessionRestoreTimer; // @synthesize sessionRestoreTimer=_sessionRestoreTimer;
@property unsigned char keyGenerationType; // @synthesize keyGenerationType=_keyGenerationType;
@property(retain, nonatomic) HMFTimer *accessoryKeyRefreshTimer; // @synthesize accessoryKeyRefreshTimer=_accessoryKeyRefreshTimer;
@property(retain, nonatomic) HMFTimer *accessoryDiscoveryBackoffTimer; // @synthesize accessoryDiscoveryBackoffTimer=_accessoryDiscoveryBackoffTimer;
@property(copy, nonatomic) NSNumber *backedOffStateNumber; // @synthesize backedOffStateNumber=_backedOffStateNumber;
@property(nonatomic) unsigned long long pairingAttempts; // @synthesize pairingAttempts=_pairingAttempts;
@property(nonatomic) unsigned long long activationAttempts; // @synthesize activationAttempts=_activationAttempts;
@property(copy) NSString *lastLockOperationEventRequestIdentifier; // @synthesize lastLockOperationEventRequestIdentifier=_lastLockOperationEventRequestIdentifier;
@property(readonly, copy, nonatomic) NSArray *hapServicesListForAnalytics; // @synthesize hapServicesListForAnalytics=_hapServicesListForAnalytics;
@property(readonly, copy, nonatomic) HMDAnalyticsHAPServiceData *primaryHAPServiceForAnalytics; // @synthesize primaryHAPServiceForAnalytics=_primaryHAPServiceForAnalytics;
@property(copy) NSData *preexistingReaderGroupIdentifierACWG; // @synthesize preexistingReaderGroupIdentifierACWG=_preexistingReaderGroupIdentifierACWG;
@property(copy) NSData *readerGroupSubIdentifierACWG; // @synthesize readerGroupSubIdentifierACWG=_readerGroupSubIdentifierACWG;
@property(nonatomic) _Bool mfiCertifiedACWG; // @synthesize mfiCertifiedACWG=_mfiCertifiedACWG;
@property _Bool supportsACWGUWB; // @synthesize supportsACWGUWB=_supportsACWGUWB;
@property _Bool supportsACWGProvisioning; // @synthesize supportsACWGProvisioning=_supportsACWGProvisioning;
@property(copy, nonatomic) NSNumber *supportedLinkLayerTypes; // @synthesize supportedLinkLayerTypes=_supportedLinkLayerTypes;
@property(copy, nonatomic) NSNumber *matterProductID; // @synthesize matterProductID=_matterProductID;
@property(copy, nonatomic) NSNumber *matterVendorID; // @synthesize matterVendorID=_matterVendorID;
@property(retain, nonatomic) NSNumber *matterNodeID; // @synthesize matterNodeID=_matterNodeID;
@property(nonatomic) long long certificationStatus; // @synthesize certificationStatus=_certificationStatus;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy, nonatomic) NSString *matterExtendedMACAddress; // @synthesize matterExtendedMACAddress=_chipExtendedMACAddress;
@property(copy, nonatomic) NSNumber *matterWEDSupport; // @synthesize matterWEDSupport=_chipWEDSupport;
@property(copy, nonatomic) NSNumber *matterSoftwareVersionNumber; // @synthesize matterSoftwareVersionNumber=_matterSoftwareVersionNumber;
@property(retain, nonatomic) HMMTRAccessoryServer *accessoryServer; // @synthesize accessoryServer=_chipAccessoryServer;
@property _Bool requiresThreadRouter; // @synthesize requiresThreadRouter=_requiresThreadRouter;
@property(retain, nonatomic) HMDCHIPAccessoryStorage *chipStorage; // @synthesize chipStorage=_chipStorage;
@property(nonatomic) _Bool hasPostedBulletinForWalletKeyOnboarding; // @synthesize hasPostedBulletinForWalletKeyOnboarding=_hasPostedBulletinForWalletKeyOnboarding;
@property(nonatomic) _Bool hasPostedBulletinForAccessCodeOnboarding; // @synthesize hasPostedBulletinForAccessCodeOnboarding=_hasPostedBulletinForAccessCodeOnboarding;
@property(retain) NSMutableDictionary *accessCodeCache; // @synthesize accessCodeCache=_accessCodeCache;
@property(retain, nonatomic) HMDAccessoryAdvertisement *accessoryAdvertisement; // @synthesize accessoryAdvertisement=_accessoryAdvertisement;
@property(copy, nonatomic) NSNumber *sleepInterval; // @synthesize sleepInterval=_sleepInterval;
@property(retain, nonatomic) NSMutableArray *powerOnCompletionRoutines; // @synthesize powerOnCompletionRoutines=_powerOnCompletionRoutines;
@property(retain, nonatomic) HMDPendingCharacteristic *pendingPowerOn; // @synthesize pendingPowerOn=_pendingPowerOn;
@property _Bool keyGenerationInProgress; // @synthesize keyGenerationInProgress=_keyGenerationInProgress;
@property(copy, nonatomic) NSDate *keyUpdatedTime; // @synthesize keyUpdatedTime=_keyUpdatedTime;
@property(copy, nonatomic) NSNumber *keyUpdatedStateNumber; // @synthesize keyUpdatedStateNumber=_keyUpdatedStateNumber;
@property(copy, nonatomic) NSData *broadcastKey; // @synthesize broadcastKey=_broadcastKey;
- (id)logIdentifier;	// IMP=0x00000000005d9832
@property(readonly, copy) NSString *shortDescription;
- (void)_handleUpdateAccessoryConnectionState:(id)arg1;	// IMP=0x00000000005d924a
- (void)handleLinkQualityRequestMessage:(id)arg1;	// IMP=0x00000000005d9141
- (void)_handleValidatePairingAuthMethodMessage:(id)arg1;	// IMP=0x00000000005d8e43
- (void)removeSession:(long long)arg1;	// IMP=0x00000000005d8dc7
- (void)addSession:(long long)arg1;	// IMP=0x00000000005d8d4b
- (void)_checkSessionRestoreOnLinkStateChange;	// IMP=0x00000000005d8b78
- (void)_handleSessionRestoreTimerFired;	// IMP=0x00000000005d8a62
- (void)_updateSessionRestoreOnServer:(_Bool)arg1;	// IMP=0x00000000005d89e2
- (void)_startSessionMonitor;	// IMP=0x00000000005d8765
- (void)_stopSessionMonitor;	// IMP=0x00000000005d85c0
- (void)_notifyBridgedAccessoryReachabilityChange:(id)arg1;	// IMP=0x00000000005d82a7
- (void)_checkBridgedAccessoryOnConfigured;	// IMP=0x00000000005d8169
- (void)_checkSession;	// IMP=0x00000000005d7fcd
- (unsigned long long)numActiveSessionClients;	// IMP=0x00000000005d7efe
- (void)_deregisterAllClientsFromSessionRestore;	// IMP=0x00000000005d7da6
- (double)sessionCheckPeriod;	// IMP=0x00000000005d7c62
- (void)_deregisterFromSessionRestore:(id)arg1;	// IMP=0x00000000005d78eb
- (void)deregisterFromSessionRestore:(id)arg1;	// IMP=0x00000000005d7833
- (void)_registerForSessionRestore:(id)arg1;	// IMP=0x00000000005d759f
- (void)registerForSessionRestore:(id)arg1;	// IMP=0x00000000005d74e7
- (id)currentActiveSessionRestoreClients;	// IMP=0x00000000005d7462
@property(readonly, nonatomic) NSMutableSet *activeSessionRestoreClients; // @synthesize activeSessionRestoreClients=_activeSessionRestoreClients;
- (void)stopPing;	// IMP=0x00000000005d73c3
- (void)startPing;	// IMP=0x00000000005d7240
- (_Bool)isSecureSessionEstablished;	// IMP=0x00000000005d7207
- (void)handleAccessoryConfigured:(id)arg1;	// IMP=0x00000000005d7201
- (void)handleSetHasOnboardedForNaturalLighting:(id)arg1;	// IMP=0x00000000005d6c7a
- (void)setCommunicationProtocolIfNeeded;	// IMP=0x00000000005d6978
@property long long communicationProtocol; // @synthesize communicationProtocol=_communicationProtocol;
@property(retain, nonatomic) HMDBulletinBoard *bulletinBoard; // @synthesize bulletinBoard=_bulletinBoard;
@property(copy, nonatomic) NSNumber *wakingViaCharacteristicWithIID; // @synthesize wakingViaCharacteristicWithIID=_wakingViaCharacteristicWithIID;
@property(nonatomic, getter=isReachableViaBSP) _Bool reachableViaBSP; // @synthesize reachableViaBSP=_reachableViaBSP;
@property(nonatomic) unsigned long long suspendedState; // @synthesize suspendedState=_suspendedState;
- (void)setSuspendedState:(unsigned long long)arg1 shouldNotify:(_Bool)arg2;	// IMP=0x00000000005d633b
@property(copy) NSNumber *hasOnboardedForNaturalLighting; // @synthesize hasOnboardedForNaturalLighting=_hasOnboardedForNaturalLighting;
@property(retain, nonatomic) NSNumber *internalThreadActive; // @synthesize internalThreadActive=_internalThreadActive;
@property(retain, nonatomic) NSNumber *internalThreadStatus; // @synthesize internalThreadStatus=_internalThreadStatus;
@property(retain, nonatomic) NSNumber *internalThreadCapabilities; // @synthesize internalThreadCapabilities=_internalThreadCapabilities;
- (_Bool)supportsUnreachablePing;	// IMP=0x00000000005d5fc8
- (void)startReachabilityCheck;	// IMP=0x00000000005d5ea6
- (void)stopReachabilityCheck;	// IMP=0x00000000005d5e94
@property(readonly, nonatomic) HMDCameraProfileSettingsManager *cameraProfileSettingsManager; // @synthesize cameraProfileSettingsManager=_cameraProfileSettingsManager;
@property(readonly, copy, nonatomic) NSNumber *hapInstanceId;
- (id)backingStoreTransactionWithName:(id)arg1;	// IMP=0x00000000005d5c9e
- (id)createUpdateServiceTransactionWithServiceUUID:(id)arg1;	// IMP=0x00000000005d5c15
- (void)makeServiceNameConsistent:(id)arg1 withName:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000005d597d
- (id)backingStoreObjects:(long long)arg1;	// IMP=0x00000000005d5719
- (void)populateModelObject:(id)arg1 version:(long long)arg2;	// IMP=0x00000000005d515c
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;	// IMP=0x00000000005d510c
- (id)modelObjectWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000005d50f5
- (id)transactionWithObjectChangeType:(unsigned long long)arg1;	// IMP=0x00000000005d503a
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;	// IMP=0x00000000005d4e3a
- (_Bool)updateTransportInformation:(id)arg1 localSource:(_Bool)arg2;	// IMP=0x00000000005d48fc
- (id)getTransportInformationArray;	// IMP=0x00000000005d48a5
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x00000000005d42ea
- (void)readInitialRequiredCharacteristicsForAccessory:(CDUnknownBlockType)arg1;	// IMP=0x00000000005d3e4c
- (id)getOrCreateServiceUpdateTransactionForKey:(id)arg1 fromDictionary:(id)arg2;	// IMP=0x00000000005d3d6e
- (void)requestResource:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000005d3b81
- (id)anyIPServer;	// IMP=0x00000000005d3afd
- (id)primaryIPServer;	// IMP=0x00000000005d38e7
- (id)dumpSimpleState;	// IMP=0x00000000005d3383
- (id)dumpState;	// IMP=0x00000000005d2482
- (_Bool)supportsPersonalRequests;	// IMP=0x00000000005d244f
- (_Bool)isNotificationEnabled;	// IMP=0x00000000005d21a1
- (_Bool)isNonClientNotificationEnabled;	// IMP=0x00000000005d1ef3
- (_Bool)isNotificationEnabledForClientIdentifier:(id)arg1;	// IMP=0x00000000005d1c29
- (void)accessory:(id)arg1 didUpdateReachabilityState:(_Bool)arg2;	// IMP=0x00000000005d1b72
- (void)didUpdateConnectionState:(_Bool)arg1 sessionInfo:(id)arg2 linkLayerType:(long long)arg3 bookkeeping:(id)arg4 withError:(id)arg5;	// IMP=0x00000000005d1a4e
- (void)didUpdateConnectionState:(_Bool)arg1 linkLayerType:(long long)arg2 withError:(id)arg3;	// IMP=0x00000000005d1a24
- (void)__updateNotifyingCharacteristicStateNumber:(id)arg1;	// IMP=0x00000000005d15b2
- (void)notifyingCharacteristicStateNumberUpdated:(id)arg1;	// IMP=0x00000000005d14fa
- (void)_handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000005cf326
- (void)handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000005cf1df
- (void)_updateReachabilityMetric:(_Bool)arg1 withDuration:(id)arg2;	// IMP=0x00000000005cf00f
- (_Bool)supportsWiFiReconfiguration;	// IMP=0x00000000005cefcb
@property(copy, nonatomic) NSNumber *wiFiTransportCapabilities; // @synthesize wiFiTransportCapabilities=_wiFiTransportCapabilities;
@property(retain, nonatomic) HMDWiFiManagementController *wiFiManagementController; // @synthesize wiFiManagementController=_wiFiManagementController;
@property(retain, nonatomic) HMDDoorbellChimeController *doorbellChimeController; // @synthesize doorbellChimeController=_doorbellChimeController;
- (void)removeAdvertisement:(id)arg1;	// IMP=0x00000000005cec85
- (void)addAdvertisement:(id)arg1;	// IMP=0x00000000005ceb3b
- (void)associateWithAccessoryAdvertisement:(id)arg1;	// IMP=0x00000000005ceaa1
- (void)_handleConfigureTargets:(id)arg1;	// IMP=0x00000000005ce8ad
- (void)_handleKeyRefreshTimerFired;	// IMP=0x00000000005ce57c
- (void)_removeBackedoffAccessoryForStateNumber:(id)arg1;	// IMP=0x00000000005ce4e4
- (void)backOffAccessoryForStateNumber:(id)arg1 backoffPeriod:(double)arg2;	// IMP=0x00000000005ce41b
- (void)_handleDiscoveryBackoffTimerFired;	// IMP=0x00000000005ce1fe
- (id)characteristicsPassingTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000005cde7d
- (void)handleIdentifyAccessoryMessage:(id)arg1;	// IMP=0x00000000005cd987
- (_Bool)supportsIdentify;	// IMP=0x00000000005cd97f
- (void)_handleUpdateCharacteristicAuthorizationDataMessageForNonOwnerUser:(id)arg1;	// IMP=0x00000000005cd274
- (void)_handleUpdateCharacteristicAuthorizationDataMessageForOwnerUser:(id)arg1;	// IMP=0x00000000005ccb5b
- (id)characteristicWithAuthorizationDataMessage:(id)arg1;	// IMP=0x00000000005cc3a8
- (void)_handleUpdateAssociatedServiceType:(id)arg1;	// IMP=0x00000000005cbd5e
- (void)_handleRenameService:(id)arg1;	// IMP=0x00000000005cba0f
- (void)_renameService:(id)arg1 name:(id)arg2 message:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000005cb3e5
- (void)indicateNotificationFromServer:(id)arg1 notifyType:(unsigned long long)arg2 withDictionary:(id)arg3;	// IMP=0x00000000005cb2fb
- (void)_submitReachabilityDelayedMetric:(id)arg1;	// IMP=0x00000000005cb227
- (void)_submitStateNumberChangeMetric;	// IMP=0x00000000005cb0cf
- (void)_doReachabilityUpdateForServer:(id)arg1;	// IMP=0x00000000005caeb5
- (id)runtimeState;	// IMP=0x00000000005caca4
- (void)_handleAccessoryUpdateReachability:(_Bool)arg1 linkType:(long long)arg2;	// IMP=0x00000000005ca96c
- (long long)reachableTransports;	// IMP=0x00000000005ca87f
- (void)setReachability:(_Bool)arg1 serverIdentifier:(id)arg2 linkType:(long long)arg3;	// IMP=0x00000000005ca7bc
- (void)_updateReachability;	// IMP=0x00000000005ca5b9
- (void)_checkRegisterForServerNotification;	// IMP=0x00000000005ca45e
- (id)findServiceWithServiceType:(id)arg1;	// IMP=0x00000000005ca28b
- (id)findCharacteristicsByTypes:(id)arg1 forServiceType:(id)arg2;	// IMP=0x00000000005c9ea3
- (id)findCharacteristicsByType:(id)arg1 forServiceType:(id)arg2;	// IMP=0x00000000005c9c37
- (id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2;	// IMP=0x00000000005c9bae
- (id)findCharacteristic:(id)arg1;	// IMP=0x00000000005c9a30
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;	// IMP=0x00000000005c99a7
- (id)findService:(id)arg1;	// IMP=0x00000000005c98d7
- (void)_evaluateLocalOperation:(long long)arg1 state:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000005c9668
- (void)_updateStateForTrackedAccessory:(id)arg1 stateNumber:(id)arg2;	// IMP=0x00000000005c9580
- (void)updateTrackedAccessoryStateNumber:(id)arg1;	// IMP=0x00000000005c94c8
- (_Bool)_containsSecureCharacteristic;	// IMP=0x00000000005c9121
- (_Bool)_shouldTrackAccessoryWithPriority:(_Bool *)arg1;	// IMP=0x00000000005c905c
- (void)_updateAccessoryTracking;	// IMP=0x00000000005c8f8f
@property(copy, nonatomic) HMCameraUserNotificationSettings *cameraProfileNotificationSettings; // @synthesize cameraProfileNotificationSettings=_cameraProfileNotificationSettings;
- (void)_reenableNotificationsOnWatch;	// IMP=0x00000000005c8ebc
- (void)notifyClientsOfUpdatedAccessoryControllableValue;	// IMP=0x00000000005c8e7b
- (void)reachabilityDidChangeToUnreachable:(id)arg1;	// IMP=0x00000000005c8e0a
- (void)reachabilityDidChangeToReachable:(id)arg1;	// IMP=0x00000000005c8d99
- (void)handlePrimaryResidentUpdateNotification:(id)arg1;	// IMP=0x00000000005c8d28
- (void)_logServerReachabilityNotification:(id)arg1;	// IMP=0x00000000005c8c54
- (void)_logServerReachabilityNotification:(_Bool)arg1 withDuration:(id)arg2 withLinkType:(id)arg3;	// IMP=0x00000000005c897e
- (double)_getDurationAndUpdateCurrentTime:(id)arg1 currentTime:(id *)arg2;	// IMP=0x00000000005c88f6
- (void)_doPrimaryResidentUpdated;	// IMP=0x00000000005c8563
- (void)checkHAPSessionRestore;	// IMP=0x00000000005c84f2
- (void)_checkHAPSessionRestore;	// IMP=0x00000000005c8174
- (_Bool)_isRegisteredForNotificationsByForegroundProcess;	// IMP=0x00000000005c7b69
- (void)handleResidentDeviceUpdated:(id)arg1;	// IMP=0x00000000005c7b45
- (void)_checkResidentDeviceForReachabilityPing;	// IMP=0x00000000005c782b
- (void)_forceEnableReachabilityPingForPrimaryResident:(id)arg1;	// IMP=0x00000000005c7454
- (void)_forceUpdateBTLEKeyGenerationForServer:(id)arg1;	// IMP=0x00000000005c7293
- (void)_enableBroadcastNotifications:(_Bool)arg1 hapAccessory:(id)arg2 forCharacteristics:(id)arg3;	// IMP=0x00000000005c640b
- (void)_groupCharacteristicsNotificationWithCharacteristics:(id)arg1 enable:(_Bool)arg2 activity:(id)arg3 clientIdentifier:(id)arg4 groupCharacteristicsError:(id *)arg5 characteristicsToModifyLocally:(id *)arg6 characteristicsToModifyOnResident:(id *)arg7 characteristicsToDisableOnResident:(id *)arg8 characteristicsErrorsMapFailingToModify:(id *)arg9;	// IMP=0x00000000005c5b01
- (void)_setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 hapAccessory:(id)arg3 activity:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000005c5146
- (_Bool)_remotelySetNotificationsEnabled:(_Bool)arg1 forCharacteristic:(id)arg2 clientIdentifier:(id)arg3;	// IMP=0x00000000005c4cf9
- (void)_enableNotification:(_Bool)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;	// IMP=0x00000000005c354a
- (void)enableNotification:(_Bool)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;	// IMP=0x00000000005c3431
- (void)enableNotification:(_Bool)arg1 forCharacteristicIDs:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;	// IMP=0x00000000005c3315
- (void)_setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 notificationChangeThresholds:(id)arg3 clientIdentifier:(id)arg4 matchingHAPAccessory:(id)arg5;	// IMP=0x00000000005c1811
- (void)_setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 clientIdentifier:(id)arg3 matchingHAPAccessory:(id)arg4;	// IMP=0x00000000005c17e9
- (void)setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 notificationChangeThresholds:(id)arg3 clientIdentifier:(id)arg4;	// IMP=0x00000000005c17c6
- (void)setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 clientIdentifier:(id)arg3;	// IMP=0x00000000005c179d
- (void)setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 notificationChangeThresholds:(id)arg3 clientIdentifier:(id)arg4 matchingHAPAccessory:(id)arg5;	// IMP=0x00000000005c1654
- (void)_disableNotificationsForBundleID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000005c1297
- (void)disableNotificationsForBundleID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000005c11b9
- (void)_notifyClientsWithNotificationChangesForCharacteristics:(id)arg1 characteristicErrors:(id)arg2 enableNotification:(_Bool)arg3 message:(id)arg4;	// IMP=0x00000000005c0d60
- (void)_notifyCharacteristicNotificationChanges:(id)arg1 enableNotification:(_Bool)arg2 message:(id)arg3 clientIdentifier:(id)arg4;	// IMP=0x00000000005c0974
- (void)handleRemoteGatewayNotificationRegistration:(id)arg1 enable:(_Bool)arg2 enableTime:(id)arg3;	// IMP=0x00000000005c088d
- (void)resetNotificationEnabledTime;	// IMP=0x00000000005c081c
@property(readonly, getter=isClientRegisteredForNotifications) _Bool clientRegisteredForNotifications;
- (void)updateNotificationEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 onBehalfOf:(id)arg3;	// IMP=0x00000000005c0480
- (void)_readValueForCharacteristic:(id)arg1 hapAccessory:(id)arg2 requestMessage:(id)arg3;	// IMP=0x00000000005bfd6a
- (_Bool)hasValidCachedValueForCharacteristic:(id)arg1 shouldLog:(_Bool)arg2;	// IMP=0x00000000005bf844
- (void)submitCharacteristicReadErrorLogEvent:(id)arg1 message:(id)arg2 error:(id)arg3;	// IMP=0x00000000005bf5f7
- (void)_parseResponseFromRemotePeer:(id)arg1 message:(id)arg2 error:(id)arg3 characteristic:(id)arg4;	// IMP=0x00000000005bf351
- (void)_relayReadFromCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;	// IMP=0x00000000005befc0
- (void)_relayWriteToCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;	// IMP=0x00000000005beaf0
- (void)submitCharacteristicWriteErrorLogEvent:(id)arg1 startTime:(double)arg2 message:(id)arg3 error:(id)arg4;	// IMP=0x00000000005be793
- (id)_prepareMessagePayloadForCharacteristicRemoteWrite:(id)arg1;	// IMP=0x00000000005be47c
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 hapAccessory:(id)arg3 authorizationData:(id)arg4 message:(id)arg5;	// IMP=0x00000000005bd8d5
- (void)_readCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 logEvent:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000005bca24
- (void)_writeCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 logEvent:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000005bbdf0
- (void)populateHMDCharacteristicResponses:(id)arg1 hapResponses:(id)arg2 mapping:(id)arg3 overallError:(id)arg4 requests:(id)arg5;	// IMP=0x00000000005bae40
- (id)hapCharacteristicWriteRequests:(id)arg1 hapAccessory:(id)arg2 hmdResponses:(id *)arg3 mapping:(id *)arg4;	// IMP=0x00000000005ba2c1
- (void)notifyValue:(id)arg1 previousValue:(id)arg2 error:(id)arg3 forCharacteristic:(id)arg4 requestMessage:(id)arg5;	// IMP=0x00000000005b9915
- (void)runTransactionWithPreferredMediaUserUUID:(id)arg1 selectionType:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000005b96a5
- (void)handleUpdatePreferredMediaUser:(id)arg1;	// IMP=0x00000000005b8f6f
- (void)routeUpdatePreferredMediaUser:(id)arg1;	// IMP=0x00000000005b8db4
- (void)_handleHomeUserRemovedNotification:(id)arg1;	// IMP=0x00000000005b86be
- (void)handleHomeUserRemovedNotification:(id)arg1;	// IMP=0x00000000005b854b
@property(readonly) id <HMDMessageRouter> primaryResidentMessageRouter;
- (_Bool)supportsPreferredMediaUser;	// IMP=0x00000000005b8468
- (_Bool)supportsPrimaryUserInfoSubscription;	// IMP=0x00000000005b8456
- (void)_encodeWithCoder:(id)arg1;	// IMP=0x00000000005b733f
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000005b72f0
- (id)getBluetoothAddress;	// IMP=0x00000000005b7292
- (_Bool)_shouldFilterAccessoryProfileForUnentitledClients:(id)arg1;	// IMP=0x00000000005b71aa
- (id)_initWithCoder:(id)arg1;	// IMP=0x00000000005b5d2d
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000005b5cc4
- (void)saveBluetoothAddress:(id)arg1;	// IMP=0x00000000005b5c00
- (_Bool)shouldConfigureTargetController;	// IMP=0x00000000005b5b92
- (id)hmdCharacteristicForInstanceId:(id)arg1;	// IMP=0x00000000005b583a
- (id)hmdCharacteristicFromHapCharacteristic:(id)arg1;	// IMP=0x00000000005b5592
- (void)_readCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 message:(id)arg4 logEvent:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 errorBlock:(CDUnknownBlockType)arg7;	// IMP=0x00000000005b5347
- (void)autoUpdateCachedCountDownCharacteristics:(id)arg1;	// IMP=0x00000000005b5070
- (void)_wakeAccessoryIfNeededForCharacteristicRequests:(id)arg1 source:(unsigned long long)arg2 activity:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000005b4ded
- (void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 logEvent:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000005b4aeb
- (void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000005b4ac8
- (id)_updatedResponseForRemoteResponse:(id)arg1;	// IMP=0x00000000005b483b
- (id)_updatedResponseTuplesForRequests:(id)arg1 error:(id)arg2 source:(unsigned long long)arg3 suspended:(_Bool)arg4;	// IMP=0x00000000005b418c
- (id)getFullError:(id)arg1 source:(unsigned long long)arg2 suspended:(_Bool)arg3;	// IMP=0x00000000005b3ffd
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 message:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 logEvent:(id)arg6 errorBlock:(CDUnknownBlockType)arg7;	// IMP=0x00000000005b3d49
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000000005b3d22
- (void)wakeOrScanForSuspendedAccessoryForRequests:(id)arg1 source:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000005b3bcc
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 logEvent:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000005b3924
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000005b3908
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000005b38e0
- (_Bool)canWakeBasedOnCharacteristicRequests:(id)arg1;	// IMP=0x00000000005b35ae
@property(readonly) _Bool supportsUserManagement;
- (void)_handleUnreachableAccessoryToPerformOperation:(long long)arg1 operationBlock:(CDUnknownBlockType)arg2 errorBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000005b2f83
- (_Bool)residentCanWakeForWOL;	// IMP=0x00000000005b2ea6
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4 activity:(id)arg5;	// IMP=0x00000000005b2cf1
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 retries:(unsigned long long)arg3 operationBlock:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5 activity:(id)arg6;	// IMP=0x00000000005b2b6d
- (void)_performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000005b1f5a
- (void)performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000005b1e64
- (_Bool)matchesHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long *)arg2;	// IMP=0x00000000005b1d6b
- (_Bool)matchesHAPAccessory:(id)arg1;	// IMP=0x00000000005b1d38
- (id)matchingHAPAccessoryServerIdentifierWithLinkType:(long long)arg1;	// IMP=0x00000000005b1a4e
- (id)matchingHAPAccessoryWithLinkType:(long long)arg1;	// IMP=0x00000000005b18ca
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 instanceID:(id)arg2;	// IMP=0x00000000005b1877
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x00000000005b1822
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2;	// IMP=0x00000000005b17cd
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1;	// IMP=0x00000000005b17b6
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1 linkType:(long long)arg2;	// IMP=0x00000000005b179f
- (_Bool)matchesHAPAccessoryWithServerIdentifier:(id)arg1 instanceID:(id)arg2;	// IMP=0x00000000005b165a
- (id)matchingTransportInformation:(id)arg1;	// IMP=0x00000000005b154a
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1 instanceID:(id)arg2 linkType:(long long)arg3;	// IMP=0x00000000005b1430
- (void)unconfigureAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 updateReachability:(_Bool)arg3;	// IMP=0x00000000005b1334
- (void)unconfigureWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000005b1152
- (void)unconfigure;	// IMP=0x00000000005b113e
- (void)cleanupNotificationCenterObservers;	// IMP=0x00000000005b0de1
- (void)unregisterFromAccessoryServer;	// IMP=0x00000000005b0d4f
- (void)configureWithAccessory:(id)arg1 homeNotificationsEnabled:(_Bool)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000005b0c2c
- (void)_configureWithAccessoryServices:(id)arg1 changedCharacteristics:(id *)arg2;	// IMP=0x00000000005b07a9
- (void)enableNotificationsWithHAPAccessory:(id)arg1 homeNotificationsEnabled:(_Bool)arg2;	// IMP=0x00000000005b01b3
- (id)_notificationRegistrationsByClientIDForCharacteristics:(id)arg1;	// IMP=0x00000000005aff6c
- (id)_characteristicsToEnableEvents;	// IMP=0x00000000005afeb6
- (id)configureService:(id)arg1;	// IMP=0x00000000005af85e
- (id)getHAPAccessoryMatchingInstanceId;	// IMP=0x00000000005af609
- (id)getPrimaryHAPAccessories;	// IMP=0x00000000005af370
- (void)establishLocalHAPConnectionWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000005af0c7
- (id)preferredHAPAccessoryForOperation:(long long)arg1 linkType:(long long *)arg2;	// IMP=0x00000000005aec23
- (long long)linkSpeed;	// IMP=0x00000000005ae95c
- (unsigned long long)supportedTransports;	// IMP=0x00000000005ae915
- (_Bool)isThreadSecureSessionEstablished;	// IMP=0x00000000005ae8ca
- (_Bool)hasThreadServer;	// IMP=0x00000000005ae7d4
- (_Bool)supportsThread;	// IMP=0x00000000005ae799
- (_Bool)isMatterLocalLinkConnectedAndPreferred;	// IMP=0x00000000005ae74e
- (_Bool)isBLESecureSessionEstablished;	// IMP=0x00000000005ae703
- (_Bool)isBLELinkConnected;	// IMP=0x00000000005ae6b8
- (_Bool)hasBLEServer;	// IMP=0x00000000005ae5c2
- (_Bool)hasBTLELink;	// IMP=0x00000000005ae54a
- (_Bool)isIPSecureSessionEstablished;	// IMP=0x00000000005ae4ff
- (_Bool)hasIPServer;	// IMP=0x00000000005ae409
- (_Bool)hasIPLink;	// IMP=0x00000000005ae391
- (long long)linkLayerType;	// IMP=0x00000000005ae2ef
- (id)expectedTransport;	// IMP=0x00000000005ae22a
- (void)_addHAPAccessory:(id)arg1;	// IMP=0x00000000005ade84
@property(retain, nonatomic) HMDAccessoryDiagnosticsManager *diagnosticsManager; // @synthesize diagnosticsManager=_diagnosticsManager;
@property(retain, nonatomic) HMDNetworkRouterController *networkRouterController; // @synthesize networkRouterController=_networkRouterController;
@property(readonly, copy, nonatomic) NSSet *cameraProfiles;
@property(readonly) _Bool hasCameraStreamService;
- (void)removeTransportInformationInstance:(id)arg1;	// IMP=0x00000000005ad927
- (void)addTransportInformationInstance:(id)arg1;	// IMP=0x00000000005ad7ba
@property(readonly, copy, nonatomic) NSArray *transportInformationInstances;
- (id)bridge;	// IMP=0x00000000005ad703
- (void)removeHostedAccessory:(id)arg1;	// IMP=0x00000000005ad4d5
- (void)addHostedAccessory:(id)arg1;	// IMP=0x00000000005ad2a7
@property(copy, nonatomic) NSSet *identifiersForBridgedAccessories; // @synthesize identifiersForBridgedAccessories=_identifiersForBridgedAccessories;
- (void)updateButtonConfigurationForTarget:(id)arg1;	// IMP=0x00000000005ad042
- (void)acknowledgeTargetControlService:(id)arg1 active:(_Bool)arg2;	// IMP=0x00000000005ace67
- (void)autoConfigureTargetController;	// IMP=0x00000000005acc9b
- (void)_autoConfigureTargetController;	// IMP=0x00000000005acbf7
- (void)_configureTargetControllerWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000005ac7dc
- (void)configureTargetControllerWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000005ac724
- (void)_setTargetControllerSession;	// IMP=0x00000000005ac605
- (void)_notifyClientsOfTargetControlSupportUpdate;	// IMP=0x00000000005ac40f
- (void)notifyClientsOfTargetControlSupportUpdate;	// IMP=0x00000000005ac39e
- (unsigned long long)targetControllerTicksPerSecond;	// IMP=0x00000000005ac23f
- (id)targetControllerButtonConfiguration;	// IMP=0x00000000005ac0eb
- (void)registerForActiveIdentifierNotifications;	// IMP=0x00000000005abf90
- (void)updateTarget:(id)arg1 name:(id)arg2 buttonConfiguration:(id)arg3;	// IMP=0x00000000005abc7a
- (void)removeTarget:(id)arg1;	// IMP=0x00000000005ab9d5
- (void)addTarget:(id)arg1 buttonConfiguration:(id)arg2;	// IMP=0x00000000005ab724
- (_Bool)supportsTargetController;	// IMP=0x00000000005ab63b
- (_Bool)_supportsMediaAccessControl;	// IMP=0x00000000005ab601
- (void)_handleServiceRemovedTransaction:(id)arg1 message:(id)arg2;	// IMP=0x00000000005ab1ae
- (void)_handleAddServiceTransaction:(id)arg1 message:(id)arg2;	// IMP=0x00000000005aaa65
- (void)_handleUpdatedServicesForProfilesAndControllers:(_Bool)arg1;	// IMP=0x00000000005aa60e
- (id)serviceWithSPIClientIdentifier:(id)arg1;	// IMP=0x00000000005aa53e
- (id)serviceWithUUID:(id)arg1;	// IMP=0x00000000005aa4c4
- (void)_removeService:(id)arg1;	// IMP=0x00000000005aa449
- (void)_addService:(id)arg1;	// IMP=0x00000000005aa3ce
- (void)_updatePrimaryServiceIfNeededWithService:(id)arg1;	// IMP=0x00000000005aa154
- (void)updatePrimaryServiceIfNeeded;	// IMP=0x00000000005a98b3
@property(readonly, nonatomic) HMDService *primaryService; // @synthesize primaryService=_primaryService;
- (_Bool)wasUpdatedWithServiceType:(id)arg1;	// IMP=0x00000000005a97ce
- (void)setInitialServiceTypeUUIDs:(id)arg1;	// IMP=0x00000000005a974b
@property(readonly, nonatomic) NSSet *initialServiceTypeUUIDs; // @synthesize initialServiceTypeUUIDs=_initialServiceTypeUUIDs;
@property(readonly, nonatomic) NSSet *serviceTypeUUIDs;
@property(readonly, copy) NSArray *services;
@property(readonly, copy) HMFPairingIdentity *pairingIdentity;
- (void)pairingsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000005a8fee
- (void)removeUser:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000005a8ea7
- (void)addUser:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000005a8d60
- (_Bool)isSecuritySessionOpen;	// IMP=0x00000000005a8ab0
- (void)verifyPairingWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000005a89f8
- (_Bool)isPrimary;	// IMP=0x00000000005a89c4
- (void)savePublicKeyToKeychain;	// IMP=0x00000000005a878c
- (_Bool)associateControllerKeyWithAccessory:(id)arg1 error:(id *)arg2;	// IMP=0x00000000005a83b9
- (void)setPairingUsername:(id)arg1 publicKey:(id)arg2;	// IMP=0x00000000005a82db
- (void)handlePairedStateChange:(_Bool)arg1;	// IMP=0x00000000005a8261
@property(readonly, nonatomic, getter=isPaired) _Bool paired;
- (void)timerDidFire:(id)arg1;	// IMP=0x00000000005a81a1
- (id)updateAccessoryFlagsAndNotifyClients:(id)arg1;	// IMP=0x00000000005a7f7e
- (id)namesOfServicesShowingTilesInHomeApp;	// IMP=0x00000000005a7b50
- (_Bool)updateAccessoryInformationWithCharacteristicType:(id)arg1 serviceType:(id)arg2 value:(id)arg3 accessoryTransaction:(id)arg4;	// IMP=0x00000000005a72d3
- (_Bool)isReadingRequiredForBTLEAccessoryCharacteristic:(id)arg1 forceReadFWVersion:(_Bool)arg2;	// IMP=0x00000000005a6d8e
- (void)handleCharacteristicsChangedNotification:(id)arg1;	// IMP=0x00000000005a6cd6
- (void)__handleCharacteristicsChangedPayload:(id)arg1;	// IMP=0x00000000005a654a
- (void)__checkLowBatteryUpdatedNotification:(id)arg1;	// IMP=0x00000000005a61fb
- (void)handleRoomChanged:(id)arg1;	// IMP=0x00000000005a5f7c
- (void)handleRoomNameChanged:(id)arg1;	// IMP=0x00000000005a5d0d
- (void)_handleRoomChangedFromOldRoomName:(id)arg1;	// IMP=0x00000000005a5aa2
- (id)_messagesForUpdatedRoom:(id)arg1;	// IMP=0x00000000005a5835
- (void)_challengeAccessoryAuthMethod;	// IMP=0x00000000005a5585
- (void)_configNumberUpdated;	// IMP=0x00000000005a5532
- (void)_updateAuthMethodWithServer:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000005a5340
- (void)_handleUpdatedName:(id)arg1;	// IMP=0x00000000005a528f
- (void)_renameAccessory:(id)arg1 resetName:(_Bool)arg2 message:(id)arg3;	// IMP=0x00000000005a50e6
- (id)getConfiguredName;	// IMP=0x00000000005a4fd3
- (id)name;	// IMP=0x00000000005a4ec9
- (void)handleUpdatedPassword:(id)arg1;	// IMP=0x00000000005a4e11
- (void)handleUpdatedMinimumUserPrivilege:(long long)arg1;	// IMP=0x00000000005a4d95
- (_Bool)_serviceSupportsMinimumUserPrivilege:(id)arg1;	// IMP=0x00000000005a4ca7
- (_Bool)supportsMinimumUserPrivilege;	// IMP=0x00000000005a4c6e
- (_Bool)needsAirplayAccess;	// IMP=0x00000000005a4bf6
- (_Bool)supportsNetworkProtection;	// IMP=0x00000000005a439b
- (id)readerIDACWG;	// IMP=0x00000000005a41ac
- (_Bool)supportsWalletKeyForUser:(id)arg1 withFlow:(id)arg2;	// IMP=0x00000000005a38a5
- (_Bool)supportsAccessCodesForUser:(id)arg1;	// IMP=0x00000000005a36f2
- (_Bool)supportsConfiguredSchedule:(id)arg1;	// IMP=0x00000000005a35cf
- (id)saveYearDayScheduleCapacity:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a3439
@property(readonly, copy, nonatomic) NSNumber *yearDayScheduleCapacity; // @dynamic yearDayScheduleCapacity;
- (id)saveSupportsMatterYearDaySchedule:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a320e
- (id)saveWeekDayScheduleCapacity:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a3078
@property(readonly, copy, nonatomic) NSNumber *weekDayScheduleCapacity; // @dynamic weekDayScheduleCapacity;
- (id)saveSupportsMatterWeekDaySchedule:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a2e4d
- (id)saveNaturalLightingEnabled:(id)arg1;	// IMP=0x00000000005a2cf0
@property(copy, nonatomic) NSNumber *naturalLightingEnabled; // @synthesize naturalLightingEnabled=_naturalLightingEnabled;
- (id)saveSupportsNaturalLighting:(id)arg1;	// IMP=0x00000000005a2ae8
@property(copy, nonatomic) NSNumber *supportsNaturalLighting; // @synthesize supportsNaturalLighting=_supportsNaturalLighting;
- (_Bool)_handleUpdatedServicesForWalletKey;	// IMP=0x00000000005a2957
@property(readonly) _Bool supportsAnyInPersonAccess;
- (id)saveReaderGroupSubIdentifier:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a2788
- (id)saveSupportsACWGUWB:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a25f2
- (id)saveSupportsACWGProvisioning:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a245c
- (id)saveSupportsMatterWalletKey:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a2266
@property(copy, nonatomic) NSNumber *supportsMatterWalletKey; // @synthesize supportsMatterWalletKey=_supportsMatterWalletKey;
@property _Bool supportsWalletKey; // @synthesize supportsWalletKey=_supportsWalletKey;
- (_Bool)_handleUpdatedServicesForAccessCodes;	// IMP=0x00000000005a1e3a
- (id)saveSupportsMatterAccessCode:(id)arg1 flow:(id)arg2;	// IMP=0x00000000005a1ca4
@property(copy, nonatomic) NSNumber *supportsMatterAccessCode; // @synthesize supportsMatterAccessCode=_supportsMatterAccessCode;
@property _Bool supportsAccessCode; // @synthesize supportsAccessCode=_supportsAccessCode;
@property(nonatomic) _Bool convertingToNativeMatter; // @synthesize convertingToNativeMatter=_convertingToNativeMatter;
@property(readonly) _Bool supportsHAP;
@property(readonly) _Bool supportsCHIP;
- (_Bool)supportsUserMediaSettings;	// IMP=0x00000000005a1a70
- (_Bool)supportsDoorbellChime;	// IMP=0x00000000005a1a57
- (_Bool)supportsMultiUser;	// IMP=0x00000000005a1a3e
- (_Bool)supportsMusicAlarm;	// IMP=0x00000000005a1a26
- (_Bool)supportsAnnounce;	// IMP=0x00000000005a1a11
@property unsigned long long siriEndpointCapabilities; // @synthesize siriEndpointCapabilities=_siriEndpointCapabilities;
- (_Bool)requiresWaitingToBecomeReachableAfterRemoteAdd;	// IMP=0x00000000005a17b9
- (_Bool)custom1WoBLE;	// IMP=0x00000000005a171b
- (_Bool)hasBattery;	// IMP=0x00000000005a16de
- (id)endpointIdentifier;	// IMP=0x00000000005a16cc
@property(readonly, nonatomic) HMSupportedAccessoryDiagnostics *supportedDiagnostics;
- (_Bool)supportsDiagnosticsTransfer;	// IMP=0x00000000005a1388
@property(readonly) _Bool shouldAutoDiscoverAccessoryServer;
- (void)updateActiveDisconnectOnIdleTimeout:(double)arg1;	// IMP=0x00000000005a10ed
@property _Bool shouldDisconnectOnIdle; // @synthesize shouldDisconnectOnIdle=_shouldDisconnectOnIdle;
@property(retain, nonatomic) HMDAccessorySymptomHandler *symptomsHandler; // @synthesize symptomsHandler=_symptomsHandler;
- (_Bool)providesHashRouteID;	// IMP=0x00000000005a0c54
- (void)_reconcileAccessControlSetting;	// IMP=0x00000000005a0bb3
- (void)updateTargetUUIDs:(id)arg1;	// IMP=0x00000000005a0a1b
- (void)_saveTargetUUIDs:(id)arg1;	// IMP=0x00000000005a08f8
- (void)saveTargetUUIDs:(id)arg1;	// IMP=0x00000000005a0840
@property(retain, nonatomic) HMDTargetControllerManager *targetControllerManager; // @synthesize targetControllerManager=_targetControllerManager;
- (void)_saveHardwareSupport:(_Bool)arg1;	// IMP=0x00000000005a0671
- (void)saveHardwareSupport:(_Bool)arg1;	// IMP=0x00000000005a05f7
@property(nonatomic) _Bool hardwareSupport; // @synthesize hardwareSupport=_hardwareSupport;
@property(retain, nonatomic) NSArray *targetUUIDs; // @synthesize targetUUIDs=_targetUUIDs;
- (void)updateSymptoms;	// IMP=0x00000000005a043a
@property(retain, nonatomic) NSNumber *needsOnboarding; // @synthesize needsOnboarding=_needsOnboarding;
@property(copy, nonatomic) NSData *setupHash; // @synthesize setupHash=_setupHash;
@property(retain, nonatomic) HMFConnectivityInfo *connectivityInfo; // @synthesize connectivityInfo=_connectivityInfo;
- (void)setBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(id)arg3;	// IMP=0x000000000059fedf
- (void)_updateBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(double)arg3;	// IMP=0x000000000059fcf6
- (void)_handleUpdatedAuthMethod;	// IMP=0x000000000059fca1
- (void)handleUpdatedAuthMethod;	// IMP=0x000000000059fc30
- (void)testSetInternalEnhancedAuthConfigNumber:(id)arg1;	// IMP=0x000000000059fbdc
- (void)testSetInternalEnhancedAuthMethod:(id)arg1;	// IMP=0x000000000059fb88
- (void)setInternalEnhancedAuthMethod:(id)arg1 configNumber:(unsigned long long)arg2;	// IMP=0x000000000059f987
@property(readonly, nonatomic) NSNumber *internalEnhancedAuthMethod; // @synthesize internalEnhancedAuthMethod=_internalEnhancedAuthMethod;
@property(readonly, nonatomic) NSNumber *internalEnhancedAuthConfigNumber; // @synthesize internalEnhancedAuthConfigNumber=_internalEnhancedAuthConfigNumber;
@property(readonly, nonatomic) unsigned long long enhancedAuthMethod;
@property(copy, nonatomic) NSNumber *accessoryFlags; // @synthesize accessoryFlags=_accessoryFlags;
- (void)updateAccessoryFlags:(id)arg1;	// IMP=0x000000000059f776
- (void)_postUpdateEventsIfDifferent:(id)arg1;	// IMP=0x000000000059f08e
- (void)postUpdateEventsIfDifferentWithPreferredMediaUUID:(id)arg1 selectionType:(unsigned long long)arg2;	// IMP=0x000000000059efd6
- (id)eventStoreReadHandle;	// IMP=0x000000000059ef5c
- (id)eventForwarder;	// IMP=0x000000000059eee2
- (double)eventTimestamp;	// IMP=0x000000000059eec9
- (id)eventSourceIdentifier;	// IMP=0x000000000059ee79
- (id)settingTopicForKeyPath:(id)arg1;	// IMP=0x000000000059edba
- (void)configureBulletinNotification;	// IMP=0x000000000059ed49
- (void)setDefaultPreferredMediaUser;	// IMP=0x000000000059eb03
- (void)setDefaultPreferredMediaUserIfNeeded;	// IMP=0x000000000059eaba
- (void)configureWithHome:(id)arg1 msgDispatcher:(id)arg2 configurationTracker:(id)arg3 initialConfiguration:(_Bool)arg4;	// IMP=0x000000000059e53e
- (id)transportReports;	// IMP=0x000000000059e369
- (_Bool)shouldEnableDaemonRelaunch;	// IMP=0x000000000059e1f4
- (void)_registerForMessages;	// IMP=0x000000000059caee
- (_Bool)canWakeViaCustomWoBLE;	// IMP=0x000000000059ca6a
- (id)messageSendPolicy;	// IMP=0x000000000059c9d1
@property(readonly, nonatomic) NSString *serializedIdentifier;
@property(readonly, copy, nonatomic) NSArray *attributeDescriptions;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSArray",?,R,C,N

- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000059c4bd
@property(readonly) unsigned long long hash;
- (_Bool)_validateConnectivityInfo:(id)arg1;	// IMP=0x000000000059c220
- (id)initWithTransaction:(id)arg1 home:(id)arg2 hapMetadata:(id)arg3;	// IMP=0x000000000059b489
- (id)initWithTransaction:(id)arg1 home:(id)arg2;	// IMP=0x000000000059b3f2
- (id)initWithHAPMetadata:(id)arg1;	// IMP=0x000000000059b0d0
- (id)init;	// IMP=0x000000000059b076
- (_Bool)_handleUpdatedServicesForWiFiManagementController;	// IMP=0x00000000001ab358
- (void)_destroyDiagnosticsManager;	// IMP=0x000000000056696b
- (id)_createDiagnosticsManager:(id)arg1;	// IMP=0x000000000056690f
- (void)_createDiagnosticManagerForMatterDevice:(id)arg1;	// IMP=0x0000000000566781
- (_Bool)_handleUpdatedServicesForDiagnosticsManager:(id)arg1;	// IMP=0x00000000005662eb
- (void)stopScan;	// IMP=0x0000000000595834
- (void)_stopScan;	// IMP=0x0000000000595790
- (void)scanningCompleteWithAccessoryFound:(_Bool)arg1 suspended:(_Bool)arg2;	// IMP=0x0000000000595368
- (void)initiateScan:(CDUnknownBlockType)arg1;	// IMP=0x0000000000595181
- (void)initializeBTLEScan;	// IMP=0x000000000059515f
- (_Bool)_handleUpdatedServicesForNetworkRouterController:(id)arg1;	// IMP=0x0000000000614e1b
- (_Bool)_updateNetworkRouterControllerUsingRouterService:(id)arg1;	// IMP=0x0000000000614a10
- (_Bool)hasAnyServiceWithTypes:(id)arg1;	// IMP=0x000000000069f17a
- (void)updateHasPostedBulletinForWalletKeyOnboarding:(_Bool)arg1;	// IMP=0x000000000070ccce
@property(readonly, copy) NSData *nfcReaderIdentifier;
- (id)_accessoryForHH2MigrationFileName;	// IMP=0x0000000000761fd8
- (void)_removeHAPAccessoryFileFromDisk;	// IMP=0x0000000000761d70
- (void)_updateCharacteristicsFromService:(id)arg1 context:(id)arg2;	// IMP=0x0000000000761797
- (void)migrateCharacteristicsForHAPAccessoryIfNeeded;	// IMP=0x0000000000760f66
- (id)_hh2HandleUpdatedServicesForProfilesAndControllers:(id)arg1;	// IMP=0x00000000007adbd9
- (_Bool)_hh2ShouldFilterAccessoryProfile:(id)arg1;	// IMP=0x00000000007adbd1
- (void)assignBonjourDeviceInfo:(id)arg1 socketInfo:(id)arg2;	// IMP=0x00000000007cea22
@property(readonly, copy) NSDictionary *bonjourDeviceInfo;
@property(readonly) HAPSocketInfo *socketInfo;
- (id)compositeSettingsControllerManagerForSiriEndpointProfileMetricsDispatcher:(id)arg1;	// IMP=0x00000000007cf364
- (id)profileFieldsForSiriEndpointProfileMetricsDispatcher:(id)arg1;	// IMP=0x00000000007cf11c
- (id)accessoryCategoryTypeForSiriEndpointProfileMetricsDispatcher:(id)arg1;	// IMP=0x00000000007cf0cc
- (_Bool)shouldSubmitRoutineConfigurationEventForSiriEndpointProfileMetricsDispatcher:(id)arg1;	// IMP=0x00000000007cf04e
- (_Bool)_handleUpdatedServicesForDoorbellController;	// IMP=0x00000000009627c0
- (void)writeValue:(id)arg1 toCharacteristic:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000098f188
@property(readonly, copy) NSDictionary *assistantObject;
@property(readonly, copy) NSString *urlString;
@property(readonly) _Bool isAssignedHubForSiriEndpoint;
@property(readonly) _Bool supportsSiriEndpointOnBoarding;
- (void)_checkForSiriEndpointServiceChange;	// IMP=0x0000000000a66f01
- (_Bool)_handleUpdatedServicesForSiriEndpointProfile:(id)arg1;	// IMP=0x0000000000a66085
@property(readonly) _Bool hasSiriSettingsService;
@property(readonly) HMDSiriEndpointProfile *siriEndpointProfile;
@property(readonly, nonatomic) _Bool supportsSiriEndpoint;
@property(readonly, nonatomic) _Bool isCertifiedForSiriEndpoint;
- (long long)computeSiriEndpointCertification;	// IMP=0x0000000000a65bbc
@property(readonly) HMDLightProfile *lightProfileWithNaturalLighting;
- (void)updateLightProfilesSettings;	// IMP=0x0000000000a850fd
- (void)updateBridgedAccessoryLightProfilesSettings;	// IMP=0x0000000000a84cd0
- (_Bool)_handleUpdatedServicesForLightProfiles:(id)arg1;	// IMP=0x0000000000a844e0
@property(readonly) NSSet *lightProfiles;
- (void)updateCameraProfileNotificationSettings:(id)arg1;	// IMP=0x0000000000b79481
- (id)cameraProfileNotificationSettingsFromCoder:(id)arg1;	// IMP=0x0000000000b79425
- (void)encodeCameraProfileNotificationSettingsWithCoder:(id)arg1;	// IMP=0x0000000000b793a6
- (void)_handleUpdatedCameraDerivedPropertiesModelValuesForAccessoryModel:(id)arg1;	// IMP=0x0000000000b79176
- (void)_handleUpdatedCameraSettingsModelValuesForAccessoryModel:(id)arg1;	// IMP=0x0000000000b78ca0
- (void)handleUpdatedCameraProfileSettingsForAccessoryModel:(id)arg1;	// IMP=0x0000000000b7898a
- (_Bool)_handleUpdatedServicesForCameraProfiles:(id)arg1;	// IMP=0x0000000000b77bf6
@property(readonly, getter=isCameraRecordingFeatureSupported) _Bool supportsCameraRecordingFeature;
- (void)_updateSiriAudioFormat:(id)arg1;	// IMP=0x0000000000bbf11a
- (void)setSelectedSiriAudioConfiguration:(id)arg1;	// IMP=0x0000000000bbf062
- (_Bool)_resolveSupportedSiriInputType:(id)arg1;	// IMP=0x0000000000bbeb1b
- (_Bool)_resolveAudioAbility:(id)arg1;	// IMP=0x0000000000bbe1b8
- (void)getSupportedSiriAudioConfiguration:(CDUnknownBlockType)arg1;	// IMP=0x0000000000bbe100
@property(readonly, nonatomic) _Bool supportsSiri;
- (void)_handleUpdateMediaSourceDisplayOrder:(id)arg1;	// IMP=0x0000000000be1976
@property(readonly) _Bool hasTelevisionService;
- (id)createSiriEndpointProfileMetricsDispatcherWithAccessoryUUID:(id)arg1 homeUUID:(id)arg2 logEventSubmitter:(id)arg3;	// IMP=0x0000000000cf7ec0
- (void)configureSiriEndpointProfileMetricsDispatcherWithFactory:(id)arg1 logEventSubmitter:(id)arg2 dailyScheduler:(id)arg3;	// IMP=0x0000000000cf7c28
@property(readonly, nonatomic) unsigned short metric_threadCapabilities;
- (void)_writeCredentialsForThreadNetworkWithActivity:(id)arg1 pairingEvent:(id)arg2 metadata:(id)arg3 threadControlPointCharacteristic:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000df8a46
- (void)_commissionToThreadNetworkWithActivity:(id)arg1 pairingEvent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000df8597
- (void)commissionToThreadNetworkWithPairingEvent:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000df83e8
- (_Bool)_validateCurrentThreadCredentials:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000df807f
- (void)_maybeCommissionToThreadNetworkWithActivity:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000df7c58
- (void)maybeCommissionToThreadNetworkWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000df7ba0
- (void)_writeThreadControlPointCharacteristic:(id)arg1 value:(id)arg2 activity:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000df7a0e
- (id)_findThreadControlPointCharacteristicWithError:(id *)arg1;	// IMP=0x0000000000df7795
- (void)_handleUpdatedServicesForThreadManagementWithActivity:(id)arg1;	// IMP=0x0000000000df7558
- (void)handleUpdatedServicesForThreadManagementWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000df74a0
- (_Bool)supportsThreadCommissioning;	// IMP=0x0000000000df7416
@property(readonly, nonatomic, getter=isThreadTheCurrentlyActiveTransport) _Bool threadActiveTransport;
@property(readonly, nonatomic) unsigned short threadStatus;
@property(readonly, nonatomic) unsigned short threadCapabilities;
- (_Bool)_handleUpdatedServicesForMediaProfile:(id)arg1;	// IMP=0x0000000000e097d5
@property(readonly) _Bool hasSmartSpeakerService;
@property(readonly) HMDMediaProfile *mediaProfile;
- (void)openBulkSendSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x0000000000e32597
- (void)sendTargetControlWhoAmIWithIdentifier:(unsigned int)arg1;	// IMP=0x0000000000e3251d
- (_Bool)bulkSendListenersRequireCharacteristicReadsSync;	// IMP=0x0000000000e3247b
- (_Bool)canAcceptBulkSendListenersSync;	// IMP=0x0000000000e323d9
- (_Bool)canAcceptBulkSendListeners;	// IMP=0x0000000000e3230e
- (void)removeDataStreamBulkSendListener:(id)arg1;	// IMP=0x0000000000e32256
- (void)addDataStreamBulkSendListener:(id)arg1 fileType:(id)arg2;	// IMP=0x0000000000e32178
@property(readonly) id <HMDDataStreamSocketController> dataStreamSocketController;
- (void)_handleUpdatedServicesForDataStreamController:(id)arg1;	// IMP=0x0000000000e31ca3
- (id)valueFromAttribute:(id)arg1;	// IMP=0x0000000000e4bacc
- (id)dataFromAttributeReport:(id)arg1;	// IMP=0x0000000000e4b9f2
- (id)numberFromAttributeReport:(id)arg1;	// IMP=0x0000000000e4b918
- (void)updateRGSI:(id)arg1 flow:(id)arg2;	// IMP=0x0000000000e4b724
- (void)unconfigureHAPMatterAccessoryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000e4b57a
- (void)updateSupportsUWBForFeatureMap:(id)arg1 appleClusterFeatureMap:(id)arg2 flow:(id)arg3;	// IMP=0x0000000000e4afe8
- (void)updateMatterYearDayScheduleCapacity:(id)arg1 flow:(id)arg2;	// IMP=0x0000000000e4adf4
- (void)updateMatterWeekDayScheduleCapacity:(id)arg1 flow:(id)arg2;	// IMP=0x0000000000e4ac00
- (void)updateSupportsMatterAccessSchedulesForFeatureMap:(id)arg1 flow:(id)arg2;	// IMP=0x0000000000e4a934
- (void)updateSupportsMatterAccessCodeForFeatureMap:(id)arg1 flow:(id)arg2;	// IMP=0x0000000000e4a74f
- (void)updateSupportsMatterWallet:(id)arg1 flow:(id)arg2;	// IMP=0x0000000000e4a551
- (void)handleColorControlAttributeReport:(id)arg1;	// IMP=0x0000000000e4a4e8
- (void)handleAttributeReport:(id)arg1 dictionary:(id)arg2 hapAccessory:(id)arg3;	// IMP=0x0000000000e48b6c
- (void)_readInitialAttributes;	// IMP=0x0000000000e48162
- (void)handleCharacteristicEventReportMessage:(id)arg1;	// IMP=0x0000000000e476c7
- (void)handleEventReport:(id)arg1 dictionary:(id)arg2 flow:(id)arg3 hapAccessory:(id)arg4;	// IMP=0x0000000000e4738a
- (void)handleStartUpWithEventNumber:(id)arg1;	// IMP=0x0000000000e47384
- (void)didUpdateRequiresThreadRouterForAccessoryServer:(id)arg1;	// IMP=0x0000000000e471cb
- (void)didUpdatePairingsForAccessoryServer:(id)arg1;	// IMP=0x0000000000e46fb5
- (void)_handleHomeNameChangedNotification:(id)arg1;	// IMP=0x0000000000e46efd
- (void)handleCHIPSendRemoteRequestMessage:(id)arg1 chipAccessoryServer:(id)arg2;	// IMP=0x0000000000e46be1
- (void)updateCHIPAccessoryName:(id)arg1;	// IMP=0x0000000000e46a4a
- (void)_updateCHIPAccessoryWithFabricLabel:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000e467d5
- (void)_fetchPairingsAndUpdateTransaction;	// IMP=0x0000000000e4660e
- (id)rootPublicKeysOfHomes:(id)arg1 keychainDelegate:(id)arg2;	// IMP=0x0000000000e46511
- (id)fabricDataFetcherWithCHIPStorageDelegate:(id)arg1 keychainDelegate:(id)arg2;	// IMP=0x0000000000e4649f
- (id)chipHomeDataSourceWithFabricID:(id)arg1 home:(id)arg2;	// IMP=0x0000000000e4642d
- (void)handleUpdatedPairings:(id)arg1 previousPairings:(id)arg2;	// IMP=0x0000000000e45a97
- (void)_handleActivateCHIPPairingModeAndCreateSetupPayloadStringMessage:(id)arg1;	// IMP=0x0000000000e457ee
- (void)_handleActivateCHIPPairingModeMessage:(id)arg1;	// IMP=0x0000000000e45545
- (void)_handleRemoveCHIPPairingsMessage:(id)arg1;	// IMP=0x0000000000e44a2a
- (void)_handleFetchCHIPPairingsMessage:(id)arg1;	// IMP=0x0000000000e44725
- (void)_removeSystemCommissionerPairingFromAccessoryPairings:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000e44554
@property(readonly, nonatomic) HMMTRAccessoryServer *chipAccessoryServer;
- (void)handleGetAccessoryDiagnosticEventsMessage:(id)arg1;	// IMP=0x0000000000e4409b
- (void)handleGetAccessoryDiagnosticCountersMessage:(id)arg1;	// IMP=0x0000000000e43e2e
- (void)handleGetStartUpColorTemperature:(id)arg1;	// IMP=0x0000000000e43b63
- (void)handleSetStartUpColorTemperature:(id)arg1;	// IMP=0x0000000000e437ec
- (void)handleClearCredentialMessage:(id)arg1;	// IMP=0x0000000000e435c8
- (void)handleClearUserMessage:(id)arg1;	// IMP=0x0000000000e433a4
- (void)handleGetAllUsersMessage:(id)arg1;	// IMP=0x0000000000e431dc
- (void)handleRemoveCorrespondingSystemCommissionerMessage:(id)arg1;	// IMP=0x0000000000e430c7
- (void)handleActivateCHIPPairingModeAndCreateSetupPayloadStringMessage:(id)arg1;	// IMP=0x0000000000e42f17
- (void)handleActivateCHIPPairingModeMessage:(id)arg1;	// IMP=0x0000000000e42d67
- (void)handleRemoveCHIPPairingsMessage:(id)arg1;	// IMP=0x0000000000e429ec
- (void)handleFetchCHIPPairingsMessage:(id)arg1;	// IMP=0x0000000000e4283c
- (void)resetAccessoryDiagnosticCounters;	// IMP=0x0000000000e4273a
@property(readonly) NSArray *accessoryDiagnosticEvents;
@property(readonly) NSDictionary *accessoryDiagnosticCounters;
- (unsigned long long)_threadRSSIToLinkQuality:(id)arg1;	// IMP=0x0000000000e42583
- (unsigned long long)_wifiRSSIToLinkQuality:(id)arg1;	// IMP=0x0000000000e42522
- (void)getLinkQualityForAccessory:(id)arg1 forMessage:(id)arg2;	// IMP=0x0000000000e41ea1
- (_Bool)hmmtrHasThreadServer:(id)arg1;	// IMP=0x0000000000e41e42
- (_Bool)hmmtrHasBLEServer:(id)arg1;	// IMP=0x0000000000e41de3
- (_Bool)hmmtrHasIPServer:(id)arg1;	// IMP=0x0000000000e41d81
- (_Bool)isHMMTRAccessoryServer:(id)arg1;	// IMP=0x0000000000e41d3a
- (void)setCHIPReportHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000e41bfc
- (void)handleCHIPSendRemoteRequestMessage:(id)arg1;	// IMP=0x0000000000e41b91
@property(readonly, copy) NSNumber *chipNodeId;
- (void)handleUpdatedCHIPPropertiesOnAccessoryModel:(id)arg1 actions:(id)arg2;	// IMP=0x0000000000e40a9b
- (void)configureCHIPAccessory;	// IMP=0x0000000000e406d2
- (void)removeAllCHIPPairingsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000e40499
- (id)waitForDoorLockClusterObjectWithFlow:(id)arg1;	// IMP=0x0000000000e402f3
- (id)waitForChipAccessoryServerWithFlow:(id)arg1;	// IMP=0x0000000000e3ffdc
- (void)setDidConfigureCHIPAccessoryServer;	// IMP=0x0000000000e3fcca
- (void)profile:(id)arg1 didUpdateWoWLANInfos:(id)arg2;	// IMP=0x0000000000e67afd
- (void)profile:(id)arg1 didUpdateAccessoryState:(unsigned long long)arg2;	// IMP=0x0000000000e67aa5
- (void)_handleWakeSuspendedAccessoryMessage:(id)arg1;	// IMP=0x0000000000e67852
- (_Bool)_validateIncomingMessage:(id)arg1;	// IMP=0x0000000000e674ae
- (void)_registerForMessages_lowPowerMode;	// IMP=0x0000000000e673a8
- (void)_wol_ignoreWakingViaCharacteristicUpdateFromChangedService:(id)arg1;	// IMP=0x0000000000e67117
- (void)_wol_updateWakingViaCharacteristicForWriteResponses:(id)arg1;	// IMP=0x0000000000e66e85
- (void)_wol_updateWakingViaCharacteristicForWriteRequests:(id)arg1;	// IMP=0x0000000000e66d7b
- (void)_wol_processReadWriteResponseForCharacteristic:(id)arg1 isRead:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000e6691f
- (void)_wol_processDidRemoveHPAccessoryServer:(id)arg1;	// IMP=0x0000000000e66720
- (void)_wol_updateSuspendCapableHAPAccessoryServer:(id)arg1;	// IMP=0x0000000000e6641e
- (void)_wol_runAccessoryTransaction:(id)arg1 localOnly:(_Bool)arg2;	// IMP=0x0000000000e66303
- (void)_wakeSuspendedHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4 activity:(id)arg5;	// IMP=0x0000000000e65eb5
- (_Bool)_handleUpdatedServicesForLowPowerModeProfile;	// IMP=0x0000000000e65b53
- (void)updateSuspendedStateWithWakeNumber:(id)arg1 hapAccessory:(id)arg2;	// IMP=0x0000000000e65a75
- (void)updateSuspendedStateWithConnectionState:(_Bool)arg1 hapAccessory:(id)arg2;	// IMP=0x0000000000e659be
- (_Bool)shouldDiscoverSuspendCapableAccessoryServer:(id)arg1;	// IMP=0x0000000000e657e8
- (_Bool)canReturnCachedValueForCharacteristic:(id)arg1;	// IMP=0x0000000000e65750
- (_Bool)canWakeUpViaWoL;	// IMP=0x0000000000e6568f
- (_Bool)canProceedWithRequests:(id)arg1 suspended:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x0000000000e6553c
@property(readonly, nonatomic) HMDLowPowerModeProfile *lpmProfile;
- (_Bool)isSuspended;	// IMP=0x0000000000e6539c
- (_Bool)supportsWoL;	// IMP=0x0000000000e65313
- (_Bool)isPoweringOn;	// IMP=0x0000000000eb5f17
- (void)cancelPowerOn;	// IMP=0x0000000000eb5ea6
- (void)_cancelPowerOn;	// IMP=0x0000000000eb5e37
- (void)wirelessPowerOn:(CDUnknownBlockType)arg1;	// IMP=0x0000000000eb5d7f
- (void)_wirelessPowerOn:(CDUnknownBlockType)arg1;	// IMP=0x0000000000eb5c96
- (void)powerOnComplete:(id)arg1;	// IMP=0x0000000000eb5bde
- (void)wirelessResumeInit;	// IMP=0x0000000000eb5bab

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(nonatomic) __weak HMDHome *home;
@property(readonly, copy) NSString *privateDescription;
@property(readonly, copy) NSString *propertyDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) Class superclass;

@end

