//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class AVOutputDeviceAuthorizedPeer, HAPPairingIdentity, HMBShareUserID, HMDAccountHandle, HMDAccountIdentifier, HMDAssistantAccessControl, HMDCloudShareMessenger, HMDCloudShareTrustManager, HMDHome, HMDPersonSettingsManager, HMDPhotosPersonManager, HMDSettingsControllerDependency, HMDSiriMultiUserNewLanguageNotificationManager, HMDUserDataController, HMDUserPhotosPersonDataManager, HMDUserSettingsBackingStoreController, HMFMessageDispatcher, HMPhotosPersonManagerSettings, HMUserPresenceAuthorization, NAFuture, NSData, NSNumber, NSObject, NSString, NSUUID;
@protocol HAPKeyStore, HMDUserDataSource, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDUser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSUUID *_uuid;	// 16 = 0x10
    _Bool _remoteAccessAllowed;	// 24 = 0x18
    HMDAccountHandle *_accountHandle;	// 32 = 0x20
    HMDAccountIdentifier *_accountIdentifier;	// 40 = 0x28
    _Bool _needsiTunesMultiUserRepair;	// 48 = 0x30
    unsigned long long _privilege;	// 56 = 0x38
    HMDHome *_home;	// 64 = 0x40
    NSString *_userID;	// 72 = 0x48
    HMUserPresenceAuthorization *_presenceAuthStatus;	// 80 = 0x50
    unsigned long long _camerasAccessLevel;	// 88 = 0x58
    HAPPairingIdentity *_pairingIdentity;	// 96 = 0x60
    NSString *_displayName;	// 104 = 0x68
    HMDAssistantAccessControl *_assistantAccessControl;	// 112 = 0x70
    unsigned long long _announceAccessLevel;	// 120 = 0x78
    unsigned long long _audioAnalysisUserDropInAccessLevel;	// 128 = 0x80
    long long _userCloudShareWithOwnerMessagingState;	// 136 = 0x88
    NSNumber *_matterCASEAuthenticatedTagID;	// 144 = 0x90
    HMBShareUserID *_cloudShareID;	// 152 = 0x98
    NAFuture *_cloudShareIDFuture;	// 160 = 0xa0
    HMDUserPhotosPersonDataManager *_photosPersonDataManager;	// 168 = 0xa8
    HMDPersonSettingsManager *_personSettingsManager;	// 176 = 0xb0
    NSString *_accessCode;	// 184 = 0xb8
    NSUUID *_accessCodeChangedByUserUUID;	// 192 = 0xc0
    HMDUserDataController *_userDataController;	// 200 = 0xc8
    unsigned long long _userAccessPolicy;	// 208 = 0xd0
    HMDSettingsControllerDependency *_sharedSettingsControllerDependency;	// 216 = 0xd8
    HMDSettingsControllerDependency *_privateSettingsControllerDependency;	// 224 = 0xe0
    HMDCloudShareMessenger *_shareMessenger;	// 232 = 0xe8
    HMDUserSettingsBackingStoreController *_privateBackingStoreController;	// 240 = 0xf0
    id <HMDUserDataSource> _dataSource;	// 248 = 0xf8
    HMDSiriMultiUserNewLanguageNotificationManager *_siriMultiUserNewLanguageNotificationManager;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_queue;	// 264 = 0x108
    HMFMessageDispatcher *_messageDispatcher;	// 272 = 0x110
    unsigned long long _announceNotificationModeForCurrentDevice;	// 280 = 0x118
    HMDCloudShareTrustManager *_cloudShareTrustManager;	// 288 = 0x120
    HMDUserSettingsBackingStoreController *_sharedBackingStoreController;	// 296 = 0x128
    id <HAPKeyStore> _keyStore;	// 304 = 0x130
}

+ (id)userDictionaryWithUserID:(id)arg1 privilege:(unsigned long long)arg2 remoteAccessAllowed:(_Bool)arg3 cameraAccessLevel:(unsigned long long)arg4 announceAccessAllowed:(id)arg5 announceAccessLevel:(unsigned long long)arg6 audioAnalysisUserDropInAccessLevel:(unsigned long long)arg7;	// IMP=0x00100000009defbb
+ (id)userWithDictionary:(id)arg1 home:(id)arg2;	// IMP=0x00100000009dec62
+ (id)userWithDictionary:(id)arg1;	// IMP=0x00100000009dec4e
+ (unsigned long long)privilegeFromDictionary:(id)arg1;	// IMP=0x00100000009debf7
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000009debef
+ (id)logCategory;	// IMP=0x00100000009debbf
+ (id)sharedZoneNameForUserUUID:(id)arg1;	// IMP=0x00100000009deb65
+ (id)privateZoneNameForUserUUID:(id)arg1;	// IMP=0x00100000009deb0b
+ (id)UUIDWithUserID:(id)arg1 forHomeIdentifier:(id)arg2 uuid:(id)arg3 pairingIdentity:(id)arg4;	// IMP=0x00100000009de72b
+ (id)userIDForAccountHandle:(id)arg1;	// IMP=0x00100000009de6d8
+ (id)ownerWithUserID:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 homeManager:(id)arg4;	// IMP=0x00100000009de385
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2;	// IMP=0x00100000009de370
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2 forceHH1Key:(_Bool)arg3;	// IMP=0x00100000009de156
+ (unsigned long long)hmdUserPrivilegeFromHMMTRUserPrivilege:(unsigned long long)arg1;	// IMP=0x00100000000a68c1
+ (unsigned long long)hmmtrUserPrivilegeFromHMDUserPrivilege:(unsigned long long)arg1;	// IMP=0x00100000000a68a7
+ (id)av_authorizedPeerForPairingIdentity:(id)arg1 isOwner:(_Bool)arg2;	// IMP=0x00100000003e517e
- (void).cxx_destruct;	// IMP=0x00000000009d6299
@property(readonly) id <HAPKeyStore> keyStore;
@property(retain) HMDUserSettingsBackingStoreController *sharedBackingStoreController;
@property(retain) HMDCloudShareTrustManager *cloudShareTrustManager;
@property unsigned long long announceNotificationModeForCurrentDevice;
@property(retain) HMFMessageDispatcher *messageDispatcher;
@property(readonly) NSObject<OS_dispatch_queue> *queue;
@property(retain) HMDSiriMultiUserNewLanguageNotificationManager *siriMultiUserNewLanguageNotificationManager; // @synthesize siriMultiUserNewLanguageNotificationManager=_siriMultiUserNewLanguageNotificationManager;
@property(readonly) id <HMDUserDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property _Bool needsiTunesMultiUserRepair; // @synthesize needsiTunesMultiUserRepair=_needsiTunesMultiUserRepair;
@property(retain) HMDUserSettingsBackingStoreController *privateBackingStoreController; // @synthesize privateBackingStoreController=_privateBackingStoreController;
@property(retain) HMDCloudShareMessenger *shareMessenger; // @synthesize shareMessenger=_shareMessenger;
@property(retain) HMDSettingsControllerDependency *privateSettingsControllerDependency; // @synthesize privateSettingsControllerDependency=_privateSettingsControllerDependency;
@property(retain) HMDSettingsControllerDependency *sharedSettingsControllerDependency; // @synthesize sharedSettingsControllerDependency=_sharedSettingsControllerDependency;
@property(readonly) unsigned long long userAccessPolicy; // @synthesize userAccessPolicy=_userAccessPolicy;
@property(retain) HMDUserDataController *userDataController; // @synthesize userDataController=_userDataController;
@property(retain) NSUUID *accessCodeChangedByUserUUID; // @synthesize accessCodeChangedByUserUUID=_accessCodeChangedByUserUUID;
@property(copy) NSString *accessCode; // @synthesize accessCode=_accessCode;
@property(retain) HMDPersonSettingsManager *personSettingsManager; // @synthesize personSettingsManager=_personSettingsManager;
@property(retain) HMDUserPhotosPersonDataManager *photosPersonDataManager;
@property(readonly) NAFuture *cloudShareIDFuture; // @synthesize cloudShareIDFuture=_cloudShareIDFuture;
@property(retain) HMBShareUserID *cloudShareID;
@property(retain, nonatomic) NSNumber *matterCASEAuthenticatedTagID; // @synthesize matterCASEAuthenticatedTagID=_matterCASEAuthenticatedTagID;
@property(copy, setter=setUUID:) NSUUID *uuid;
- (id)allAccessoryUUID;	// IMP=0x00000000009d5efd
- (_Bool)_isExplicitContentValueEnabledForAppleMediaAccessory:(id)arg1;	// IMP=0x00000000009d5e2e
- (void)applyConditionalValueUpdateToModels:(id)arg1;	// IMP=0x00000000009d5c59
- (id)pushTokensForDevicesObservingSubjectDevice:(id)arg1 subActivity:(id)arg2;	// IMP=0x00000000009d5b9e
- (void)deregisterIDSActivityObserver:(id)arg1;	// IMP=0x00000000009d5b35
- (void)deregisterIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x00000000009d5a15
- (void)updateIDSActivityObserver:(id)arg1;	// IMP=0x00000000009d5961
- (void)registerIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x00000000009d5841
- (void)cloudShareTrustManager:(id)arg1 didRemoveUserWithUUID:(id)arg2;	// IMP=0x00000000009d5692
- (void)didRemoveTrustZoneInCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009d5588
- (void)didFinishConfiguringForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009d5490
- (void)cloudShareTrustManager:(id)arg1 didFetchOwnerCloudShareID:(id)arg2;	// IMP=0x00000000009d5357
- (_Bool)isOwnerCapableForTrustManager:(id)arg1;	// IMP=0x00000000009d5313
- (id)homeForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009d5301
- (id)ownerForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009d52f8
- (id)zoneNameForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009d5277
- (_Bool)cloudShareTrustManager:(id)arg1 shouldShareTrustWithUser:(id)arg2;	// IMP=0x00000000009d5109
- (void)configureCloudShareTrustManager;	// IMP=0x00000000009d4e33
- (id)trustTargetUUID;	// IMP=0x00000000009d4d48
- (void)updateCloudShareID:(id)arg1;	// IMP=0x00000000009d4a43
- (void)removeCloudShareID;	// IMP=0x00000000009d48f0
- (void)userDataControllerDidUpdateSupportsAutomaticHH2Migration:(id)arg1;	// IMP=0x00000000009d48d7
- (void)updateSupportsHH2MigrationByOwnerManual:(_Bool)arg1 supportsHH2MigrationByOwnerAuto:(_Bool)arg2;	// IMP=0x00000000009d483f
- (void)userDataControllerDidUpdateUserListeningHistoryUpdateControl:(id)arg1;	// IMP=0x00000000009d4826
- (_Bool)userDataController:(id)arg1 isHAPAccessory:(id)arg2;	// IMP=0x00000000009d45ec
- (_Bool)userDataController:(id)arg1 isAppleMediaAccessory:(id)arg2;	// IMP=0x00000000009d43b2
- (id)privateZoneControllerForUserDataController:(id)arg1;	// IMP=0x00000000009d43a0
- (id)sharedZoneControllerForUserDataController:(id)arg1;	// IMP=0x00000000009d438e
- (void)postUserSettingsUpdatedNotificationWithReason:(id)arg1;	// IMP=0x00000000009d42dd
- (void)userDataControllerDidUpdateMediaContentProfile:(id)arg1;	// IMP=0x00000000009d42c4
- (void)userDataControllerDidUpdateAssistantAccessControl:(id)arg1;	// IMP=0x00000000009d42ab
- (_Bool)userDataController:(id)arg1 isAccessoryUserListeningHistoryUpdateCapable:(id)arg2;	// IMP=0x00000000009d3ff8
- (_Bool)userDataController:(id)arg1 isMediaContentProfileCapableAccessoryID:(id)arg2;	// IMP=0x00000000009d3cb1
- (_Bool)userDataController:(id)arg1 isPersonalRequestCapableAccessoryID:(id)arg2;	// IMP=0x00000000009d396a
- (void)backingStoreController:(id)arg1 didUpdatePhotosPersonManagerSettingsModel:(id)arg2 previousPhotosPersonManagerSettingsModel:(id)arg3;	// IMP=0x00000000009d38f0
- (id)ownerForUserSettingsBackingStoreController:(id)arg1;	// IMP=0x00000000009d38e7
- (id)backingStoreController:(id)arg1 createParticipantManagerForCloudZone:(id)arg2;	// IMP=0x00000000009d37eb
- (void)didStopBackingStoreController:(id)arg1;	// IMP=0x00000000009d35f1
- (void)didStartLocalZoneForBackingStoreController:(id)arg1;	// IMP=0x00000000009d3470
- (void)didStartBackingStoreController:(id)arg1;	// IMP=0x00000000009d3407
@property(readonly) NSUUID *userUUID;
@property(readonly) _Bool isRunningOnHomeOwnersDevice;
- (id)settingsControllerFollowerKeyPaths:(id)arg1;	// IMP=0x00000000009d32e7
- (id)settingsController:(id)arg1 willUpdateSettingAtKeyPath:(id)arg2 withValue:(id)arg3;	// IMP=0x00000000009d2e03
- (void)settingsController:(id)arg1 didUpdateWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009d2db4
- (id)dictionaryEncoding;	// IMP=0x00000000009d2c9a
- (void)removeCloudData;	// IMP=0x00000000009d2b78
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;	// IMP=0x00000000009d26c2
- (id)newModelWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000009d260e
- (id)modelObjectWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000009d25f7
- (id)backingStoreObjects:(long long)arg1;	// IMP=0x00000000009d238a
- (id)announceUserSettingsModelWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000009d22b8
- (void)migrateCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000009d1e48
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;	// IMP=0x00000000009d19be
- (void)handleUpdatedCATForUser;	// IMP=0x00000000009d1981
- (void)_transactionUserUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x00000000009d028f
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x00000000009cfb14
- (void)_encodeWithCoder:(id)arg1;	// IMP=0x00000000009ce64f
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000009ce600
@property(readonly, copy, nonatomic) NSString *encodingRemoteDisplayName;
- (id)_initWithCoder:(id)arg1;	// IMP=0x00000000009cda23
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000009cd9ba
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSObject<OS_dispatch_queue>",?,R,N

- (id)messageDestination;	// IMP=0x00000000009cd93c
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;	// IMP=0x00000000009cd8da
@property(readonly, copy) NSData *publicKey;
@property(readonly, copy) NSString *pairingUsername;
@property(copy, nonatomic) NSString *userID;
@property(readonly) NSNumber *uniqueIDForAccessories;
@property(readonly) NSNumber *notificationContextNFCIdentifier;
@property(readonly) NSNumber *notificationContextHAPIdentifier;
- (void)configurePersonSettingsManager;	// IMP=0x00000000009cd2a7
- (void)configurePhotosPersonDataManager;	// IMP=0x00000000009cd134
@property(readonly) HMDPhotosPersonManager *photosPersonManager;
@property(readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
- (void)saveSyncDataToLocalDisk:(id)arg1;	// IMP=0x00000000009ccb7e
- (id)syncDataFileNameWithHomeUUID:(id)arg1;	// IMP=0x00000000009ccad3
- (id)announceNotificationFileName;	// IMP=0x00000000009cca74
- (id)announceNotificationFileNameForUserUUID:(id)arg1;	// IMP=0x00000000009cc9f8
- (void)savePersonClassificationSettingsForCurrentUserToLocalDisk;	// IMP=0x00000000009cc81c
- (void)saveAnnounceNotificationModeForCurrentUserToLocalDisk;	// IMP=0x00000000009cc3ad
- (void)_updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x00000000009cc0a5
- (void)updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x00000000009cc029
- (void)_handleAnnounceSettingsUpdate:(id)arg1;	// IMP=0x00000000009cbc87
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x00000000009cbb95
- (void)removeAccessoriesFromAssistantAccessControlList:(id)arg1;	// IMP=0x00000000009cbb1d
- (void)enableUserListeningHistoryForAccessory:(id)arg1;	// IMP=0x00000000009cba89
- (void)_handleUserListeningHistoryUpdateControlUpdatedAccessoryUUIDs:(id)arg1;	// IMP=0x00000000009cb235
- (void)handleUserListeningHistoryUpdateControlUpdatedAccessoryUUIDs:(id)arg1;	// IMP=0x00000000009cb1a1
- (void)_handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x00000000009ca996
- (void)handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x00000000009ca902
- (void)_handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x00000000009c97df
- (void)handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x00000000009c974b
- (_Bool)isCurrentUserAndOwner;	// IMP=0x00000000009c95c9
@property(retain) HMDAssistantAccessControl *assistantAccessControl; // @synthesize assistantAccessControl=_assistantAccessControl;
@property(readonly) NSUUID *assistantAccessControlModelUUID;
@property(readonly, getter=isValid) _Bool valid;
@property(readonly, getter=isRemoteGateway) _Bool remoteGateway;
@property unsigned long long audioAnalysisUserDropInAccessLevel;
@property unsigned long long announceAccessLevel;
- (unsigned long long)defaultAnnounceUserAccessLevel;	// IMP=0x00000000009c9376
@property(readonly, getter=isAnnounceAccessAllowed) _Bool announceAccessAllowed;
@property unsigned long long camerasAccessLevel;
- (_Bool)_setRemoteAccessAllowed:(_Bool)arg1;	// IMP=0x00000000009c9245
@property(getter=isRemoteAccessAllowed) _Bool remoteAccessAllowed;
- (_Bool)refreshDisplayName;	// IMP=0x00000000009c9132
- (void)setDisplayName:(id)arg1;	// IMP=0x00000000009c90a7
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) HMUserPresenceAuthorization *presenceAuthStatus;
- (void)__handleRemovedAccount:(id)arg1;	// IMP=0x00000000009c8d86
- (void)__handleAddedAccount:(id)arg1;	// IMP=0x00000000009c8ac7
- (_Bool)requiresMakoSupport;	// IMP=0x00000000009c8a7e
- (id)account;	// IMP=0x00000000009c89ea
- (void)_handleNeedsiTunesMultiUserRepair:(id)arg1;	// IMP=0x00000000009c8569
- (void)_handleShareClientRepairRequest:(id)arg1;	// IMP=0x00000000009c79ec
- (void)_sendAccountMessage:(id)arg1 payload:(id)arg2 deviceCapabilities:(id)arg3 multicast:(_Bool)arg4 preferPrimary:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000009c767e
- (void)_sendSecureShareClientPayloadToMostEligibleDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009c7251
- (void)_handleMultiUserSharePayloadRequest:(id)arg1;	// IMP=0x00000000009c64cd
- (void)_handleShareLookupInfoRequest:(id)arg1;	// IMP=0x00000000009c5f23
- (void)_handleLegacyPairingIdentityRequest:(id)arg1;	// IMP=0x00000000009c597e
- (void)fetchPairingIdentityForClientWithMessage:(id)arg1;	// IMP=0x00000000009c524c
- (void)_handlePairingIdentityRequest:(id)arg1;	// IMP=0x00000000009c507d
- (_Bool)matchingPairingIdentityIdentifier:(id)arg1;	// IMP=0x00000000009c4fe8
- (void)deregisterIdentity;	// IMP=0x00000000009c4f6d
- (void)registerIdentity;	// IMP=0x00000000009c4ec0
@property(copy) HAPPairingIdentity *pairingIdentity;
- (void)pbsUserProfileWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000009c4c27
- (id)spiClientIdentifier;	// IMP=0x00000000009c4c12
@property(copy) HMDAccountIdentifier *accountIdentifier;
- (void)setAccountHandle:(id)arg1;	// IMP=0x00000000009c49da
- (id)accountHandle;	// IMP=0x00000000009c4994
@property(readonly) _Bool isCurrentUser;
- (_Bool)updateAdministrator:(_Bool)arg1;	// IMP=0x00000000009c48e3
@property unsigned long long privilege;
- (_Bool)isPending;	// IMP=0x00000000009c4765
@property(readonly, getter=isOwner) _Bool owner;
@property(readonly, getter=isAdministrator) _Bool administrator;
- (unsigned long long)_compatiblePrivilege;	// IMP=0x00000000009c4695
@property __weak HMDHome *home; // @synthesize home=_home;
- (unsigned long long)allowedRemoteEventAccessUserTypes;	// IMP=0x00000000009c45cf
- (void)deregisterForMessages;	// IMP=0x00000000009c44bf
- (void)registerForMessages;	// IMP=0x00000000009c4083
- (void)unconfigure;	// IMP=0x00000000009c3ff6
- (void)_recoverTrustManagerDueToUUIDChange;	// IMP=0x00000000009c3eb6
- (void)updateSharedBackingStoreControllerParticipants;	// IMP=0x00000000009c3e64
- (void)_recoverUserSettingsDueToUUIDChange;	// IMP=0x00000000009c3ad5
- (void)recoverUserCloudDataDueToUUIDChangeFromOldUUID:(id)arg1;	// IMP=0x00000000009c3a41
- (void)_handleCloudShareWithOwnerMessageError;	// IMP=0x00000000009c3a01
@property long long userCloudShareWithOwnerMessagingState;
- (long long)sharedUserSettingsLogEventBackingStoreControllerRunState;	// IMP=0x00000000009c3943
- (void)initializeUserSettingsWithHome:(id)arg1;	// IMP=0x00000000009c316d
- (id)sharedZoneName;	// IMP=0x00000000009c3103
- (id)privateZoneName;	// IMP=0x00000000009c3099
- (void)handleUserDataControllerInitialized:(id)arg1;	// IMP=0x00000000009c3047
- (void)configureWithHome:(id)arg1;	// IMP=0x00000000009c2b86
- (_Bool)hasDeviceWithHomeKitVersionGreaterThanVersion:(id)arg1;	// IMP=0x00000000009c295b
- (id)dumpState;	// IMP=0x00000000009c228a
- (id)attributeDescriptions;	// IMP=0x00000000009c1c06
- (id)shortDescription;	// IMP=0x00000000009c1b44
- (_Bool)isAccountEqualWithUser:(id)arg1;	// IMP=0x00000000009c19bd
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000009c18e1
@property(readonly) unsigned long long hash;
- (void)dealloc;	// IMP=0x00000000009c1812
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 keyStore:(id)arg5 dataSource:(id)arg6;	// IMP=0x00000000009c1565
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x00000000009c1485
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;	// IMP=0x00000000009c1369
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x00000000009c12be
- (id)initWithModelObject:(id)arg1;	// IMP=0x00000000009c0e47
- (id)privateSettingValuesByKeyPath;	// IMP=0x00000000009c0df7
- (id)sharedSettingValuesByKeyPath;	// IMP=0x00000000009c0da7
- (void)_setUuidUnsafely:(id)arg1;	// IMP=0x00000000009c0d93
@property(readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property(readonly) _Bool hasCameraClipsAccess;
@property(readonly, copy) NSData *nfcIssuerKeyIdentifier;

// Remaining properties
@property(readonly, getter=isCurrentUser) _Bool currentUser;
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

