//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSISVariable, NSString;

@interface NSLayoutAnchor : NSObject
{
    id _referenceItem;	// 8 = 0x8
    long long _attr;	// 16 = 0x10
    NSISVariable *_variable;	// 24 = 0x18
    NSString *_name;	// 32 = 0x20
    id _cachedReferenceItems;	// 40 = 0x28
    id _reserved;	// 48 = 0x30
    unsigned int _type:2;	// 56 = 0x38
    unsigned int _reserved3:30;	// 56 = 0x38
}

+ (id)anchorNamed:(id)arg1 inItem:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x001000000002f7d8
+ (id)anchorNamed:(id)arg1 inItem:(id)arg2;	// IMP=0x001000000002f7c3
+ (id)anchorWithName:(id)arg1 forReferenceView:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x001000000002f7b1
+ (id)anchorWithName:(id)arg1 forReferenceView:(id)arg2;	// IMP=0x001000000002f79f
+ (id)layoutAnchorWithName:(id)arg1 forReferenceView:(id)arg2;	// IMP=0x001000000002f78d
+ (id)anchorWithItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x001000000002f4c2
+ (id)layoutAnchorWithItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x001000000002f4b0
+ (id)_anchorForItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x001000000002f0d4
- (id)constraintLessThanOrEqualToAnchor:(id)arg1;	// IMP=0x00000000000319ea
- (id)constraintGreaterThanOrEqualToAnchor:(id)arg1;	// IMP=0x00000000000319a2
- (id)constraintEqualToAnchor:(id)arg1;	// IMP=0x000000000003195d
- (id)constraintLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000031901
- (id)constraintGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x00000000000318a7
- (id)constraintEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000031850
- (long long)_constraintAttribute;	// IMP=0x0000000000031846
- (id)_constraintItem;	// IMP=0x000000000003183c
- (_Bool)nsli_lowerIntoExpression:(id)arg1 withCoefficient:(double)arg2 forConstraint:(id)arg3;	// IMP=0x000000000003122b
- (id)description;	// IMP=0x000000000003102a
- (id)_referencingConstraints;	// IMP=0x0000000000030e5c
- (id)constraintsAffectingLayout;	// IMP=0x0000000000030ba8
- (_Bool)hasAmbiguousLayout;	// IMP=0x0000000000030a28
- (double)_valueInEngine:(id)arg1;	// IMP=0x000000000003089a
- (id)_equationDescriptionLegendEntries;	// IMP=0x0000000000030528
- (id)_equationDescriptionInParent;	// IMP=0x00000000000303f2
- (id)equationDescription;	// IMP=0x00000000000303ea
- (_Bool)isCompatibleWithAnchor:(id)arg1;	// IMP=0x000000000003035b
- (_Bool)validateOtherAttribute:(long long)arg1;	// IMP=0x00000000000302cc
- (id)_referencedLayoutItems;	// IMP=0x000000000003026a
- (void)_accumulateReferenceLayoutItemsIntoTable:(id)arg1;	// IMP=0x000000000002ffff
- (id)_expressionInContext:(CDStruct_1b4a36b4)arg1;	// IMP=0x000000000002fb90
- (id)_variableName;	// IMP=0x000000000002facc
- (id)_referenceItem;	// IMP=0x000000000002fa15
- (id)_referenceView;	// IMP=0x000000000002fa03
- (id)initWithIndependentVariableName:(id)arg1 item:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x000000000002f8d4
- (long long)_proxiedAttribute;	// IMP=0x000000000002f6d6
- (id)_proxiedItem;	// IMP=0x000000000002f61f
- (id)initWithItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x000000000002f4f6
- (id)item;	// IMP=0x000000000002f4a6
- (id)anchorWithName:(id)arg1;	// IMP=0x000000000002f454
- (id)anchorWithName:(id)arg1 referenceItem:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x000000000002f3d7
- (id)name;	// IMP=0x000000000002f360
- (id)_expressionInDefaultContextWithEngine:(id)arg1;	// IMP=0x000000000002f09d
- (id)_constituentAnchors;	// IMP=0x000000000002ee8d
- (id)_nearestAncestorLayoutItem;	// IMP=0x000000000002ecc2
- (long long)_anchorType;	// IMP=0x000000000002ecb5
- (id)initWithAnchor:(id)arg1;	// IMP=0x000000000002eaae
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000002ea61
- (unsigned long long)hash;	// IMP=0x000000000002e9a0
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000002e7cc
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000002e697
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000002e3d4
- (void)dealloc;	// IMP=0x000000000002e370
- (id)initWithName:(id)arg1 referenceItem:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x000000000002e300
- (id)init;	// IMP=0x000000000002e2e7
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;	// IMP=0x0000000000005d61
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;	// IMP=0x0000000000005d47
- (id)ruleEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;	// IMP=0x0000000000005d2d
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000005d13
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000005cf9
- (id)ruleEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000005cdf
- (id)ruleLessThanOrEqualToAnchor:(id)arg1;	// IMP=0x0000000000005c53
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1;	// IMP=0x0000000000005bc9
- (id)ruleEqualToAnchor:(id)arg1;	// IMP=0x0000000000005b42
- (id)observableValueInItem:(id)arg1;	// IMP=0x00000000000325c7
- (double)valueInItem:(id)arg1;	// IMP=0x00000000000324d3

@end

