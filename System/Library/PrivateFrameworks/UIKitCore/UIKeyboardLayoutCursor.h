//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSString, UIAlertController, UIKBTree, UILabel, UILexicon, UIView, UIWindow;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutCursor
{
    UIKBTree *_indirectKeyboard;	// 744 = 0x2e8
    UIView *_selectionView;	// 752 = 0x2f0
    NSArray *_keyplaneKeys;	// 760 = 0x2f8
    long long _selectedKeyIndex;	// 768 = 0x300
    _Bool _ignoreEventsUntilPressEnds;	// 776 = 0x308
    UILexicon *_recentInputs;	// 784 = 0x310
    _Bool _disableTouchInput;	// 792 = 0x318
    UIKBTree *_cachedMultitapKeyplane;	// 800 = 0x320
    _Bool _cachedCanMultitap;	// 808 = 0x328
    UILabel *_dictationHelpLabel;	// 816 = 0x330
    _Bool _didVariantDelete;	// 824 = 0x338
    _Bool _isForwardingEvent;	// 825 = 0x339
    int _overridenSelectedKeyType;	// 828 = 0x33c
    struct CGPoint _keyplaneSwitchSelectedKeyFrameCenter;	// 832 = 0x340
    _Bool _selectInitialKey;	// 848 = 0x350
    _Bool _suppressOperations;	// 849 = 0x351
    _Bool _overrideInitialKey;	// 850 = 0x352
    _Bool _shouldConfigureFloatingContentView;	// 851 = 0x353
    _Bool _shouldToggleLetterCaseNext;	// 852 = 0x354
    UIAlertController *_recentInputsAlert;	// 856 = 0x358
    NSString *_keyplaneBeforeDictation;	// 864 = 0x360
    long long _selectedKeyBeforeDictation;	// 872 = 0x368
    unsigned long long _lastSelectedKeyIndex;	// 880 = 0x370
    UIWindow *_focusWindow;	// 888 = 0x378
}

+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000d0b746
+ (id)carKeyboardNameForKeyboard:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000d0b623
- (void).cxx_destruct;	// IMP=0x0000000000d15cec
@property(nonatomic) __weak UIWindow *focusWindow; // @synthesize focusWindow=_focusWindow;
@property(nonatomic) _Bool shouldToggleLetterCaseNext; // @synthesize shouldToggleLetterCaseNext=_shouldToggleLetterCaseNext;
@property(nonatomic) _Bool shouldConfigureFloatingContentView; // @synthesize shouldConfigureFloatingContentView=_shouldConfigureFloatingContentView;
@property(nonatomic) unsigned long long lastSelectedKeyIndex; // @synthesize lastSelectedKeyIndex=_lastSelectedKeyIndex;
@property(nonatomic) _Bool overrideInitialKey; // @synthesize overrideInitialKey=_overrideInitialKey;
@property(nonatomic) _Bool suppressOperations; // @synthesize suppressOperations=_suppressOperations;
@property(nonatomic) long long selectedKeyBeforeDictation; // @synthesize selectedKeyBeforeDictation=_selectedKeyBeforeDictation;
@property(retain, nonatomic) NSString *keyplaneBeforeDictation; // @synthesize keyplaneBeforeDictation=_keyplaneBeforeDictation;
@property(retain, nonatomic) UIAlertController *recentInputsAlert; // @synthesize recentInputsAlert=_recentInputsAlert;
- (_Bool)isKeyboardRightToLeft;	// IMP=0x0000000000d15b3c
- (_Bool)isAppRightToLeft;	// IMP=0x0000000000d15b18
@property(readonly, nonatomic, getter=isSlimLinearKeyboardTV) _Bool slimLinearKeyboardTV;
- (double)defaultCursorAdjustDistance;	// IMP=0x0000000000d15ac1
- (id)getRomanAccentVariantsForString:(id)arg1 inputMode:(id)arg2 keyboardVariantIndludes:(int)arg3;	// IMP=0x0000000000d15988
- (_Bool)_isKeyboardReverseOfAppLayoutDirection;	// IMP=0x0000000000d158e3
- (unsigned long long)_indexOfFirstKeyPassingTest:(CDUnknownBlockType)arg1;	// IMP=0x0000000000d15788
- (_Bool)_handleMoveWithEvent:(id)arg1;	// IMP=0x0000000000d15658
- (_Bool)_isDirectionalHeading:(unsigned long long)arg1;	// IMP=0x0000000000d15644
- (void)_moveWithEvent:(id)arg1;	// IMP=0x0000000000d155fa
- (_Bool)_handleWheelChangedWithEvent:(id)arg1;	// IMP=0x0000000000d155a7
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x0000000000d1555d
- (_Bool)_handleRemoteControlReceivedWithEvent:(id)arg1;	// IMP=0x0000000000d15503
- (void)remoteControlReceivedWithEvent:(id)arg1;	// IMP=0x0000000000d154b9
- (_Bool)_handlePresses:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000d15016
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000d14d22
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000d14927
- (_Bool)_menuTapShouldStopDictation;	// IMP=0x0000000000d14895
- (_Bool)_menuTapShouldExitVariants;	// IMP=0x0000000000d147e8
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000d147e2
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000d14330
- (void)handleDidFinishDictation:(id)arg1;	// IMP=0x0000000000d1431e
- (void)returnToKeyplaneAfterDictation;	// IMP=0x0000000000d1413e
- (void)switchToDictationKeyplaneWithActivationIdentifier:(id)arg1;	// IMP=0x0000000000d13de7
- (unsigned long long)getNextKeyplaneIndex:(unsigned long long)arg1;	// IMP=0x0000000000d13b0c
- (_Bool)handleVisualDirectionalInput:(int)arg1;	// IMP=0x0000000000d13364
- (_Bool)handleLinearDirectionalInput:(int)arg1;	// IMP=0x0000000000d12e93
- (void)handleVariantDeleteIfNecessaryForKey:(id)arg1;	// IMP=0x0000000000d12b12
- (void)clearVariantStateForKey:(id)arg1;	// IMP=0x0000000000d12a66
- (void)takeKeyAction:(id)arg1;	// IMP=0x0000000000d11ab8
- (_Bool)canHandlePresses:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000d11840
- (_Bool)canHandleEvent:(id)arg1;	// IMP=0x0000000000d11829
- (id)keyHitTestInSameRowAsCenter:(struct CGPoint)arg1 size:(struct CGSize)arg2;	// IMP=0x0000000000d11464
- (long long)targetKeyIndexAtOffset:(struct CGPoint)arg1 fromKey:(id)arg2;	// IMP=0x0000000000d110a9
- (long long)targetKeyIndexFromPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x0000000000d1104e
- (long long)targetKeyIndexFromPoint:(struct CGPoint)arg1;	// IMP=0x0000000000d11031
- (void)setHighlightedVariantIndex:(long long)arg1 key:(id)arg2;	// IMP=0x0000000000d10f95
- (_Bool)refreshSelectedCellIfNecessaryForKey:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000d10dc0
- (_Bool)refreshSelectedCellIfNecessaryForKey:(id)arg1;	// IMP=0x0000000000d10da9
- (void)setSelectedKeyIndex:(long long)arg1;	// IMP=0x0000000000d1092b
- (void)deactivateKey:(id)arg1;	// IMP=0x0000000000d10865
- (struct CGRect)selectionFrameForKeyIndex:(long long)arg1;	// IMP=0x0000000000d10734
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000d10716
- (void)restoreFocusFromEntryPoint:(struct CGPoint)arg1;	// IMP=0x0000000000d10674
- (void)setCursorLocation:(unsigned long long)arg1;	// IMP=0x0000000000d1040a
- (unsigned long long)cursorLocation;	// IMP=0x0000000000d0ff03
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000d0fe21
- (int)enabledStateForKey:(id)arg1;	// IMP=0x0000000000d0fd85
- (int)activeStateForKey:(id)arg1;	// IMP=0x0000000000d0fcf5
- (void)showPopupKeyplaneSwitcher;	// IMP=0x0000000000d0fafe
- (void)longPressAction;	// IMP=0x0000000000d0f939
- (void)endMultitapForKey:(id)arg1;	// IMP=0x0000000000d0f842
- (_Bool)canMultitap;	// IMP=0x0000000000d0f6a9
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x0000000000d0f67f
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x0000000000d0f674
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000d0f56a
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000d0f48f
- (_Bool)isKeyplaneDisabledWithName:(id)arg1;	// IMP=0x0000000000d0f309
- (_Bool)shouldToggleKeyplaneWithName:(id)arg1;	// IMP=0x0000000000d0f294
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000d0f28c
- (void)setDisableTouchInput:(_Bool)arg1;	// IMP=0x0000000000d0f27c
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000d0f22e
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000d0f207
- (_Bool)isKanaPlane;	// IMP=0x0000000000d0f1c3
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000d0f175
- (void)setShift:(_Bool)arg1;	// IMP=0x0000000000d0f120
- (_Bool)ignoresShiftState;	// IMP=0x0000000000d0f0d2
- (_Bool)usesAutoShift;	// IMP=0x0000000000d0f084
- (id)_keyplaneForKeyplaneProperties;	// IMP=0x0000000000d0efeb
- (_Bool)isPossibleToTypeFast;	// IMP=0x0000000000d0efe3
- (_Bool)supportsEmoji;	// IMP=0x0000000000d0efdb
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000d0efd3
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x0000000000d0efcb
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x0000000000d0efc3
- (void)setRecentInputs:(id)arg1;	// IMP=0x0000000000d0ef7b
- (void)acceptRecentInputIfNecessary;	// IMP=0x0000000000d0ee43
- (void)updateRecentInputsKeyIfNecessary;	// IMP=0x0000000000d0ed96
- (void)didSelectRecentInputString:(id)arg1;	// IMP=0x0000000000d0ec1d
- (void)alertDidDismiss;	// IMP=0x0000000000d0eae6
- (void)showRecentInputsAlert;	// IMP=0x0000000000d0e663
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x0000000000d0e649
- (void)updateDictationHelpString;	// IMP=0x0000000000d0d903
- (void)updateKeyplaneSwitchEdgeBiases;	// IMP=0x0000000000d0d59e
- (void)selectInitialKeyIfNecessary;	// IMP=0x0000000000d0cfa4
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x0000000000d0cf5a
- (void)setKeyplaneName:(id)arg1;	// IMP=0x0000000000d0bbfd
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000d0bbf7
- (id)cacheTokenForKeyplane:(id)arg1;	// IMP=0x0000000000d0bb7d
- (void)setRenderConfig:(id)arg1;	// IMP=0x0000000000d0bb3c
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x0000000000d0baee
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x0000000000d0b9ef
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000d0b4ed
- (id)keyViewAnimator;	// IMP=0x0000000000d0b403
- (void)configureFloatingContentViewsIfNeeded;	// IMP=0x0000000000d0af34
- (unsigned long long)variantCountForKey:(id)arg1;	// IMP=0x0000000000d0ae83
@property(readonly, nonatomic) UIKBTree *currentKey;
- (void)runWithSuppressedActions:(CDUnknownBlockType)arg1;	// IMP=0x0000000000d0ade7
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000d0ada1
- (void)dealloc;	// IMP=0x0000000000d0ad51
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000d0ac38

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

